items:
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl
  id: _files_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  children:
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNode(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNode(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeWithServiceResponseAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTask(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTask(String,String,String,Boolean,FileDeleteFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskWithServiceResponseAsync(String,String,String,Boolean,FileDeleteFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.FilesImpl(Retrofit,BatchServiceClientImpl)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNode(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNode(String,String,String,FileGetFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions,final ServiceCallback<InputStream>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String,final ServiceCallback<InputStream>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeWithServiceResponseAsync(String,String,String,FileGetFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTask(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTask(String,String,String,FileGetFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String,FileGetFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String,FileGetFromTaskOptions,final ServiceCallback<InputStream>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String,final ServiceCallback<InputStream>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskWithServiceResponseAsync(String,String,String,FileGetFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNode(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNode(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeAsync(String,String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeWithServiceResponseAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTask(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTask(String,String,String,FileGetPropertiesFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskAsync(String,String,String,FileGetPropertiesFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskAsync(String,String,String,FileGetPropertiesFromTaskOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskAsync(String,String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskWithServiceResponseAsync(String,String,String,FileGetPropertiesFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNode(final String,final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNode(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions,final ListOperationCallback<NodeFile>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String,final ListOperationCallback<NodeFile>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNext(final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNext(final String,final FileListFromComputeNodeNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextSinglePageAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextSinglePageAsync(final String,final FileListFromComputeNodeNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextWithServiceResponseAsync(final String,final FileListFromComputeNodeNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeSinglePageAsync(final String,final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeSinglePageAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeWithServiceResponseAsync(final String,final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeWithServiceResponseAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTask(final String,final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTask(final String,final String,final Boolean,final FileListFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions,final ListOperationCallback<NodeFile>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String,final ListOperationCallback<NodeFile>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNext(final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNext(final String,final FileListFromTaskNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextSinglePageAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextSinglePageAsync(final String,final FileListFromTaskNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextWithServiceResponseAsync(final String,final FileListFromTaskNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskSinglePageAsync(final String,final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskSinglePageAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskWithServiceResponseAsync(final String,final String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskWithServiceResponseAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: FilesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
      branch: master
      repo: https://github.com/Azure/azure-batch-sdk-for-java
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 66
  package: com.microsoft.azure.batch.protocol.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: &o1
    content: public class FilesImpl implements Files
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.batch.protocol._files
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNode(String,String,String)
  id: deleteFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNode(String poolId, String nodeId, String filePath)
  fullName: void com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNode(String poolId, String nodeId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 821
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public void deleteFromComputeNode(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromComputeNode(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNode(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  id: deleteFromComputeNode(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNode(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNode(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 915
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public void deleteFromComputeNode(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromComputeNode(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String)
  id: deleteFromComputeNodeAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 848
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  id: deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 946
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions,final ServiceCallback<Void>)
  id: deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 931
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String,final ServiceCallback<Void>)
  id: deleteFromComputeNodeAsync(String,String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 835
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeWithServiceResponseAsync(String,String,String)
  id: deleteFromComputeNodeWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 866
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders>> deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeWithServiceResponseAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeWithServiceResponseAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  id: deleteFromComputeNodeWithServiceResponseAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 966
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders>> deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeWithServiceResponseAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTask(String,String,String)
  id: deleteFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTask(String jobId, String taskId, String filePath)
  fullName: void com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTask(String jobId, String taskId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 142
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public void deleteFromTask(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromTask(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTask(String,String,String,Boolean,FileDeleteFromTaskOptions)
  id: deleteFromTask(String,String,String,Boolean,FileDeleteFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTask(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTask(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 236
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public void deleteFromTask(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromTask(String,String,String,Boolean,FileDeleteFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String)
  id: deleteFromTaskAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskAsync(String jobId, String taskId, String filePath)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskAsync(String jobId, String taskId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 169
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteFromTaskAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions)
  id: deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 267
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions,final ServiceCallback<Void>)
  id: deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 252
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String,final ServiceCallback<Void>)
  id: deleteFromTaskAsync(String,String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 156
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskWithServiceResponseAsync(String,String,String)
  id: deleteFromTaskWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 187
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders>> deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_delete_from_task_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromTaskWithServiceResponseAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskWithServiceResponseAsync(String,String,String,Boolean,FileDeleteFromTaskOptions)
  id: deleteFromTaskWithServiceResponseAsync(String,String,String,Boolean,FileDeleteFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 287
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders>> deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_delete_from_task_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromTaskWithServiceResponseAsync(String,String,String,Boolean,FileDeleteFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.FilesImpl(Retrofit,BatchServiceClientImpl)
  id: FilesImpl(Retrofit,BatchServiceClientImpl)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl.FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 78
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Initializes an instance of <xref href="com.microsoft.azure.batch.protocol.implementation._files_impl" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNode(String,String,String)
  id: getFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNode(String poolId, String nodeId, String filePath)
  fullName: InputStream com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNode(String poolId, String nodeId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1032
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public InputStream getFromComputeNode(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromComputeNode(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNode(String,String,String,FileGetFromComputeNodeOptions)
  id: getFromComputeNode(String,String,String,FileGetFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNode(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: InputStream com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNode(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1136
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public InputStream getFromComputeNode(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromComputeNode(String,String,String,FileGetFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String)
  id: getFromComputeNodeAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1059
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getFromComputeNodeAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions)
  id: getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1165
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions,final ServiceCallback<InputStream>)
  id: getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback<InputStream> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1151
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions,final ServiceCallback<InputStream>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String,final ServiceCallback<InputStream>)
  id: getFromComputeNodeAsync(String,String,String,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<InputStream> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1046
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String,final ServiceCallback<InputStream>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeWithServiceResponseAsync(String,String,String)
  id: getFromComputeNodeWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1077
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders>> getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headerse7daa122
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromComputeNodeWithServiceResponseAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeWithServiceResponseAsync(String,String,String,FileGetFromComputeNodeOptions)
  id: getFromComputeNodeWithServiceResponseAsync(String,String,String,FileGetFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1184
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders>> getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headerse7daa122
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromComputeNodeWithServiceResponseAsync(String,String,String,FileGetFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTask(String,String,String)
  id: getFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTask(String jobId, String taskId, String filePath)
  fullName: InputStream com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTask(String jobId, String taskId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 353
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public InputStream getFromTask(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromTask(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTask(String,String,String,FileGetFromTaskOptions)
  id: getFromTask(String,String,String,FileGetFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: InputStream com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 457
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public InputStream getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromTask(String,String,String,FileGetFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String)
  id: getFromTaskAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskAsync(String jobId, String taskId, String filePath)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskAsync(String jobId, String taskId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 380
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getFromTaskAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String,FileGetFromTaskOptions)
  id: getFromTaskAsync(String,String,String,FileGetFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 486
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String,FileGetFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String,FileGetFromTaskOptions,final ServiceCallback<InputStream>)
  id: getFromTaskAsync(String,String,String,FileGetFromTaskOptions,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback<InputStream> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 472
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String,FileGetFromTaskOptions,final ServiceCallback<InputStream>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String,final ServiceCallback<InputStream>)
  id: getFromTaskAsync(String,String,String,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<InputStream> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 367
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String,final ServiceCallback<InputStream>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskWithServiceResponseAsync(String,String,String)
  id: getFromTaskWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 398
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders>> getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._file_get_from_task_headerse7daa122
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromTaskWithServiceResponseAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskWithServiceResponseAsync(String,String,String,FileGetFromTaskOptions)
  id: getFromTaskWithServiceResponseAsync(String,String,String,FileGetFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 505
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders>> getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._file_get_from_task_headerse7daa122
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromTaskWithServiceResponseAsync(String,String,String,FileGetFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNode(String,String,String)
  id: getPropertiesFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromComputeNode(String poolId, String nodeId, String filePath)
  fullName: void com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromComputeNode(String poolId, String nodeId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1269
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public void getPropertiesFromComputeNode(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNode(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNode(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  id: getPropertiesFromComputeNode(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromComputeNode(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromComputeNode(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1371
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public void getPropertiesFromComputeNode(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNode(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeAsync(String,String,String)
  id: getPropertiesFromComputeNodeAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1296
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public Observable<Void> getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  id: getPropertiesFromComputeNodeAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1400
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public Observable<Void> getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions,final ServiceCallback<Void>)
  id: getPropertiesFromComputeNodeAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1386
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeAsync(String,String,String,final ServiceCallback<Void>)
  id: getPropertiesFromComputeNodeAsync(String,String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1283
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeAsync(String,String,String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeWithServiceResponseAsync(String,String,String)
  id: getPropertiesFromComputeNodeWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1314
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromComputeNodeHeaders>> getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeWithServiceResponseAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromComputeNodeWithServiceResponseAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  id: getPropertiesFromComputeNodeWithServiceResponseAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1419
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromComputeNodeHeaders>> getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeWithServiceResponseAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTask(String,String,String)
  id: getPropertiesFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromTask(String jobId, String taskId, String filePath)
  fullName: void com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromTask(String jobId, String taskId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 590
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public void getPropertiesFromTask(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromTask(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTask(String,String,String,FileGetPropertiesFromTaskOptions)
  id: getPropertiesFromTask(String,String,String,FileGetPropertiesFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromTask(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromTask(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 692
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public void getPropertiesFromTask(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromTask(String,String,String,FileGetPropertiesFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskAsync(String,String,String)
  id: getPropertiesFromTaskAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromTaskAsync(String jobId, String taskId, String filePath)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromTaskAsync(String jobId, String taskId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 617
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<Void> getPropertiesFromTaskAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskAsync(String,String,String,FileGetPropertiesFromTaskOptions)
  id: getPropertiesFromTaskAsync(String,String,String,FileGetPropertiesFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 721
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<Void> getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskAsync(String,String,String,FileGetPropertiesFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskAsync(String,String,String,FileGetPropertiesFromTaskOptions,final ServiceCallback<Void>)
  id: getPropertiesFromTaskAsync(String,String,String,FileGetPropertiesFromTaskOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 707
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskAsync(String,String,String,FileGetPropertiesFromTaskOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskAsync(String,String,String,final ServiceCallback<Void>)
  id: getPropertiesFromTaskAsync(String,String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 604
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskAsync(String,String,String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskWithServiceResponseAsync(String,String,String)
  id: getPropertiesFromTaskWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 635
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromTaskHeaders>> getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskWithServiceResponseAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getPropertiesFromTaskWithServiceResponseAsync(String,String,String,FileGetPropertiesFromTaskOptions)
  id: getPropertiesFromTaskWithServiceResponseAsync(String,String,String,FileGetPropertiesFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 740
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromTaskHeaders>> getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskWithServiceResponseAsync(String,String,String,FileGetPropertiesFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNode(final String,final String)
  id: listFromComputeNode(final String,final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNode(final String poolId, final String nodeId)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNode(final String poolId, final String nodeId)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1805
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromComputeNode(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNode(final String,final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNode(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  id: listFromComputeNode(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1932
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNode(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String)
  id: listFromComputeNodeAsync(final String,final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeAsync(final String poolId, final String nodeId)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeAsync(final String poolId, final String nodeId)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1844
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromComputeNodeAsync(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  id: listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1989
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions,final ListOperationCallback<NodeFile>)
  id: listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1960
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions,final ListOperationCallback<NodeFile>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String,final ListOperationCallback<NodeFile>)
  id: listFromComputeNodeAsync(final String,final String,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1824
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String,final ListOperationCallback<NodeFile>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNext(final String)
  id: listFromComputeNodeNext(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNext(final String nextPageLink)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNext(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2354
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromComputeNodeNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNext(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNext(final String,final FileListFromComputeNodeNextOptions)
  id: listFromComputeNodeNext(final String,final FileListFromComputeNodeNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2467
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNext(final String,final FileListFromComputeNodeNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String)
  id: listFromComputeNodeNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextAsync(final String nextPageLink)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextAsync(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2392
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromComputeNodeNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions)
  id: listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2507
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  id: listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2487
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  id: listFromComputeNodeNextAsync(final String,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2373
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromComputeNodeNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextSinglePageAsync(final String)
  id: listFromComputeNodeNextSinglePageAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextSinglePageAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextSinglePageAsync(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2430
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeNextSinglePageAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the PagedList&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextSinglePageAsync(final String,final FileListFromComputeNodeNextOptions)
  id: listFromComputeNodeNextSinglePageAsync(final String,final FileListFromComputeNodeNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextSinglePageAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextSinglePageAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2547
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromComputeNodeHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeNextSinglePageAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromComputeNodeHeaders&gt; * </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the PagedList&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextWithServiceResponseAsync(final String)
  id: listFromComputeNodeNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2409
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextWithServiceResponseAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextWithServiceResponseAsync(final String,final FileListFromComputeNodeNextOptions)
  id: listFromComputeNodeNextWithServiceResponseAsync(final String,final FileListFromComputeNodeNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2525
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextWithServiceResponseAsync(final String,final FileListFromComputeNodeNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeSinglePageAsync(final String,final String)
  id: listFromComputeNodeSinglePageAsync(final String,final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeSinglePageAsync(final String poolId, final String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeSinglePageAsync(final String poolId, final String nodeId)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1884
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeSinglePageAsync(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the PagedList&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeSinglePageAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  id: listFromComputeNodeSinglePageAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeSinglePageAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeSinglePageAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2040
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromComputeNodeHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeSinglePageAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromComputeNodeHeaders&gt; * </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromComputeNodeHeaders&gt; * </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromComputeNodeHeaders&gt; * </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the PagedList&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeWithServiceResponseAsync(final String,final String)
  id: listFromComputeNodeWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1862
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeWithServiceResponseAsync(final String,final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeWithServiceResponseAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  id: listFromComputeNodeWithServiceResponseAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2009
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromComputeNodeWithServiceResponseAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTask(final String,final String)
  id: listFromTask(final String,final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTask(final String jobId, final String taskId)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTask(final String jobId, final String taskId)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1500
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromTask(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTask(final String,final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTask(final String,final String,final Boolean,final FileListFromTaskOptions)
  id: listFromTask(final String,final String,final Boolean,final FileListFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1627
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. This parameter can be used in combination with the filter parameter to list specific type of files. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTask(final String,final String,final Boolean,final FileListFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String)
  id: listFromTaskAsync(final String,final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskAsync(final String jobId, final String taskId)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskAsync(final String jobId, final String taskId)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1539
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromTaskAsync(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  id: listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1684
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. This parameter can be used in combination with the filter parameter to list specific type of files. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions,final ListOperationCallback<NodeFile>)
  id: listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1655
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. This parameter can be used in combination with the filter parameter to list specific type of files. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions,final ListOperationCallback<NodeFile>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String,final ListOperationCallback<NodeFile>)
  id: listFromTaskAsync(final String,final String,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1519
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String,final ListOperationCallback<NodeFile>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNext(final String)
  id: listFromTaskNext(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNext(final String nextPageLink)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNext(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2109
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromTaskNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskNext(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNext(final String,final FileListFromTaskNextOptions)
  id: listFromTaskNext(final String,final FileListFromTaskNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2222
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskNext(final String,final FileListFromTaskNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String)
  id: listFromTaskNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextAsync(final String nextPageLink)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextAsync(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2147
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromTaskNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions)
  id: listFromTaskNextAsync(final String,final FileListFromTaskNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2262
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  id: listFromTaskNextAsync(final String,final FileListFromTaskNextOptions,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2242
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  id: listFromTaskNextAsync(final String,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2128
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromTaskNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextSinglePageAsync(final String)
  id: listFromTaskNextSinglePageAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextSinglePageAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextSinglePageAsync(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2185
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskNextSinglePageAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the PagedList&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextSinglePageAsync(final String,final FileListFromTaskNextOptions)
  id: listFromTaskNextSinglePageAsync(final String,final FileListFromTaskNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextSinglePageAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextSinglePageAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2302
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromTaskHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskNextSinglePageAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromTaskHeaders&gt; * </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the PagedList&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextWithServiceResponseAsync(final String)
  id: listFromTaskNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2164
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskNextWithServiceResponseAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextWithServiceResponseAsync(final String,final FileListFromTaskNextOptions)
  id: listFromTaskNextWithServiceResponseAsync(final String,final FileListFromTaskNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextWithServiceResponseAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextWithServiceResponseAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2280
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskNextWithServiceResponseAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskNextWithServiceResponseAsync(final String,final FileListFromTaskNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskSinglePageAsync(final String,final String)
  id: listFromTaskSinglePageAsync(final String,final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskSinglePageAsync(final String jobId, final String taskId)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskSinglePageAsync(final String jobId, final String taskId)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1579
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskSinglePageAsync(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the PagedList&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskSinglePageAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  id: listFromTaskSinglePageAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskSinglePageAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskSinglePageAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1735
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromTaskHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskSinglePageAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromTaskHeaders&gt; * </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromTaskHeaders&gt; * </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. This parameter can be used in combination with the filter parameter to list specific type of files. ServiceResponseWithHeaders&lt;PageImpl&lt;NodeFile&gt;, FileListFromTaskHeaders&gt; * </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the PagedList&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskWithServiceResponseAsync(final String,final String)
  id: listFromTaskWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskWithServiceResponseAsync(final String jobId, final String taskId)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskWithServiceResponseAsync(final String jobId, final String taskId)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1557
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskWithServiceResponseAsync(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskWithServiceResponseAsync(final String,final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskWithServiceResponseAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  id: listFromTaskWithServiceResponseAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskWithServiceResponseAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskWithServiceResponseAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1704
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskWithServiceResponseAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. This parameter can be used in combination with the filter parameter to list specific type of files. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._files.listFromTaskWithServiceResponseAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: c8683d81
  spec.java:
  - name: BatchErrorException
    fullName: BatchErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._file_delete_from_task_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers
    name: FileDeleteFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: 76fcb9b7
  spec.java:
  - name: InputStream
    fullName: InputStream
- uid: 0377aee2
  spec.java:
  - name: final ServiceCallback<InputStream>
    fullName: final ServiceCallback<InputStream>
- uid: 8601070c
  spec.java:
  - name: ServiceFuture<InputStream>
    fullName: ServiceFuture<InputStream>
- uid: 3ab19265
  spec.java:
  - name: Observable<InputStream>
    fullName: Observable<InputStream>
- uid: 2af956f9com.microsoft.azure.batch.protocol.models._file_get_from_task_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<InputStream, '
    fullName: 'Observable<ServiceResponseWithHeaders<InputStream, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers
    name: FileGetFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_headers
    name: FileGetPropertiesFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetPropertiesFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers
    name: FileDeleteFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: 2af956f9com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<InputStream, '
    fullName: 'Observable<ServiceResponseWithHeaders<InputStream, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers
    name: FileGetFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_headers
    name: FileGetPropertiesFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetPropertiesFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: '>'
    fullName: '>'
- uid: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: '>>'
    fullName: '>>'
- uid: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: '>>'
    fullName: '>>'
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers
    name: FileListFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: 2ec468d1
  spec.java:
  - name: final Boolean
    fullName: final Boolean
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_options
    name: FileListFromTaskOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_options.yml
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers
    name: FileListFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
    name: FileListFromComputeNodeOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options.yml
- uid: bd82102acom.microsoft.azure.batch.protocol.models._node_filee7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: '>>'
    fullName: '>>'
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
    name: FileListFromTaskNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskNextOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options.yml
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
    name: FileListFromComputeNodeNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeNextOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options.yml
- uid: com.microsoft.azure.batch.protocol._files
  parent: com.microsoft.azure.batch.protocol
  href: com.microsoft.azure.batch.protocol._files.yml
  name: Files
  fullName: com.microsoft.azure.batch.protocol.Files
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public interface Files
- uid: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl.yml
  name: BatchServiceClientImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.BatchServiceClientImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref href="com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public class BatchServiceClientImpl implements BatchServiceClient
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  name: FilesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: *o1
- uid: com.microsoft.azure.batch.protocol._files.deleteFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTask(String jobId, String taskId, String filePath)
  fullName: void com.microsoft.azure.batch.protocol.Files.deleteFromTask(String jobId, String taskId, String filePath)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public void deleteFromTask(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Files.deleteFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskAsync(String jobId, String taskId, String filePath)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Files.deleteFromTaskAsync(String jobId, String taskId, String filePath)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteFromTaskAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers.yml
  name: FileDeleteFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders
  type: Class
  summary: <p>Defines headers for DeleteFromTask operation. </p>
  syntax:
    content: public class FileDeleteFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files.deleteFromTaskWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders>> com.microsoft.azure.batch.protocol.Files.deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders>> deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_delete_from_task_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromTask(String,String,String,Boolean,FileDeleteFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTask(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: void com.microsoft.azure.batch.protocol.Files.deleteFromTask(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public void deleteFromTask(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options.yml
  name: FileDeleteFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_deleteFromTask operation. </p>
  syntax:
    content: public class FileDeleteFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Files.deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Files.deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteFromTaskAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromTaskWithServiceResponseAsync(String,String,String,Boolean,FileDeleteFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders>> com.microsoft.azure.batch.protocol.Files.deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders>> deleteFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to delete. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_delete_from_task_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTask(String jobId, String taskId, String filePath)
  fullName: InputStream com.microsoft.azure.batch.protocol.Files.getFromTask(String jobId, String taskId, String filePath)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public InputStream getFromTask(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.Files.getFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<InputStream> serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskAsync(String jobId, String taskId, String filePath)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.Files.getFromTaskAsync(String jobId, String taskId, String filePath)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getFromTaskAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers.yml
  name: FileGetFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders
  type: Class
  summary: <p>Defines headers for GetFromTask operation. </p>
  syntax:
    content: public class FileGetFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files.getFromTaskWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders>> com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders>> getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._file_get_from_task_headerse7daa122
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromTask(String,String,String,FileGetFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: InputStream com.microsoft.azure.batch.protocol.Files.getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public InputStream getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_task_options.yml
  name: FileGetFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_getFromTask operation. </p>
  syntax:
    content: public class FileGetFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String,FileGetFromTaskOptions,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.Files.getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback<InputStream> serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String,FileGetFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.Files.getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getFromTaskAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromTaskWithServiceResponseAsync(String,String,String,FileGetFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders>> com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders>> getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to retrieve. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._file_get_from_task_headerse7daa122
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromTask(String jobId, String taskId, String filePath)
  fullName: void com.microsoft.azure.batch.protocol.Files.getPropertiesFromTask(String jobId, String taskId, String filePath)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public void getPropertiesFromTask(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskAsync(String,String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Files.getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromTaskAsync(String jobId, String taskId, String filePath)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Files.getPropertiesFromTaskAsync(String jobId, String taskId, String filePath)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<Void> getPropertiesFromTaskAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_headers.yml
  name: FileGetPropertiesFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetPropertiesFromTaskHeaders
  type: Class
  summary: <p>Defines headers for GetPropertiesFromTask operation. </p>
  syntax:
    content: public class FileGetPropertiesFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromTaskHeaders>> com.microsoft.azure.batch.protocol.Files.getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromTaskHeaders>> getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromTask(String,String,String,FileGetPropertiesFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromTask(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  fullName: void com.microsoft.azure.batch.protocol.Files.getPropertiesFromTask(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public void getPropertiesFromTask(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_options.yml
  name: FileGetPropertiesFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetPropertiesFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_getPropertiesFromTask operation. </p>
  syntax:
    content: public class FileGetPropertiesFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskAsync(String,String,String,FileGetPropertiesFromTaskOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Files.getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskAsync(String,String,String,FileGetPropertiesFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Files.getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<Void> getPropertiesFromTaskAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromTaskWithServiceResponseAsync(String,String,String,FileGetPropertiesFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromTaskHeaders>> com.microsoft.azure.batch.protocol.Files.getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromTaskHeaders>> getPropertiesFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The ID of the task whose file you want to get the properties of. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_get_properties_from_task_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNode(String poolId, String nodeId, String filePath)
  fullName: void com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String poolId, String nodeId, String filePath)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public void deleteFromComputeNode(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers.yml
  name: FileDeleteFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for DeleteFromComputeNode operation. </p>
  syntax:
    content: public class FileDeleteFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders>> deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromComputeNode(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNode(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: void com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public void deleteFromComputeNode(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options.yml
  name: FileDeleteFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_deleteFromComputeNode operation. </p>
  syntax:
    content: public class FileDeleteFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteFromComputeNodeAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromComputeNodeWithServiceResponseAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders>> deleteFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node from which you want to delete the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNode(String poolId, String nodeId, String filePath)
  fullName: InputStream com.microsoft.azure.batch.protocol.Files.getFromComputeNode(String poolId, String nodeId, String filePath)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public InputStream getFromComputeNode(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.Files.getFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<InputStream> serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.Files.getFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getFromComputeNodeAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers.yml
  name: FileGetFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for GetFromComputeNode operation. </p>
  syntax:
    content: public class FileGetFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files.getFromComputeNodeWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders>> getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headerse7daa122
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromComputeNode(String,String,String,FileGetFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNode(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: InputStream com.microsoft.azure.batch.protocol.Files.getFromComputeNode(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public InputStream getFromComputeNode(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options.yml
  name: FileGetFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_getFromComputeNode operation. </p>
  syntax:
    content: public class FileGetFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.Files.getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback<InputStream> serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.Files.getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromComputeNodeWithServiceResponseAsync(String,String,String,FileGetFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.Files.getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders>> getFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headerse7daa122
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromComputeNode(String poolId, String nodeId, String filePath)
  fullName: void com.microsoft.azure.batch.protocol.Files.getPropertiesFromComputeNode(String poolId, String nodeId, String filePath)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public void getPropertiesFromComputeNode(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeAsync(String,String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Files.getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Files.getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public Observable<Void> getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_headers.yml
  name: FileGetPropertiesFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetPropertiesFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for GetPropertiesFromComputeNode operation. </p>
  syntax:
    content: public class FileGetPropertiesFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.Files.getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromComputeNodeHeaders>> getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNode(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromComputeNode(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  fullName: void com.microsoft.azure.batch.protocol.Files.getPropertiesFromComputeNode(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public void getPropertiesFromComputeNode(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_options.yml
  name: FileGetPropertiesFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetPropertiesFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_getPropertiesFromComputeNode operation. </p>
  syntax:
    content: public class FileGetPropertiesFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.Files.getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.Files.getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public Observable<Void> getPropertiesFromComputeNodeAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.getPropertiesFromComputeNodeWithServiceResponseAsync(String,String,String,FileGetPropertiesFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.Files.getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, FileGetPropertiesFromComputeNodeHeaders>> getPropertiesFromComputeNodeWithServiceResponseAsync(String poolId, String nodeId, String filePath, FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that contains the file. </p>
    - id: filePath
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetPropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._file_get_properties_from_compute_node_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._node_file
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._node_file.yml
  name: NodeFile
  fullName: com.microsoft.azure.batch.protocol.models.NodeFile
  type: Class
  summary: <p>Information about a file or directory on a compute node. </p>
  syntax:
    content: public class NodeFile
- uid: com.microsoft.azure.batch.protocol._files.listFromTask(final String,final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTask(final String jobId, final String taskId)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.Files.listFromTask(final String jobId, final String taskId)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromTask(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskAsync(final String jobId, final String taskId)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromTaskAsync(final String jobId, final String taskId)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromTaskAsync(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers.yml
  name: FileListFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskHeaders
  type: Class
  summary: <p>Defines headers for ListFromTask operation. </p>
  syntax:
    content: public class FileListFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskWithServiceResponseAsync(final String jobId, final String taskId)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.Files.listFromTaskWithServiceResponseAsync(final String jobId, final String taskId)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskWithServiceResponseAsync(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTask(final String,final String,final Boolean,final FileListFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.Files.listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. This parameter can be used in combination with the filter parameter to list specific type of files. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_options.yml
  name: FileListFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_listFromTask operation. </p>
  syntax:
    content: public class FileListFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. This parameter can be used in combination with the filter parameter to list specific type of files. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. This parameter can be used in combination with the filter parameter to list specific type of files. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskWithServiceResponseAsync(final String,final String,final Boolean,final FileListFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskWithServiceResponseAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.Files.listFromTaskWithServiceResponseAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskWithServiceResponseAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The ID of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The ID of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. This parameter can be used in combination with the filter parameter to list specific type of files. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNode(final String,final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNode(final String poolId, final String nodeId)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String poolId, final String nodeId)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromComputeNode(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeAsync(final String poolId, final String nodeId)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeAsync(final String poolId, final String nodeId)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromComputeNodeAsync(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers.yml
  name: FileListFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for ListFromComputeNode operation. </p>
  syntax:
    content: public class FileListFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNode(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options.yml
  name: FileListFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_listFromComputeNode operation. </p>
  syntax:
    content: public class FileListFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeWithServiceResponseAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeWithServiceResponseAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The ID of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskNext(final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNext(final String nextPageLink)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.Files.listFromTaskNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromTaskNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromTaskNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromTaskNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextAsync(final String nextPageLink)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromTaskNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromTaskNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.Files.listFromTaskNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskNext(final String,final FileListFromTaskNextOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.Files.listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options.yml
  name: FileListFromTaskNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskNextOptions
  type: Class
  summary: <p>Additional parameters for the listFromTaskNext operation. </p>
  syntax:
    content: public class FileListFromTaskNextOptions
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromTaskNextWithServiceResponseAsync(final String,final FileListFromTaskNextOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextWithServiceResponseAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> com.microsoft.azure.batch.protocol.Files.listFromTaskNextWithServiceResponseAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromTaskHeaders>> listFromTaskNextWithServiceResponseAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_task_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNext(final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNext(final String nextPageLink)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromComputeNodeNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromComputeNodeNextAsync(final String nextPageLink, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextAsync(final String nextPageLink)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromComputeNodeNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNext(final String,final FileListFromComputeNodeNextOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: PagedList<NodeFile> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public PagedList<NodeFile> listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the PagedList&lt;NodeFile&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options.yml
  name: FileListFromComputeNodeNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeNextOptions
  type: Class
  summary: <p>Additional parameters for the listFromComputeNodeNext operation. </p>
  syntax:
    content: public class FileListFromComputeNodeNextOptions
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions,final ServiceFuture<List<NodeFile>>,final ListOperationCallback<NodeFile>)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  fullName: ServiceFuture<List<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<NodeFile>> listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceFuture<List<NodeFile>> serviceFuture, final ListOperationCallback<NodeFile> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._node_filea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: Observable<Page<NodeFile>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Page<NodeFile>> listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._node_filee7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._files.listFromComputeNodeNextWithServiceResponseAsync(final String,final FileListFromComputeNodeNextOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<NodeFile>, FileListFromComputeNodeHeaders>> listFromComputeNodeNextWithServiceResponseAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._node_file8135b5ebcom.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headerse7daa122
      description: <p>the observable to the PagedList&lt;NodeFile&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._batch_error_exception
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._batch_error_exception.yml
  name: BatchErrorException
  fullName: com.microsoft.azure.batch.protocol.models.BatchErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref href="com.microsoft.azure.batch.protocol.models._batch_error" data-throw-if-not-resolved="false"></xref> information. </p>
  syntax:
    content: public class BatchErrorException
- uid: com.microsoft.azure.batch.protocol.models._page_impl
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  name: PageImpl<T>
  fullName: com.microsoft.azure.batch.protocol.models.PageImpl<T>
  type: Class
  summary: >-
    <p>An instance of this class defines a page of Azure resources and a link to get the next page of resources, if any.</p>

    <p></p>
  syntax:
    content: public class PageImpl<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>type of Azure resource </p>
