items:
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  id: _fabric_transport_settings
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime
  children:
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.defaultSectionName()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.FabricTransportSettings()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getConfigSection()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getDefault()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getDefault(String)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getMaxConcurrentCalls()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getMaxMessageSize()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getMaxQueueSize()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getSecurityCredentials()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.initializeConfigFile(String)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.initializeConfigFileFromConfigPackage(String)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.initializeSettingsFromConfig(String)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.keepAliveTimeoutInSeconds()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.loadFrom(String)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.loadFrom(String,String)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.loadFrom(String,String,String)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.onInitialize()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.operationTimeoutInSeconds()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setKeepAliveTimeoutInSeconds(Duration)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setMaxConcurrentCalls(Long)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setMaxMessageSize(Long)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setMaxQueueSize(Long)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setOperationTimeoutInSeconds(Duration)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setSecurityCredentials(SecurityCredentials)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.toNative(long,long,long,long,long,long,long)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.tryLoadFrom(String)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.tryLoadFrom(String,String)
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.tryLoadFrom(String,String,String)
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: FabricTransportSettings
  fullName: microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 21
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: <p>Settings that configures the FabricTransport communication. </p>
  syntax: &o1
    content: public class FabricTransportSettings
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.defaultKeepAliveTimeout()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.defaultOperationTimeout()
  - microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.toNative(PinCollection)
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.defaultSectionName()
  id: defaultSectionName()
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: defaultSectionName
  fullName: String microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.defaultSectionName
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 28
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  syntax:
    content: protected static String defaultSectionName= "TransportSettings"
    return:
      type: "26831127"
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.FabricTransportSettings()
  id: FabricTransportSettings()
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: FabricTransportSettings()
  fullName: microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.FabricTransportSettings()
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 220
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  syntax:
    content: public FabricTransportSettings()
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getConfigSection()
  id: getConfigSection()
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: getConfigSection()
  fullName: FabricServiceConfigSection microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.getConfigSection()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 418
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  syntax:
    content: protected FabricServiceConfigSection getConfigSection()
    return:
      type: de349bef
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getDefault()
  id: getDefault()
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: getDefault()
  fullName: static FabricTransportSettings microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.getDefault()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 380
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>

      <xref href="microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings" data-throw-if-not-resolved="false"></xref> returns the default Settings .Loads the configuration file from default Config Package"Config" , if not found then try to load from default config file "ClientExeName.Settings.xml" from Client Exe directory. </p>
  syntax:
    content: public static FabricTransportSettings getDefault()
    return:
      type: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
      description: >-
        <p>

          <xref href="microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings" data-throw-if-not-resolved="false"></xref>

        </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getDefault(String)
  id: getDefault(String)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: getDefault(String sectionName)
  fullName: static FabricTransportSettings microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.getDefault(String sectionName)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 388
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>

      <xref href="microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings" data-throw-if-not-resolved="false"></xref> returns the default Settings .Loads the configuration file from default Config Package"Config" , if not found then try to load from default config file "ClientExeName.Settings.xml" from Client Exe directory. </p>
  syntax:
    content: public static FabricTransportSettings getDefault(String sectionName)
    parameters:
    - id: sectionName
      type: "26831127"
      description: <p>Name of the section within the configuration file. If not found section in configuration file, it will return the default Settings </p>
    return:
      type: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
      description: >-
        <p>

          <xref href="microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings" data-throw-if-not-resolved="false"></xref>

        </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getMaxConcurrentCalls()
  id: getMaxConcurrentCalls()
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: getMaxConcurrentCalls()
  fullName: Long microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.getMaxConcurrentCalls()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 176
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>MaxConcurrentCalls represents maximum number of messages actively service processes at one time.</p>

    <p>

      <bold>Remarks:</bold>Defaults value for the MaxConcurrentCalls is to the Number of processors. </p>
  syntax:
    content: public Long getMaxConcurrentCalls()
    return:
      type: 34f09483
      description: <p>MaxConcurrentCalls is the upper limit of active messages in the service. </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getMaxMessageSize()
  id: getMaxMessageSize()
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: getMaxMessageSize()
  fullName: Long microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.getMaxMessageSize()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 121
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>MaxMessageSize represents the maximum size for a message that can be received on a channel configured with this setting.</p>

    <p>

      <bold>Remarks:</bold>Default Value for MaxMessageSize used is 4194304 bytes </p>
  syntax:
    content: public Long getMaxMessageSize()
    return:
      type: 34f09483
      description: <p>Maximum size of the message in bytes. </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getMaxQueueSize()
  id: getMaxQueueSize()
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: getMaxQueueSize()
  fullName: Long microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.getMaxQueueSize()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 148
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>The maximum size, of a queue that stores messages while they are processed for an endpoint configured with this setting.</p>

    <p>

      <bold>Remarks:</bold>Default value is 10,000 messages </p>
  syntax:
    content: public Long getMaxQueueSize()
    return:
      type: 34f09483
      description: <p>Max Size for a Queue that recieves messages from the channel </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.getSecurityCredentials()
  id: getSecurityCredentials()
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: getSecurityCredentials()
  fullName: SecurityCredentials microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.getSecurityCredentials()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 203
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>Security credentials for securing the communication</p>

    <p>

      <bold>Remarks:</bold>Default Value for SecurityCredentials is None SecurityCredential can be of type x509SecurityCredentail <xref href="system.fabric._x509_credentials" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public SecurityCredentials getSecurityCredentials()
    return:
      type: system.fabric._security_credentials
      description: <p>SecurityCredentials as <xref href="system.fabric._security_credentials" data-throw-if-not-resolved="false"></xref></p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.initializeConfigFile(String)
  id: initializeConfigFile(String)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: initializeConfigFile(String filePath)
  fullName: boolean microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.initializeConfigFile(String filePath)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 415
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  syntax:
    content: protected boolean initializeConfigFile(String filePath)
    parameters:
    - id: filePath
      type: "26831127"
    return:
      type: 4fc6e284
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.initializeConfigFileFromConfigPackage(String)
  id: initializeConfigFileFromConfigPackage(String)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: initializeConfigFileFromConfigPackage(String configPackageName)
  fullName: boolean microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.initializeConfigFileFromConfigPackage(String configPackageName)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 405
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  syntax:
    content: protected boolean initializeConfigFileFromConfigPackage(String configPackageName)
    parameters:
    - id: configPackageName
      type: "26831127"
    return:
      type: 4fc6e284
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.initializeSettingsFromConfig(String)
  id: initializeSettingsFromConfig(String)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: initializeSettingsFromConfig(String sectionName)
  fullName: boolean microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.initializeSettingsFromConfig(String sectionName)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 409
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  syntax:
    content: protected boolean initializeSettingsFromConfig(String sectionName)
    parameters:
    - id: sectionName
      type: "26831127"
    return:
      type: 4fc6e284
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.keepAliveTimeoutInSeconds()
  id: keepAliveTimeoutInSeconds()
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: keepAliveTimeoutInSeconds()
  fullName: Duration microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.keepAliveTimeoutInSeconds()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 92
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>KeepAliveTimeout is provides a way to configure Tcp keep-alive option.</p>

    <p>

      <bold>Remarks:</bold>Default Value for KeepAliveTimeout Timeout is set as TimeSpan.Zero. which indicates we disable the tcp keepalive option. If you are using loadbalancer , you may need to configure this in order to avoid the loadbalancer to close the connection after certain time </p>
  syntax:
    content: public Duration keepAliveTimeoutInSeconds()
    return:
      type: e02a2de0
      description: <p>KeepAliveTimeout as <ref refid="" kindref="compound">java.time.Duration</ref></p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.loadFrom(String)
  id: loadFrom(String)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: loadFrom(String sectionName)
  fullName: static FabricTransportSettings microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.loadFrom(String sectionName)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 245
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: <p>Loads the FabricTransport settings from a sectionName specified in the configuration file Configuration File can be specified using the filePath or using the name of the configuration package specified in the service manifest . It will first try to load config using configPackageName . if configPackageName is not specified then try to load from filePath. <bold>Remarks:</bold> The following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings.<orderedlist><listitem><p>MaxQueueSize - value in long.</p></listitem><listitem><p>MaxMessageSize - value in bytes.</p></listitem><listitem><p>MaxConcurrentCalls - value in long.</p></listitem><listitem><p>SecurityCredentials - SecurityCredentials value.</p></listitem><listitem><p>OperationTimeoutInSeconds - value in seconds.</p></listitem><listitem><p>KeepAliveTimeoutInSeconds - value in seconds. </p></listitem></orderedlist></p>
  syntax:
    content: public static FabricTransportSettings loadFrom(String sectionName)
    parameters:
    - id: sectionName
      type: "26831127"
      description: <p>Name of the section within the configuration file. If not found section in configuration file, it will throw ArgumentException </p>
    return:
      type: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
      description: >-
        <p>

          <xref href="microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings" data-throw-if-not-resolved="false"></xref>

        </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.loadFrom(String,String)
  id: loadFrom(String,String)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: loadFrom(String sectionName, String filePath)
  fullName: static FabricTransportSettings microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.loadFrom(String sectionName, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 267
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: <p>Loads the FabricTransport settings from a sectionName specified in the configuration file Configuration File can be specified using the filePath or using the name of the configuration package specified in the service manifest . It will first try to load config using configPackageName . if configPackageName is not specified then try to load from filePath. <bold>Remarks:</bold> The following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings.<orderedlist><listitem><p>MaxQueueSize - value in long.</p></listitem><listitem><p>MaxMessageSize - value in bytes.</p></listitem><listitem><p>MaxConcurrentCalls - value in long.</p></listitem><listitem><p>SecurityCredentials - SecurityCredentials value.</p></listitem><listitem><p>OperationTimeoutInSeconds - value in seconds.</p></listitem><listitem><p>KeepAliveTimeoutInSeconds - value in seconds. </p></listitem></orderedlist></p>
  syntax:
    content: public static FabricTransportSettings loadFrom(String sectionName, String filePath)
    parameters:
    - id: sectionName
      type: "26831127"
      description: <p>Name of the section within the configuration file. If not found section in configuration file, it will throw ArgumentException </p>
    - id: filePath
      type: "26831127"
      description: <p>Full path of the file where the settings will be loaded from. If not specified , it will first try to load from default Config Package"Config" , if not found then load from Settings "ClientExeName.Settings.xml" present in Client Exe directory. </p>
    return:
      type: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
      description: >-
        <p>

          <xref href="microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings" data-throw-if-not-resolved="false"></xref>

        </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.loadFrom(String,String,String)
  id: loadFrom(String,String,String)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: loadFrom(String sectionName, String filePath, String configPackageName)
  fullName: static FabricTransportSettings microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.loadFrom(String sectionName, String filePath, String configPackageName)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 289
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: <p>Loads the FabricTransport settings from a sectionName specified in the configuration file Configuration File can be specified using the filePath or using the name of the configuration package specified in the service manifest . It will first try to load config using configPackageName . if configPackageName is not specified then try to load from filePath. <bold>Remarks:</bold> The following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings.<orderedlist><listitem><p>MaxQueueSize - value in long.</p></listitem><listitem><p>MaxMessageSize - value in bytes.</p></listitem><listitem><p>MaxConcurrentCalls - value in long.</p></listitem><listitem><p>SecurityCredentials - SecurityCredentials value.</p></listitem><listitem><p>OperationTimeoutInSeconds - value in seconds.</p></listitem><listitem><p>KeepAliveTimeoutInSeconds - value in seconds. </p></listitem></orderedlist></p>
  syntax:
    content: public static FabricTransportSettings loadFrom(String sectionName, String filePath, String configPackageName)
    parameters:
    - id: sectionName
      type: "26831127"
      description: <p>Name of the section within the configuration file. If not found section in configuration file, it will throw ArgumentException </p>
    - id: filePath
      type: "26831127"
      description: <p>Full path of the file where the settings will be loaded from. If not specified , it will first try to load from default Config Package"Config" , if not found then load from Settings "ClientExeName.Settings.xml" present in Client Exe directory. </p>
    - id: configPackageName
      type: "26831127"
      description: <p>Name of the configuration package.If its null or empty,it will check for file in filePath </p>
    return:
      type: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
      description: >-
        <p>

          <xref href="microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings" data-throw-if-not-resolved="false"></xref>

        </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.onInitialize()
  id: onInitialize()
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: onInitialize()
  fullName: void microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.onInitialize()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 422
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  syntax:
    content: protected void onInitialize()
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.operationTimeoutInSeconds()
  id: operationTimeoutInSeconds()
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: operationTimeoutInSeconds()
  fullName: Duration microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.operationTimeoutInSeconds()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 62
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>Operation Timeout which governs the whole process of sending a message, including receiving a reply message for a request/reply service operation. This timeout also applies when sending reply messages from a callback contract method.</p>

    <p>

      <bold>Remarks:</bold>Default Value for Operation Timeout is set as TimeSpan.MaxValue </p>
  syntax:
    content: public Duration operationTimeoutInSeconds()
    return:
      type: e02a2de0
      description: <p>OperationTimeout as <ref refid="" kindref="compound">java.time.Duration</ref></p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setKeepAliveTimeoutInSeconds(Duration)
  id: setKeepAliveTimeoutInSeconds(Duration)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: setKeepAliveTimeoutInSeconds(Duration keepAliveTimeoutInSeconds)
  fullName: void microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.setKeepAliveTimeoutInSeconds(Duration keepAliveTimeoutInSeconds)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 108
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>KeepAliveTimeout is provides a way to configure Tcp keep-alive option.</p>

    <p>

      <bold>Remarks:</bold>Default Value for KeepAliveTimeout Timeout is set as TimeSpan.Zero. which indicates we disable the tcp keepalive option. If you are using loadbalancer , you may need to configure this in order to avoid the loadbalancer to close the connection after certain time </p>
  syntax:
    content: public void setKeepAliveTimeoutInSeconds(Duration keepAliveTimeoutInSeconds)
    parameters:
    - id: keepAliveTimeoutInSeconds
      type: e02a2de0
      description: <p>KeepAliveTimeout as <ref refid="" kindref="compound">java.time.Duration</ref></p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setMaxConcurrentCalls(Long)
  id: setMaxConcurrentCalls(Long)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: setMaxConcurrentCalls(Long maxConcurrentCalls)
  fullName: void microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.setMaxConcurrentCalls(Long maxConcurrentCalls)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 191
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>MaxConcurrentCalls represents maximum number of messages actively service processes at one time.</p>

    <p>

      <bold>Remarks:</bold>Defaults value for the MaxConcurrentCalls is to the Number of processors. </p>
  syntax:
    content: public void setMaxConcurrentCalls(Long maxConcurrentCalls)
    parameters:
    - id: maxConcurrentCalls
      type: 34f09483
      description: <p>MaxConcurrentCalls is the upper limit of active messages in the service. </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setMaxMessageSize(Long)
  id: setMaxMessageSize(Long)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: setMaxMessageSize(Long maxMessageSize)
  fullName: void microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.setMaxMessageSize(Long maxMessageSize)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 135
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>MaxMessageSize represents the maximum size for a message that can be received on a channel configured with this setting.</p>

    <p>

      <bold>Remarks:</bold>Default Value for MaxMessageSize used is 4194304 bytes </p>
  syntax:
    content: public void setMaxMessageSize(Long maxMessageSize)
    parameters:
    - id: maxMessageSize
      type: 34f09483
      description: <p>Maximum size of the message in bytes. </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setMaxQueueSize(Long)
  id: setMaxQueueSize(Long)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: setMaxQueueSize(Long maxQueueSize)
  fullName: void microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.setMaxQueueSize(Long maxQueueSize)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 162
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>The maximum size, of a queue that stores messages while they are processed for an endpoint configured with this setting.</p>

    <p>

      <bold>Remarks:</bold>Default value is 10,000 messages </p>
  syntax:
    content: public void setMaxQueueSize(Long maxQueueSize)
    parameters:
    - id: maxQueueSize
      type: 34f09483
      description: <p>Max Size for a Queue that recieves messages from the channel </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setOperationTimeoutInSeconds(Duration)
  id: setOperationTimeoutInSeconds(Duration)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: setOperationTimeoutInSeconds(Duration operationTimeoutInSeconds)
  fullName: void microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.setOperationTimeoutInSeconds(Duration operationTimeoutInSeconds)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 77
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>Operation Timeout which governs the whole process of sending a message, including receiving a reply message for a request/reply service operation. This timeout also applies when sending reply messages from a callback contract method.</p>

    <p>

      <bold>Remarks:</bold>Default Value for Operation Timeout is set as TimeSpan.MaxValue </p>
  syntax:
    content: public void setOperationTimeoutInSeconds(Duration operationTimeoutInSeconds)
    parameters:
    - id: operationTimeoutInSeconds
      type: e02a2de0
      description: <p>OperationTimeout as <ref refid="" kindref="compound">java.time.Duration</ref></p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.setSecurityCredentials(SecurityCredentials)
  id: setSecurityCredentials(SecurityCredentials)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: setSecurityCredentials(SecurityCredentials securityCredentials)
  fullName: void microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.setSecurityCredentials(SecurityCredentials securityCredentials)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 216
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: >-
    <p>Security credentials for securing the communication</p>

    <p>

      <bold>Remarks:</bold>Default Value for SecurityCredentials is None SecurityCredential can be of type x509SecurityCredentail <xref href="system.fabric._x509_credentials" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public void setSecurityCredentials(SecurityCredentials securityCredentials)
    parameters:
    - id: securityCredentials
      type: system.fabric._security_credentials
      description: <p>SecurityCredentials as <xref href="system.fabric._security_credentials" data-throw-if-not-resolved="false"></xref></p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.toNative(long,long,long,long,long,long,long)
  id: toNative(long,long,long,long,long,long,long)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: toNative(long operationTimeoutInSeconds, long keepAliveTimeoutInSeconds, long maxMessageSize, long maxConcurrentCalls, long maxQueueSize, long securityCredentialsPtr, long reservedPtr)
  fullName: native long microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.toNative(long operationTimeoutInSeconds, long keepAliveTimeoutInSeconds, long maxMessageSize, long maxConcurrentCalls, long maxQueueSize, long securityCredentialsPtr, long reservedPtr)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 43
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  syntax:
    content: public native long toNative(long operationTimeoutInSeconds, long keepAliveTimeoutInSeconds, long maxMessageSize, long maxConcurrentCalls, long maxQueueSize, long securityCredentialsPtr, long reservedPtr)
    parameters:
    - id: operationTimeoutInSeconds
      type: 0364520f
    - id: keepAliveTimeoutInSeconds
      type: 0364520f
    - id: maxMessageSize
      type: 0364520f
    - id: maxConcurrentCalls
      type: 0364520f
    - id: maxQueueSize
      type: 0364520f
    - id: securityCredentialsPtr
      type: 0364520f
    - id: reservedPtr
      type: 0364520f
    return:
      type: 862ee9ba
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.tryLoadFrom(String)
  id: tryLoadFrom(String)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: tryLoadFrom(String sectionName)
  fullName: static FabricTransportSettings microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.tryLoadFrom(String sectionName)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 325
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: <p>Try to load the FabricTransport settings from a sectionName specified in the configuration file. Configuration File can be specified using the filePath or using the name of the configuration package specified in the service manifest . It will first try to load config using configPackageName . if configPackageName is not specified then try to load from filePath. <bold>Remarks:</bold>The following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings.<orderedlist><listitem><p>MaxQueueSize - value in long.</p></listitem><listitem><p>MaxMessageSize - value in bytes.</p></listitem><listitem><p>MaxConcurrentCalls - value in long.</p></listitem><listitem><p>SecurityCredentials - SecurityCredentials value.</p></listitem><listitem><p>OperationTimeoutInSeconds - value in seconds.</p></listitem><listitem><p>KeepAliveTimeoutInSeconds - value in seconds.</p></listitem></orderedlist></p>
  syntax:
    content: public static FabricTransportSettings tryLoadFrom(String sectionName)
    parameters:
    - id: sectionName
      type: "26831127"
      description: <p>Name of the section within the configuration file. If not found section in configuration file, it return false </p>
    return:
      type: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
      description: <p>Boolean specifies whether the settings get loaded successfully from Config. It returns true when load from Config succeeded, else return false. </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.tryLoadFrom(String,String)
  id: tryLoadFrom(String,String)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: tryLoadFrom(String sectionName, String filePath)
  fullName: static FabricTransportSettings microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.tryLoadFrom(String sectionName, String filePath)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 346
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: <p>Try to load the FabricTransport settings from a sectionName specified in the configuration file. Configuration File can be specified using the filePath or using the name of the configuration package specified in the service manifest . It will first try to load config using configPackageName . if configPackageName is not specified then try to load from filePath. <bold>Remarks:</bold>The following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings.<orderedlist><listitem><p>MaxQueueSize - value in long.</p></listitem><listitem><p>MaxMessageSize - value in bytes.</p></listitem><listitem><p>MaxConcurrentCalls - value in long.</p></listitem><listitem><p>SecurityCredentials - SecurityCredentials value.</p></listitem><listitem><p>OperationTimeoutInSeconds - value in seconds.</p></listitem><listitem><p>KeepAliveTimeoutInSeconds - value in seconds.</p></listitem></orderedlist></p>
  syntax:
    content: public static FabricTransportSettings tryLoadFrom(String sectionName, String filePath)
    parameters:
    - id: sectionName
      type: "26831127"
      description: <p>Name of the section within the configuration file. If not found section in configuration file, it return false </p>
    - id: filePath
      type: "26831127"
      description: <p>Full path of the file where the settings will be loaded from. If not specified , it will first try to load from default Config Package"Config" , if not found then load from Settings "ClientExeName.Settings.xml" present in Client Exe directory.</p>
    return:
      type: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
      description: <p>Boolean specifies whether the settings get loaded successfully from Config. It returns true when load from Config succeeded, else return false. </p>
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.tryLoadFrom(String,String,String)
  id: tryLoadFrom(String,String,String)
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  langs:
  - java
  name: tryLoadFrom(String sectionName, String filePath, String configPackageName)
  fullName: static FabricTransportSettings microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings.tryLoadFrom(String sectionName, String filePath, String configPackageName)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/communication/fabrictransport/runtime/FabricTransportSettings.java
    startLine: 367
  package: microsoft.servicefabric.services.communication.fabrictransport.runtime
  summary: <p>Try to load the FabricTransport settings from a sectionName specified in the configuration file. Configuration File can be specified using the filePath or using the name of the configuration package specified in the service manifest . It will first try to load config using configPackageName . if configPackageName is not specified then try to load from filePath. <bold>Remarks:</bold>The following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings.<orderedlist><listitem><p>MaxQueueSize - value in long.</p></listitem><listitem><p>MaxMessageSize - value in bytes.</p></listitem><listitem><p>MaxConcurrentCalls - value in long.</p></listitem><listitem><p>SecurityCredentials - SecurityCredentials value.</p></listitem><listitem><p>OperationTimeoutInSeconds - value in seconds.</p></listitem><listitem><p>KeepAliveTimeoutInSeconds - value in seconds.</p></listitem></orderedlist></p>
  syntax:
    content: public static FabricTransportSettings tryLoadFrom(String sectionName, String filePath, String configPackageName)
    parameters:
    - id: sectionName
      type: "26831127"
      description: <p>Name of the section within the configuration file. If not found section in configuration file, it return false </p>
    - id: filePath
      type: "26831127"
      description: <p>Full path of the file where the settings will be loaded from. If not specified , it will first try to load from default Config Package"Config" , if not found then load from Settings "ClientExeName.Settings.xml" present in Client Exe directory. </p>
    - id: configPackageName
      type: "26831127"
      description: <p>Name of the configuration package. If its null or empty,it will check for file in filePath </p>
    return:
      type: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
      description: <p>Boolean specifies whether the settings get loaded successfully from Config. It returns true when load from Config succeeded, else return false. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: 862ee9ba
  spec.java:
  - name: native long
    fullName: native long
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: 34f09483
  spec.java:
  - name: Long
    fullName: Long
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: de349bef
  spec.java:
  - name: FabricServiceConfigSection
    fullName: FabricServiceConfigSection
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.defaultKeepAliveTimeout()
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.defaultOperationTimeout()
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.toNative(PinCollection)
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._f28458304036c8649c27f6055a29b131c
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._f28458304036c8649c27f6055a29b131c.yml
  name: FabricTransportListenerSettings
  fullName: microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportListenerSettings
  type: Class
  syntax:
    content: public class FabricTransportListenerSettings extends FabricTransportSettings
- uid: system.fabric._security_credentials
  parent: system.fabric
  href: system.fabric._security_credentials.yml
  name: SecurityCredentials
  fullName: system.fabric.SecurityCredentials
  type: Class
  summary: <p>An abstract base class for types that represent security credentials. </p>
  syntax:
    content: public class SecurityCredentials
- uid: system.fabric._x509_credentials
  parent: system.fabric
  href: system.fabric._x509_credentials.yml
  name: X509Credentials
  fullName: system.fabric.X509Credentials
  type: Class
  summary: <p>Specifies the security credentials that are based upon X.509 certificates. </p>
  syntax:
    content: public class X509Credentials
- uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings
  parent: microsoft.servicefabric.services.communication.fabrictransport.runtime
  href: microsoft.servicefabric.services.communication.fabrictransport.runtime._fabric_transport_settings.yml
  name: FabricTransportSettings
  fullName: microsoft.servicefabric.services.communication.fabrictransport.runtime.FabricTransportSettings
  type: Class
  summary: <p>Settings that configures the FabricTransport communication. </p>
  syntax: *o1
- uid: system.fabric._pin_collection
  parent: system.fabric
  href: system.fabric._pin_collection.yml
  name: PinCollection
  fullName: system.fabric.PinCollection
  type: Class
  syntax:
    content: public class PinCollection
