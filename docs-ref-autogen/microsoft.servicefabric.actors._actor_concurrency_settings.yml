items:
- uid: microsoft.servicefabric.actors._actor_concurrency_settings
  id: _actor_concurrency_settings
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_concurrency_settings.ActorConcurrencySettings()
  - microsoft.servicefabric.actors._actor_concurrency_settings.lockTimeout()
  - microsoft.servicefabric.actors._actor_concurrency_settings.reentrancyMode()
  - microsoft.servicefabric.actors._actor_concurrency_settings.setLockTimeout(Duration)
  - microsoft.servicefabric.actors._actor_concurrency_settings.setReentrancyMode(ActorReentrancyMode)
  href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
  langs:
  - java
  name: ActorConcurrencySettings
  fullName: microsoft.servicefabric.actors.ActorConcurrencySettings
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
    startLine: 9
  package: microsoft.servicefabric.actors
  summary: <p>The method calls on an actor dispatched via in turn with support for logical call context based reentrancy. This class provides the settings to configure the turn based concurrency lock for actors. </p>
  syntax: &o1
    content: public class ActorConcurrencySettings
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - microsoft.servicefabric.actors._actor_concurrency_settings.ActorConcurrencySettings(ActorConcurrencySettings)
- uid: microsoft.servicefabric.actors._actor_concurrency_settings.ActorConcurrencySettings()
  id: ActorConcurrencySettings()
  parent: microsoft.servicefabric.actors._actor_concurrency_settings
  href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
  langs:
  - java
  name: ActorConcurrencySettings()
  fullName: microsoft.servicefabric.actors.ActorConcurrencySettings.ActorConcurrencySettings()
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
    startLine: 18
  package: microsoft.servicefabric.actors
  summary: <p>Initializes a new instance of the <xref href="microsoft.servicefabric.actors._actor_concurrency_settings" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public ActorConcurrencySettings()
- uid: microsoft.servicefabric.actors._actor_concurrency_settings.lockTimeout()
  id: lockTimeout()
  parent: microsoft.servicefabric.actors._actor_concurrency_settings
  href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
  langs:
  - java
  name: lockTimeout()
  fullName: Duration microsoft.servicefabric.actors.ActorConcurrencySettings.lockTimeout()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
    startLine: 57
  package: microsoft.servicefabric.actors
  summary: >-
    <p>sets timeout for the turn based concurrency lock. If the runtime cannot acquire the lock to dispatch the method call, it will throw <xref href="microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception" data-throw-if-not-resolved="false"></xref> exception. This exception will unwind the logical call chain and the call will retried up to a configured maximum amount of times. The actual timeout value for the concurrency lock can be higher as the runtime will add a random interval to the supplied value.</p>

    <p></p>
  syntax:
    content: public Duration lockTimeout()
    return:
      type: e02a2de0
      description: <p>Timeout for the turn based concurrency lock. </p>
- uid: microsoft.servicefabric.actors._actor_concurrency_settings.reentrancyMode()
  id: reentrancyMode()
  parent: microsoft.servicefabric.actors._actor_concurrency_settings
  href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
  langs:
  - java
  name: reentrancyMode()
  fullName: ActorReentrancyMode microsoft.servicefabric.actors.ActorConcurrencySettings.reentrancyMode()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
    startLine: 33
  package: microsoft.servicefabric.actors
  summary: >-
    <p>gets Reentrancy mode for actor method calls.</p>

    <p></p>
  syntax:
    content: public ActorReentrancyMode reentrancyMode()
    return:
      type: microsoft.servicefabric.actors._actor_reentrancy_mode
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor_reentrancy_mode" data-throw-if-not-resolved="false"></xref> for the actor method calls. </p>
- uid: microsoft.servicefabric.actors._actor_concurrency_settings.setLockTimeout(Duration)
  id: setLockTimeout(Duration)
  parent: microsoft.servicefabric.actors._actor_concurrency_settings
  href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
  langs:
  - java
  name: setLockTimeout(Duration timeout)
  fullName: void microsoft.servicefabric.actors.ActorConcurrencySettings.setLockTimeout(Duration timeout)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
    startLine: 71
  package: microsoft.servicefabric.actors
  summary: >-
    <p>sets timeout for the turn based concurrency lock. If the runtime cannot acquire the lock to dispatch the method call, it will throw <xref href="microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception" data-throw-if-not-resolved="false"></xref> exception.</p>

    <p></p>
  syntax:
    content: public void setLockTimeout(Duration timeout)
    parameters:
    - id: timeout
      type: e02a2de0
      description: <p>This exception will unwind the logical call chain and the call will retried up to a configured maximum amount of times. The actual timeout value for the concurrency lock can be higher as the runtime will add a random interval to the supplied value. </p>
- uid: microsoft.servicefabric.actors._actor_concurrency_settings.setReentrancyMode(ActorReentrancyMode)
  id: setReentrancyMode(ActorReentrancyMode)
  parent: microsoft.servicefabric.actors._actor_concurrency_settings
  href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
  langs:
  - java
  name: setReentrancyMode(ActorReentrancyMode mode)
  fullName: void microsoft.servicefabric.actors.ActorConcurrencySettings.setReentrancyMode(ActorReentrancyMode mode)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
    startLine: 43
  package: microsoft.servicefabric.actors
  summary: >-
    <p>sets Reentrancy mode for actor method calls.</p>

    <p></p>
  syntax:
    content: public void setReentrancyMode(ActorReentrancyMode mode)
    parameters:
    - id: mode
      type: microsoft.servicefabric.actors._actor_reentrancy_mode
      description: <p>reentrancy mode. <xref href="microsoft.servicefabric.actors._actor_reentrancy_mode" data-throw-if-not-resolved="false"></xref> for the actor method calls. </p>
references:
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: microsoft.servicefabric.actors._actor_concurrency_settings.ActorConcurrencySettings(ActorConcurrencySettings)
- uid: microsoft.servicefabric.actors._actor_reentrancy_mode
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_reentrancy_mode.yml
  name: ActorReentrancyMode
  fullName: microsoft.servicefabric.actors.ActorReentrancyMode
  type: Enum
  summary: <p>Specifies Reentrancy mode for actor method calls. </p>
  syntax:
    content: public enum ActorReentrancyMode
- uid: microsoft.servicefabric.actors._actor_concurrency_settings
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
  name: ActorConcurrencySettings
  fullName: microsoft.servicefabric.actors.ActorConcurrencySettings
  type: Class
  summary: <p>The method calls on an actor dispatched via in turn with support for logical call context based reentrancy. This class provides the settings to configure the turn based concurrency lock for actors. </p>
  syntax: *o1
- uid: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception.yml
  name: ActorConcurrencyLockTimeoutException
  fullName: microsoft.servicefabric.actors.ActorConcurrencyLockTimeoutException
  type: Class
  summary: <p>Exception thrown by actor runtime when runtime cannot acquire the turn based concurrency lock to dispatch the method. </p>
  syntax:
    content: public class ActorConcurrencyLockTimeoutException extends FabricException
