items:
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  id: _mqtt_device_twin_test
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  children:
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.constructorConstructsSubscribeTopicForTwin(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parsePayloadRemovesTopicIfFound(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parsePayloadReturnNullIfTopicIsNull(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parsePayloadReturnsBytesForSpecifiedTopic(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parsePayloadThrowsExceptionIfQueueIsNull(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parsePayloadThrowsExceptionTopicIsNotFound(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parseTopicLooksForDeviceTwinTopic(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parseTopicReturnsNullIfNoDeviceTwinTopicFound(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parseTopicReturnsNullIfRecevedQueueIsEmpty(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parseTopicThrowsExceptionIfQueueIsNull(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveDoesNotSetDataForUpdateReportedPropResp(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveDoesNotSetReqIdOnResTopicIfNotFound(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveDoesNotSetVersionForDesiredPropNotifRespIfNotFound(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveDoesNotSetVersionOnResTopicIfNotFound(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveParsesPatchTopicForDesiredPropertiesNotificationSucceeds(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveParsesResponseTopicForGetTwinSucceeds(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveParsesResponseTopicForUpdateReportedPropertiesSucceeds(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveParsesResponseTopicInvalidStatusThrowsException(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveParsesResponseTopicMandatoryStatusNotFoundException(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveReturnsNullMessageIfTopicNotFound(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveSetsDataForDesiredPropNotifResp(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveSetsDataForGetTwinResp(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveSetsReqIdOnResTopic(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveSetsVersionOnResTopic(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveSetVersionForDesiredPropNotifRespIfFound(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchDesiredProp(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchOrResTopic(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendDoesNotPublishesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendDoesNotThrowsIoExceptionIfMessageIsEmpty(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendPublishesMessageForGetTwinOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendPublishesMessageForUpdateReportedPropertiesOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendSubscribesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendThrowsExceptionForGetTwinOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendThrowsExceptionForUpdateReportedPropertiesOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendThrowsIoExceptionIfMessageIsNull(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.startSubscribesToDeviceTwinResponse(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.startThrowsExceptionIfSubscribesFails(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.stopThrowsExceptionIfUnSubscribesFails(@Mocked final Mqtt)
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.stopUnsubscribesFromDeviceTwinResponse(@Mocked final Mqtt)
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: MqttDeviceTwinTest
  fullName: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 28
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public class MqttDeviceTwinTest
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.anyString()
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.mockIOException()
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.mockReqId()
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.mockVersion()
  - tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.resTopic()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.constructorConstructsSubscribeTopicForTwin(@Mocked final Mqtt)
  id: constructorConstructsSubscribeTopicForTwin(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: constructorConstructsSubscribeTopicForTwin(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.constructorConstructsSubscribeTopicForTwin(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 43
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void constructorConstructsSubscribeTopicForTwin(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parsePayloadRemovesTopicIfFound(@Mocked final Mqtt)
  id: parsePayloadRemovesTopicIfFound(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: parsePayloadRemovesTopicIfFound(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.parsePayloadRemovesTopicIfFound(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 328
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void parsePayloadRemovesTopicIfFound(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parsePayloadReturnNullIfTopicIsNull(@Mocked final Mqtt)
  id: parsePayloadReturnNullIfTopicIsNull(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: parsePayloadReturnNullIfTopicIsNull(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.parsePayloadReturnNullIfTopicIsNull(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 245
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void parsePayloadReturnNullIfTopicIsNull(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parsePayloadReturnsBytesForSpecifiedTopic(@Mocked final Mqtt)
  id: parsePayloadReturnsBytesForSpecifiedTopic(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: parsePayloadReturnsBytesForSpecifiedTopic(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.parsePayloadReturnsBytesForSpecifiedTopic(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 301
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void parsePayloadReturnsBytesForSpecifiedTopic(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parsePayloadThrowsExceptionIfQueueIsNull(@Mocked final Mqtt)
  id: parsePayloadThrowsExceptionIfQueueIsNull(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: parsePayloadThrowsExceptionIfQueueIsNull(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.parsePayloadThrowsExceptionIfQueueIsNull(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 261
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void parsePayloadThrowsExceptionIfQueueIsNull(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parsePayloadThrowsExceptionTopicIsNotFound(@Mocked final Mqtt)
  id: parsePayloadThrowsExceptionTopicIsNotFound(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: parsePayloadThrowsExceptionTopicIsNotFound(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.parsePayloadThrowsExceptionTopicIsNotFound(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 279
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void parsePayloadThrowsExceptionTopicIsNotFound(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parseTopicLooksForDeviceTwinTopic(@Mocked final Mqtt)
  id: parseTopicLooksForDeviceTwinTopic(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: parseTopicLooksForDeviceTwinTopic(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.parseTopicLooksForDeviceTwinTopic(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 166
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void parseTopicLooksForDeviceTwinTopic(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parseTopicReturnsNullIfNoDeviceTwinTopicFound(@Mocked final Mqtt)
  id: parseTopicReturnsNullIfNoDeviceTwinTopicFound(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: parseTopicReturnsNullIfNoDeviceTwinTopicFound(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.parseTopicReturnsNullIfNoDeviceTwinTopicFound(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 189
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void parseTopicReturnsNullIfNoDeviceTwinTopicFound(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parseTopicReturnsNullIfRecevedQueueIsEmpty(@Mocked final Mqtt)
  id: parseTopicReturnsNullIfRecevedQueueIsEmpty(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: parseTopicReturnsNullIfRecevedQueueIsEmpty(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.parseTopicReturnsNullIfRecevedQueueIsEmpty(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 210
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void parseTopicReturnsNullIfRecevedQueueIsEmpty(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.parseTopicThrowsExceptionIfQueueIsNull(@Mocked final Mqtt)
  id: parseTopicThrowsExceptionIfQueueIsNull(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: parseTopicThrowsExceptionIfQueueIsNull(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.parseTopicThrowsExceptionIfQueueIsNull(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 227
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void parseTopicThrowsExceptionIfQueueIsNull(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveDoesNotSetDataForUpdateReportedPropResp(@Mocked final Mqtt)
  id: receiveDoesNotSetDataForUpdateReportedPropResp(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveDoesNotSetDataForUpdateReportedPropResp(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveDoesNotSetDataForUpdateReportedPropResp(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 1048
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveDoesNotSetDataForUpdateReportedPropResp(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveDoesNotSetReqIdOnResTopicIfNotFound(@Mocked final Mqtt)
  id: receiveDoesNotSetReqIdOnResTopicIfNotFound(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveDoesNotSetReqIdOnResTopicIfNotFound(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveDoesNotSetReqIdOnResTopicIfNotFound(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 889
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveDoesNotSetReqIdOnResTopicIfNotFound(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveDoesNotSetVersionForDesiredPropNotifRespIfNotFound(@Mocked final Mqtt)
  id: receiveDoesNotSetVersionForDesiredPropNotifRespIfNotFound(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveDoesNotSetVersionForDesiredPropNotifRespIfNotFound(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveDoesNotSetVersionForDesiredPropNotifRespIfNotFound(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 1136
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveDoesNotSetVersionForDesiredPropNotifRespIfNotFound(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveDoesNotSetVersionOnResTopicIfNotFound(@Mocked final Mqtt)
  id: receiveDoesNotSetVersionOnResTopicIfNotFound(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveDoesNotSetVersionOnResTopicIfNotFound(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveDoesNotSetVersionOnResTopicIfNotFound(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 965
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveDoesNotSetVersionOnResTopicIfNotFound(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveParsesPatchTopicForDesiredPropertiesNotificationSucceeds(@Mocked final Mqtt)
  id: receiveParsesPatchTopicForDesiredPropertiesNotificationSucceeds(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveParsesPatchTopicForDesiredPropertiesNotificationSucceeds(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveParsesPatchTopicForDesiredPropertiesNotificationSucceeds(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 763
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveParsesPatchTopicForDesiredPropertiesNotificationSucceeds(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveParsesResponseTopicForGetTwinSucceeds(@Mocked final Mqtt)
  id: receiveParsesResponseTopicForGetTwinSucceeds(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveParsesResponseTopicForGetTwinSucceeds(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveParsesResponseTopicForGetTwinSucceeds(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 689
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveParsesResponseTopicForGetTwinSucceeds(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveParsesResponseTopicForUpdateReportedPropertiesSucceeds(@Mocked final Mqtt)
  id: receiveParsesResponseTopicForUpdateReportedPropertiesSucceeds(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveParsesResponseTopicForUpdateReportedPropertiesSucceeds(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveParsesResponseTopicForUpdateReportedPropertiesSucceeds(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 722
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveParsesResponseTopicForUpdateReportedPropertiesSucceeds(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveParsesResponseTopicInvalidStatusThrowsException(@Mocked final Mqtt)
  id: receiveParsesResponseTopicInvalidStatusThrowsException(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveParsesResponseTopicInvalidStatusThrowsException(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveParsesResponseTopicInvalidStatusThrowsException(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 826
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveParsesResponseTopicInvalidStatusThrowsException(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveParsesResponseTopicMandatoryStatusNotFoundException(@Mocked final Mqtt)
  id: receiveParsesResponseTopicMandatoryStatusNotFoundException(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveParsesResponseTopicMandatoryStatusNotFoundException(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveParsesResponseTopicMandatoryStatusNotFoundException(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 796
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveParsesResponseTopicMandatoryStatusNotFoundException(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveReturnsNullMessageIfTopicNotFound(@Mocked final Mqtt)
  id: receiveReturnsNullMessageIfTopicNotFound(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveReturnsNullMessageIfTopicNotFound(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveReturnsNullMessageIfTopicNotFound(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 1274
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveReturnsNullMessageIfTopicNotFound(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveSetsDataForDesiredPropNotifResp(@Mocked final Mqtt)
  id: receiveSetsDataForDesiredPropNotifResp(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveSetsDataForDesiredPropNotifResp(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveSetsDataForDesiredPropNotifResp(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 1094
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveSetsDataForDesiredPropNotifResp(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveSetsDataForGetTwinResp(@Mocked final Mqtt)
  id: receiveSetsDataForGetTwinResp(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveSetsDataForGetTwinResp(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveSetsDataForGetTwinResp(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 1003
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveSetsDataForGetTwinResp(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveSetsReqIdOnResTopic(@Mocked final Mqtt)
  id: receiveSetsReqIdOnResTopic(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveSetsReqIdOnResTopic(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveSetsReqIdOnResTopic(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 855
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveSetsReqIdOnResTopic(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveSetsVersionOnResTopic(@Mocked final Mqtt)
  id: receiveSetsVersionOnResTopic(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveSetsVersionOnResTopic(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveSetsVersionOnResTopic(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 927
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveSetsVersionOnResTopic(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveSetVersionForDesiredPropNotifRespIfFound(@Mocked final Mqtt)
  id: receiveSetVersionForDesiredPropNotifRespIfFound(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveSetVersionForDesiredPropNotifRespIfFound(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveSetVersionForDesiredPropNotifRespIfFound(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 1177
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveSetVersionForDesiredPropNotifRespIfFound(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchDesiredProp(@Mocked final Mqtt)
  id: receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchDesiredProp(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchDesiredProp(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchDesiredProp(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 1219
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchDesiredProp(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchOrResTopic(@Mocked final Mqtt)
  id: receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchOrResTopic(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchOrResTopic(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchOrResTopic(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 1247
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void receiveThrowsUnsupportedExceptionOnAnythingOtherThenPatchOrResTopic(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendDoesNotPublishesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  id: sendDoesNotPublishesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: sendDoesNotPublishesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendDoesNotPublishesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 529
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void sendDoesNotPublishesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    - id: mockMessage
      type: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendDoesNotThrowsIoExceptionIfMessageIsEmpty(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  id: sendDoesNotThrowsIoExceptionIfMessageIsEmpty(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: sendDoesNotThrowsIoExceptionIfMessageIsEmpty(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendDoesNotThrowsIoExceptionIfMessageIsEmpty(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 645
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void sendDoesNotThrowsIoExceptionIfMessageIsEmpty(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    - id: mockMessage
      type: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendPublishesMessageForGetTwinOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  id: sendPublishesMessageForGetTwinOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: sendPublishesMessageForGetTwinOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendPublishesMessageForGetTwinOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 350
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void sendPublishesMessageForGetTwinOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    - id: mockMessage
      type: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendPublishesMessageForUpdateReportedPropertiesOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  id: sendPublishesMessageForUpdateReportedPropertiesOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: sendPublishesMessageForUpdateReportedPropertiesOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendPublishesMessageForUpdateReportedPropertiesOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 441
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void sendPublishesMessageForUpdateReportedPropertiesOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    - id: mockMessage
      type: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendSubscribesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  id: sendSubscribesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: sendSubscribesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendSubscribesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 574
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void sendSubscribesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    - id: mockMessage
      type: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendThrowsExceptionForGetTwinOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  id: sendThrowsExceptionForGetTwinOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: sendThrowsExceptionForGetTwinOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendThrowsExceptionForGetTwinOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 393
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void sendThrowsExceptionForGetTwinOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    - id: mockMessage
      type: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendThrowsExceptionForUpdateReportedPropertiesOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  id: sendThrowsExceptionForUpdateReportedPropertiesOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: sendThrowsExceptionForUpdateReportedPropertiesOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendThrowsExceptionForUpdateReportedPropertiesOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 484
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void sendThrowsExceptionForUpdateReportedPropertiesOnCorrectTopicIfReqIdIsNullOrEmpty(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    - id: mockMessage
      type: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.sendThrowsIoExceptionIfMessageIsNull(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  id: sendThrowsIoExceptionIfMessageIsNull(@Mocked final Mqtt,@Mocked final DeviceTwinMessage)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: sendThrowsIoExceptionIfMessageIsNull(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendThrowsIoExceptionIfMessageIsNull(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 618
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void sendThrowsIoExceptionIfMessageIsNull(@Mocked final Mqtt mockMqtt, @Mocked final DeviceTwinMessage mockMessage)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    - id: mockMessage
      type: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.startSubscribesToDeviceTwinResponse(@Mocked final Mqtt)
  id: startSubscribesToDeviceTwinResponse(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: startSubscribesToDeviceTwinResponse(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.startSubscribesToDeviceTwinResponse(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 60
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void startSubscribesToDeviceTwinResponse(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.startThrowsExceptionIfSubscribesFails(@Mocked final Mqtt)
  id: startThrowsExceptionIfSubscribesFails(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: startThrowsExceptionIfSubscribesFails(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.startThrowsExceptionIfSubscribesFails(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 84
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void startThrowsExceptionIfSubscribesFails(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.stopThrowsExceptionIfUnSubscribesFails(@Mocked final Mqtt)
  id: stopThrowsExceptionIfUnSubscribesFails(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: stopThrowsExceptionIfUnSubscribesFails(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.stopThrowsExceptionIfUnSubscribesFails(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 137
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void stopThrowsExceptionIfUnSubscribesFails(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.stopUnsubscribesFromDeviceTwinResponse(@Mocked final Mqtt)
  id: stopUnsubscribesFromDeviceTwinResponse(@Mocked final Mqtt)
  parent: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test
  href: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.yml
  langs:
  - java
  name: stopUnsubscribesFromDeviceTwinResponse(@Mocked final Mqtt mockMqtt)
  fullName: void tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.stopUnsubscribesFromDeviceTwinResponse(@Mocked final Mqtt mockMqtt)
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java
    startLine: 113
  package: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt
  syntax:
    content: public void stopUnsubscribesFromDeviceTwinResponse(@Mocked final Mqtt mockMqtt)
    parameters:
    - id: mockMqtt
      type: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
references:
- uid: 5514d1f5com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  spec.java:
  - name: '@Mocked final '
    fullName: '@Mocked final '
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    name: Mqtt
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
- uid: 5514d1f5com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message
  spec.java:
  - name: '@Mocked final '
    fullName: '@Mocked final '
  - uid: com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message
    name: DeviceTwinMessage
    fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinMessage
    href: com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message.yml
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.anyString()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.mockIOException()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.mockReqId()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.mockVersion()
- uid: tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_device_twin_test.resTopic()
- uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
  parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
  href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
  name: Mqtt
  fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
  type: Class
  syntax:
    content: public class Mqtt
- uid: com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._device_twin_message.yml
  name: DeviceTwinMessage
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinMessage
  type: Class
  syntax:
    content: public class DeviceTwinMessage extends Message
