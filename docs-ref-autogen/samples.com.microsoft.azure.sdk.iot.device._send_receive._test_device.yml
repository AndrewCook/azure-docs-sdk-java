items:
- uid: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device
  id: _test_device
  parent: samples.com.microsoft.azure.sdk.iot.device
  children:
  - samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.CloseConnection()
  - samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.run()
  - samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.SendAndRecieve_n()
  - samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.TestDevice(String,IotHubClientProtocol,String,int,int)
  href: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.yml
  langs:
  - java
  name: SendReceive.TestDevice
  fullName: samples.com.microsoft.azure.sdk.iot.device.SendReceive.TestDevice
  type: Class
  source:
    remote: &o0
      path: device/iot-device-samples/send-receive-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/SendReceive.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-samples/send-receive-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/SendReceive.java
    startLine: 121
  package: samples.com.microsoft.azure.sdk.iot.device
  syntax:
    content: protected class TestDevice
  inheritance:
  - java.lang.Object
- uid: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.CloseConnection()
  id: CloseConnection()
  parent: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device
  href: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.yml
  langs:
  - java
  name: CloseConnection()
  fullName: void samples.com.microsoft.azure.sdk.iot.device.SendReceive.TestDevice.CloseConnection()
  type: Method
  source:
    remote: *o0
    path: device/iot-device-samples/send-receive-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/SendReceive.java
    startLine: 229
  package: samples.com.microsoft.azure.sdk.iot.device
  syntax:
    content: public void CloseConnection()
- uid: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.run()
  id: run()
  parent: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device
  href: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.yml
  langs:
  - java
  name: run()
  fullName: void samples.com.microsoft.azure.sdk.iot.device.SendReceive.TestDevice.run()
  type: Method
  source:
    remote: *o0
    path: device/iot-device-samples/send-receive-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/SendReceive.java
    startLine: 132
  package: samples.com.microsoft.azure.sdk.iot.device
  syntax:
    content: public void run()
- uid: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.SendAndRecieve_n()
  id: SendAndRecieve_n()
  parent: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device
  href: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.yml
  langs:
  - java
  name: SendAndRecieve_n()
  fullName: void samples.com.microsoft.azure.sdk.iot.device.SendReceive.TestDevice.SendAndRecieve_n()
  type: Method
  source:
    remote: *o0
    path: device/iot-device-samples/send-receive-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/SendReceive.java
    startLine: 206
  package: samples.com.microsoft.azure.sdk.iot.device
  syntax:
    content: public void SendAndRecieve_n()
- uid: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.TestDevice(String,IotHubClientProtocol,String,int,int)
  id: TestDevice(String,IotHubClientProtocol,String,int,int)
  parent: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device
  href: samples.com.microsoft.azure.sdk.iot.device._send_receive._test_device.yml
  langs:
  - java
  name: TestDevice(String connString, IotHubClientProtocol protocol, String pathToCertificate, int numRequests, int numKeys)
  fullName: samples.com.microsoft.azure.sdk.iot.device.SendReceive.TestDevice.TestDevice(String connString, IotHubClientProtocol protocol, String pathToCertificate, int numRequests, int numKeys)
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-samples/send-receive-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/SendReceive.java
    startLine: 152
  package: samples.com.microsoft.azure.sdk.iot.device
  syntax:
    content: public TestDevice(String connString, IotHubClientProtocol protocol, String pathToCertificate, int numRequests, int numKeys)
    parameters:
    - id: connString
      type: "26831127"
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
    - id: pathToCertificate
      type: "26831127"
    - id: numRequests
      type: f75371fa
    - id: numKeys
      type: f75371fa
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.device._device_client
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  name: DeviceClient
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
  type: Class
  summary: >-
    <p>The public-facing API. Allows a single logical or physical device to connect to an IoT Hub. The IoT Hub client supports sending events to and receiving messages from an IoT Hub. </p>

    <p>To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages. </p>

    <p>The client buffers messages while the network is down, and re-sends them when the network comes back online. It also batches messages to improve communication efficiency (HTTPS only). </p>

    <p>The client supports HTTPS 1.1 and AMQPS 1.0 transports. </p>
  syntax:
    content: public class DeviceClient
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol.yml
  name: IotHubClientProtocol
  fullName: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
  type: Enum
  summary: <p>The application-layer protocol used by the client to communicate with an IoT Hub. </p>
  syntax:
    content: public enum IotHubClientProtocol
