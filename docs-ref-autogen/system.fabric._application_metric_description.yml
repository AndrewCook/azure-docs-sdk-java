items:
- uid: system.fabric._application_metric_description
  id: _application_metric_description
  parent: system.fabric
  children:
  - system.fabric._application_metric_description.ApplicationMetricDescription()
  - system.fabric._application_metric_description.getMaximumNodeCapacity()
  - system.fabric._application_metric_description.getName()
  - system.fabric._application_metric_description.getNodeReservationCapacity()
  - system.fabric._application_metric_description.getTotalApplicationCapacity()
  - system.fabric._application_metric_description.setMaximumNodeCapacity(long)
  - system.fabric._application_metric_description.setName(String)
  - system.fabric._application_metric_description.setNodeReservationCapacity(long)
  - system.fabric._application_metric_description.setTotalApplicationCapacity(long)
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: ApplicationMetricDescription
  fullName: system.fabric.ApplicationMetricDescription
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 8
  package: system.fabric
  summary: <p>Specifies the application capacity for one metric. <xref href="system.fabric._application_description" data-throw-if-not-resolved="false"></xref><xref href="system.fabric._application_update_description" data-throw-if-not-resolved="false"></xref></p>
  syntax: &o1
    content: public class ApplicationMetricDescription
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - system.fabric._application_metric_description.ApplicationMetricDescription(String,long,long,long)
  - system.fabric._application_metric_description.fromNative(long)
  - system.fabric._application_metric_description.toNative(PinCollection)
  - system.fabric._application_metric_description.validate(ApplicationMetricDescription,long)
- uid: system.fabric._application_metric_description.ApplicationMetricDescription()
  id: ApplicationMetricDescription()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: ApplicationMetricDescription()
  fullName: system.fabric.ApplicationMetricDescription.ApplicationMetricDescription()
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 18
  package: system.fabric
  syntax:
    content: public ApplicationMetricDescription()
- uid: system.fabric._application_metric_description.getMaximumNodeCapacity()
  id: getMaximumNodeCapacity()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: getMaximumNodeCapacity()
  fullName: long system.fabric.ApplicationMetricDescription.getMaximumNodeCapacity()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 116
  package: system.fabric
  summary: >-
    <p>Gets the maximum node capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref href="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and this value must always be smaller than or equal to <xref href="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"></xref>. </p>

    <p>When updating existing application with application capacity, the product of <xref href="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and this value must always be smaller than or equal to <xref href="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: &o2
    content: public long getMaximumNodeCapacity()
    return:
      type: 0364520f
      description: <p>Specifies the Maximum Load for an instance of this Application on a single Node. Even if Capacity of the node is greater than this value, Service Fabric will limit the total load of services within the Application on each node to this value. If set to zero, capacity for this metric is unlimited on each node. </p>
- uid: system.fabric._application_metric_description.getName()
  id: getName()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: getName()
  fullName: String system.fabric.ApplicationMetricDescription.getName()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 41
  package: system.fabric
  summary: >-
    <p>Gets the name of the metric.</p>

    <p></p>
  syntax:
    content: public String getName()
    return:
      type: "26831127"
      description: <p>The name of the metric. </p>
- uid: system.fabric._application_metric_description.getNodeReservationCapacity()
  id: getNodeReservationCapacity()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: getNodeReservationCapacity()
  fullName: long system.fabric.ApplicationMetricDescription.getNodeReservationCapacity()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 72
  package: system.fabric
  summary: >-
    <p>Gets the node reservation capacity for Service Fabric application.</p>

    <p>

    When setting application capacity (<xref href="system.fabric._application_description" data-throw-if-not-resolved="false"></xref>) or when updating application capacity (( <xref href="system.fabric._application_update_description" data-throw-if-not-resolved="false"></xref>) this value must be smaller than or equal to <xref href="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false"></xref> for each metric. </p>
  syntax:
    content: public long getNodeReservationCapacity()
    return:
      type: 0364520f
      description: <p>Specifies the amount of Metric Load which is reserved on nodes which have instances of this Application. If <xref href="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false"></xref> is specified, then the product of these values will be the Capacity reserved in the cluster for the Application. If set to zero, no capacity is reserved for this metric. </p>
- uid: system.fabric._application_metric_description.getTotalApplicationCapacity()
  id: getTotalApplicationCapacity()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: getTotalApplicationCapacity()
  fullName: long system.fabric.ApplicationMetricDescription.getTotalApplicationCapacity()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 164
  package: system.fabric
  summary: >-
    <p>Gets the total metric capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref href="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and <xref href="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false"></xref> must always be smaller than or equal to this value. </p>

    <p>When creating a new application with application capacity defined, the product of <xref href="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and <xref href="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false"></xref> must always be smaller than or equal to this value. </p>
  syntax: &o3
    content: public long getTotalApplicationCapacity()
    return:
      type: 0364520f
      description: <p>Specifies the total metric capacity for this Application in the Cluster. Service Fabric will try to limit the sum of loads of services within the Application to this value. </p>
- uid: system.fabric._application_metric_description.setMaximumNodeCapacity(long)
  id: setMaximumNodeCapacity(long)
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: setMaximumNodeCapacity(long maximumNodeCapacity)
  fullName: void system.fabric.ApplicationMetricDescription.setMaximumNodeCapacity(long maximumNodeCapacity)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 141
  package: system.fabric
  summary: >-
    <p>Sets the maximum node capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref href="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and this value must always be smaller than or equal to <xref href="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"></xref>. </p>

    <p>When updating existing application with application capacity, the product of <xref href="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and this value must always be smaller than or equal to <xref href="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public void setMaximumNodeCapacity(long maximumNodeCapacity)
    parameters:
    - id: maximumNodeCapacity
      type: 0364520f
      description: <p>Specifies the Maximum Load for an instance of this Application on a single Node. Even if Capacity of the node is greater than this value, Service Fabric will limit the total load of services within the Application on each node to this value. If set to zero, capacity for this metric is unlimited on each node. </p>
- uid: system.fabric._application_metric_description.setName(String)
  id: setName(String)
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: setName(String name)
  fullName: void system.fabric.ApplicationMetricDescription.setName(String name)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 51
  package: system.fabric
  summary: >-
    <p>Sets the name of the metric.</p>

    <p></p>
  syntax:
    content: public void setName(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>The name of the metric. </p>
- uid: system.fabric._application_metric_description.setNodeReservationCapacity(long)
  id: setNodeReservationCapacity(long)
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: setNodeReservationCapacity(long nodeReservationCapacity)
  fullName: void system.fabric.ApplicationMetricDescription.setNodeReservationCapacity(long nodeReservationCapacity)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 92
  package: system.fabric
  summary: >-
    <p>Gets the node reservation capacity for Service Fabric application.</p>

    <p>

    When setting application capacity (<xref href="system.fabric._application_description" data-throw-if-not-resolved="false"></xref>) or when updating application capacity (( <xref href="system.fabric._application_update_description" data-throw-if-not-resolved="false"></xref>) this value must be smaller than or equal to <xref href="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false"></xref> for each metric. </p>
  syntax:
    content: public void setNodeReservationCapacity(long nodeReservationCapacity)
    parameters:
    - id: nodeReservationCapacity
      type: 0364520f
      description: <p>Specifies the amount of Metric Load which is reserved on nodes which have instances of this Application. If <xref href="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false"></xref> is specified, then the product of these values will be the Capacity reserved in the cluster for the Application. If set to zero, no capacity is reserved for this metric. </p>
- uid: system.fabric._application_metric_description.setTotalApplicationCapacity(long)
  id: setTotalApplicationCapacity(long)
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  langs:
  - java
  name: setTotalApplicationCapacity(long totalApplicationCapacity)
  fullName: void system.fabric.ApplicationMetricDescription.setTotalApplicationCapacity(long totalApplicationCapacity)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
    startLine: 188
  package: system.fabric
  summary: >-
    <p>Sets the total metric capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref href="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and <xref href="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false"></xref> must always be smaller than or equal to this value. </p>

    <p>When creating a new application with application capacity defined, the product of <xref href="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and <xref href="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false"></xref> must always be smaller than or equal to this value. </p>
  syntax:
    content: public void setTotalApplicationCapacity(long totalApplicationCapacity)
    parameters:
    - id: totalApplicationCapacity
      type: 0364520f
      description: <p>Specifies the total metric capacity for this Application in the Cluster. Service Fabric will try to limit the sum of loads of services within the Application to this value. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric._application_metric_description.ApplicationMetricDescription(String,long,long,long)
- uid: system.fabric._application_metric_description.fromNative(long)
- uid: system.fabric._application_metric_description.toNative(PinCollection)
- uid: system.fabric._application_metric_description.validate(ApplicationMetricDescription,long)
- uid: system.fabric._application_metric_description
  parent: system.fabric
  href: system.fabric._application_metric_description.yml
  name: ApplicationMetricDescription
  fullName: system.fabric.ApplicationMetricDescription
  type: Class
  summary: <p>Specifies the application capacity for one metric. <xref href="system.fabric._application_description" data-throw-if-not-resolved="false"></xref><xref href="system.fabric._application_update_description" data-throw-if-not-resolved="false"></xref></p>
  syntax: *o1
- uid: system.fabric._application_description.getMinimumNodes()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  name: getMinimumNodes()
  fullName: long system.fabric.ApplicationDescription.getMinimumNodes()
  type: Method
  summary: >-
    <p>Gets the minimum number of nodes where Service Fabric will reserve capacity for this application.</p>

    <p></p>
  syntax:
    content: public long getMinimumNodes()
    return:
      type: 0364520f
      description: <p>Number of nodes where Service Fabric will reserve Capacity in the cluster for this Application to be placed. Note that this does not mean that the Application is guaranteed to have replicas on all those nodes. If this parameter is set to zero, no capacity will be reserved. If this parameters is greater than <xref href="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> an <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> will be thrown when <xref href="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false"></xref> is called. </p>
- uid: system.fabric._application_description
  parent: system.fabric
  href: system.fabric._application_description.yml
  name: ApplicationDescription
  fullName: system.fabric.ApplicationDescription
  type: Class
  summary: <p>Describes an application to be created by using <xref href="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class ApplicationDescription
- uid: system.fabric._application_update_description
  parent: system.fabric
  href: system.fabric._application_update_description.yml
  name: ApplicationUpdateDescription
  fullName: system.fabric.ApplicationUpdateDescription
  type: Class
  summary: <p>Describes an update of application capacity that will be updated using <xref href="system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class ApplicationUpdateDescription
- uid: system.fabric._application_metric_description.getMaximumNodeCapacity()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  name: getMaximumNodeCapacity()
  fullName: long system.fabric.ApplicationMetricDescription.getMaximumNodeCapacity()
  type: Method
  summary: >-
    <p>Gets the maximum node capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref href="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and this value must always be smaller than or equal to <xref href="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"></xref>. </p>

    <p>When updating existing application with application capacity, the product of <xref href="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and this value must always be smaller than or equal to <xref href="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: *o2
- uid: system.fabric._application_description.getMaximumNodes()
  parent: system.fabric._application_description
  href: system.fabric._application_description.yml
  name: getMaximumNodes()
  fullName: long system.fabric.ApplicationDescription.getMaximumNodes()
  type: Method
  summary: >-
    <p>Gets the maximum number of nodes where this application can be instantiated.</p>

    <p></p>
  syntax:
    content: public long getMaximumNodes()
    return:
      type: 0364520f
      description: <p>Number of nodes this application is allowed to span. Default value is zero. If it is zero, Application can span any number of nodes in the cluster. If this parameter is smaller than <xref href="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false"></xref> an <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> will be thrown when <xref href="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false"></xref> is called. </p>
- uid: system.fabric._application_metric_description.getTotalApplicationCapacity()
  parent: system.fabric._application_metric_description
  href: system.fabric._application_metric_description.yml
  name: getTotalApplicationCapacity()
  fullName: long system.fabric.ApplicationMetricDescription.getTotalApplicationCapacity()
  type: Method
  summary: >-
    <p>Gets the total metric capacity for Service Fabric application.</p>

    <p>

    When creating a new application with application capacity defined, the product of <xref href="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and <xref href="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false"></xref> must always be smaller than or equal to this value. </p>

    <p>When creating a new application with application capacity defined, the product of <xref href="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false"></xref> and <xref href="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false"></xref> must always be smaller than or equal to this value. </p>
  syntax: *o3
- uid: system.fabric._application_update_description.getMaximumNodes()
  parent: system.fabric._application_update_description
  href: system.fabric._application_update_description.yml
  name: getMaximumNodes()
  fullName: Long system.fabric.ApplicationUpdateDescription.getMaximumNodes()
  type: Method
  summary: >-
    <p>Gets the maximum number of nodes where this application can be instantiated.</p>

    <p>

    If it is zero, Application can be placed on any number of nodes in the cluster. </p>

    <p>If this parameter is not specified when updating an application, then the maximum number of nodes remains unchanged. </p>

    <p>If this parameter is smaller than <xref href="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false"></xref> an <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> will be thrown when <xref href="system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)" data-throw-if-not-resolved="false"></xref> is called. </p>
  syntax:
    content: public Long getMaximumNodes()
    return:
      type: 34f09483
      description: <p>Number of nodes this application is allowed to span. Default value is zero. </p>
- uid: system.fabric._pin_collection
  parent: system.fabric
  href: system.fabric._pin_collection.yml
  name: PinCollection
  fullName: system.fabric.PinCollection
  type: Class
  syntax:
    content: public class PinCollection
