items:
- uid: com.microsoft.applicationinsights.logback._application_insights_appender
  id: _application_insights_appender
  parent: com.microsoft.applicationinsights.logback
  children:
  - com.microsoft.applicationinsights.logback._application_insights_appender.append(ILoggingEvent)
  - com.microsoft.applicationinsights.logback._application_insights_appender.getTelemetryClientProxy()
  - com.microsoft.applicationinsights.logback._application_insights_appender.setInstrumentationKey(String)
  - com.microsoft.applicationinsights.logback._application_insights_appender.start()
  href: com.microsoft.applicationinsights.logback._application_insights_appender.yml
  langs:
  - java
  name: ApplicationInsightsAppender
  fullName: com.microsoft.applicationinsights.logback.ApplicationInsightsAppender
  type: Class
  source:
    remote: &o0
      path: logging/logback/appenderSrc/main/java/com/microsoft/applicationinsights/logback/ApplicationInsightsAppender.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: logging/logback/appenderSrc/main/java/com/microsoft/applicationinsights/logback/ApplicationInsightsAppender.java
    startLine: 33
  package: com.microsoft.applicationinsights.logback
  summary: <p>LOGBack appender. </p>
  syntax:
    content: public class ApplicationInsightsAppender
  inheritance:
  - java.lang.Object
  - ch.qos.logback.core.AppenderBase<ILoggingEvent>
- uid: com.microsoft.applicationinsights.logback._application_insights_appender.append(ILoggingEvent)
  id: append(ILoggingEvent)
  parent: com.microsoft.applicationinsights.logback._application_insights_appender
  href: com.microsoft.applicationinsights.logback._application_insights_appender.yml
  langs:
  - java
  name: append(ILoggingEvent eventObject)
  fullName: void com.microsoft.applicationinsights.logback.ApplicationInsightsAppender.append(ILoggingEvent eventObject)
  type: Method
  source:
    remote: *o0
    path: logging/logback/appenderSrc/main/java/com/microsoft/applicationinsights/logback/ApplicationInsightsAppender.java
    startLine: 66
  package: com.microsoft.applicationinsights.logback
  summary: >-
    <p>Appends the new event. Catching exceptions and check if the appender has been started is not necessary as it all taken care by the AppenderBase class.</p>

    <p></p>
  syntax:
    content: protected void append(ILoggingEvent eventObject)
    parameters:
    - id: eventObject
      type: ba559610
      description: <p>The event to append. </p>
- uid: com.microsoft.applicationinsights.logback._application_insights_appender.getTelemetryClientProxy()
  id: getTelemetryClientProxy()
  parent: com.microsoft.applicationinsights.logback._application_insights_appender
  href: com.microsoft.applicationinsights.logback._application_insights_appender.yml
  langs:
  - java
  name: getTelemetryClientProxy()
  fullName: TelemetryClientProxy com.microsoft.applicationinsights.logback.ApplicationInsightsAppender.getTelemetryClientProxy()
  type: Method
  source:
    remote: *o0
    path: logging/logback/appenderSrc/main/java/com/microsoft/applicationinsights/logback/ApplicationInsightsAppender.java
    startLine: 45
  package: com.microsoft.applicationinsights.logback
  syntax:
    content: public TelemetryClientProxy getTelemetryClientProxy()
    return:
      type: com.microsoft.applicationinsights.internal.common._telemetry_client_proxy
- uid: com.microsoft.applicationinsights.logback._application_insights_appender.setInstrumentationKey(String)
  id: setInstrumentationKey(String)
  parent: com.microsoft.applicationinsights.logback._application_insights_appender
  href: com.microsoft.applicationinsights.logback._application_insights_appender.yml
  langs:
  - java
  name: setInstrumentationKey(String instrumentationKey)
  fullName: void com.microsoft.applicationinsights.logback.ApplicationInsightsAppender.setInstrumentationKey(String instrumentationKey)
  type: Method
  source:
    remote: *o0
    path: logging/logback/appenderSrc/main/java/com/microsoft/applicationinsights/logback/ApplicationInsightsAppender.java
    startLine: 54
  package: com.microsoft.applicationinsights.logback
  summary: >-
    <p>Sets the instrumentation key.</p>

    <p></p>
  syntax:
    content: public void setInstrumentationKey(String instrumentationKey)
    parameters:
    - id: instrumentationKey
      type: "26831127"
      description: <p>The instrumentation key. </p>
- uid: com.microsoft.applicationinsights.logback._application_insights_appender.start()
  id: start()
  parent: com.microsoft.applicationinsights.logback._application_insights_appender
  href: com.microsoft.applicationinsights.logback._application_insights_appender.yml
  langs:
  - java
  name: start()
  fullName: void com.microsoft.applicationinsights.logback.ApplicationInsightsAppender.start()
  type: Method
  source:
    remote: *o0
    path: logging/logback/appenderSrc/main/java/com/microsoft/applicationinsights/logback/ApplicationInsightsAppender.java
    startLine: 78
  package: com.microsoft.applicationinsights.logback
  syntax:
    content: public void start()
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: ba559610
  spec.java:
  - name: ILoggingEvent
    fullName: ILoggingEvent
- uid: com.microsoft.applicationinsights.internal.common._log_telemetry_client_proxy
  parent: com.microsoft.applicationinsights.internal.common
  href: com.microsoft.applicationinsights.internal.common._log_telemetry_client_proxy.yml
  name: LogTelemetryClientProxy
  fullName: com.microsoft.applicationinsights.internal.common.LogTelemetryClientProxy
  type: Class
  summary: <p>This class encapsulates all the common logic for sending AI telemetry. This class is used by all Appenders, Listeners etc and therefore keeping them without any logic. </p>
  syntax:
    content: public class LogTelemetryClientProxy
- uid: com.microsoft.applicationinsights.internal.common._telemetry_client_proxy
  parent: com.microsoft.applicationinsights.internal.common
  href: com.microsoft.applicationinsights.internal.common._telemetry_client_proxy.yml
  name: TelemetryClientProxy
  fullName: com.microsoft.applicationinsights.internal.common.TelemetryClientProxy
  type: Interface
  syntax:
    content: public interface TelemetryClientProxy
