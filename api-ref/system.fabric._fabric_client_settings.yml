items:
- uid: system.fabric._fabric_client_settings
  id: _fabric_client_settings
  parent: system.fabric
  children:
  - system.fabric._fabric_client_settings.FabricClientSettings()
  - system.fabric._fabric_client_settings.getClientFriendlyName()
  - system.fabric._fabric_client_settings.getConnectionInitializationTimeout()
  - system.fabric._fabric_client_settings.getHealthOperationTimeout()
  - system.fabric._fabric_client_settings.getHealthReportRetrySendInterval()
  - system.fabric._fabric_client_settings.getHealthReportSendInterval()
  - system.fabric._fabric_client_settings.getKeepAliveInterval()
  - system.fabric._fabric_client_settings.getNotificationCacheUpdateTimeout()
  - system.fabric._fabric_client_settings.getNotificationGatewayConnectionTimeout()
  - system.fabric._fabric_client_settings.getPartitionLocationCacheBucketCount()
  - system.fabric._fabric_client_settings.getPartitionLocationCacheLimit()
  - system.fabric._fabric_client_settings.getServiceChangePollInterval()
  - system.fabric._fabric_client_settings.setClientFriendlyName(String)
  - system.fabric._fabric_client_settings.setConnectionInitializationTimeout(Duration)
  - system.fabric._fabric_client_settings.setHealthOperationTimeout(Duration)
  - system.fabric._fabric_client_settings.setHealthReportRetrySendInterval(Duration)
  - system.fabric._fabric_client_settings.setHealthReportSendInterval(Duration)
  - system.fabric._fabric_client_settings.setKeepAliveInterval(Duration)
  - system.fabric._fabric_client_settings.setNotificationCacheUpdateTimeout(Duration)
  - system.fabric._fabric_client_settings.setNotificationGatewayConnectionTimeout(Duration)
  - system.fabric._fabric_client_settings.setPartitionLocationCacheBucketCount(long)
  - system.fabric._fabric_client_settings.setPartitionLocationCacheLimit(long)
  - system.fabric._fabric_client_settings.setServiceChangePollInterval(Duration)
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: FabricClientSettings
  fullName: system.fabric.FabricClientSettings
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      branch: release_linux_5.3
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 6
  package: system.fabric
  summary: <p>Represents the configuration settings for the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax: &o1
    content: public class FabricClientSettings
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - system.fabric._fabric_client_settings.[static initializer]()
  - system.fabric._fabric_client_settings.FabricClientSettings(boolean)
  - system.fabric._fabric_client_settings.FabricClientSettings(long,Duration,Duration,Duration,Duration,Duration,String,long,Duration,Duration,Duration)
  - system.fabric._fabric_client_settings.FabricClientSettings(long,long,long,long,long,long,boolean,String,long,long,boolean,long,long)
  - system.fabric._fabric_client_settings.fromNative(long)
  - system.fabric._fabric_client_settings.toNative(PinCollection)
  - system.fabric._fabric_client_settings.validate()
- uid: system.fabric._fabric_client_settings.FabricClientSettings()
  id: FabricClientSettings()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: FabricClientSettings()
  fullName: system.fabric.FabricClientSettings.FabricClientSettings()
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 33
  package: system.fabric
  syntax:
    content: public FabricClientSettings()
- uid: system.fabric._fabric_client_settings.getClientFriendlyName()
  id: getClientFriendlyName()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: getClientFriendlyName()
  fullName: String system.fabric.FabricClientSettings.getClientFriendlyName()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 108
  package: system.fabric
  summary: <p>Gets the client friendly name that will appear in Service Fabric traces for debugging. <bold>Remarks:</bold> The default value is null and the client friendly name will automatically be generated as a UUID internally.</p>
  syntax:
    content: public String getClientFriendlyName()
    return:
      type: "26831127"
      description: <p>The client friendly name that will appear in Service Fabric traces for debugging. </p>
- uid: system.fabric._fabric_client_settings.getConnectionInitializationTimeout()
  id: getConnectionInitializationTimeout()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: getConnectionInitializationTimeout()
  fullName: Duration system.fabric.FabricClientSettings.getConnectionInitializationTimeout()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 173
  package: system.fabric
  summary: <p>Gets the timeout after which, if the current gateway address does not respond with a valid connection, another different address is randomly selected from the gateway addresses collection. <bold>Remarks:</bold>The default value of this property is 2 seconds. This property must be less than the value of the <xref href="system.fabric._fabric_client_settings.getServiceChangePollInterval()" data-throw-if-not-resolved="false"></xref> property.</p>
  syntax:
    content: public Duration getConnectionInitializationTimeout()
    return:
      type: e02a2de0
      description: <p>The timeout after the current gateway address does not respond with a valid connection. </p>
- uid: system.fabric._fabric_client_settings.getHealthOperationTimeout()
  id: getHealthOperationTimeout()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: getHealthOperationTimeout()
  fullName: Duration system.fabric.FabricClientSettings.getHealthOperationTimeout()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 210
  package: system.fabric
  summary: <p>Gets the timeout on health operation requests from the client to the gateway. <bold>Remarks:</bold>The default value of this property is 120 seconds.</p>
  syntax:
    content: public Duration getHealthOperationTimeout()
    return:
      type: e02a2de0
      description: <p>The timeout on health operation requests from the client to the gateway. </p>
- uid: system.fabric._fabric_client_settings.getHealthReportRetrySendInterval()
  id: getHealthReportRetrySendInterval()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: getHealthReportRetrySendInterval()
  fullName: Duration system.fabric.FabricClientSettings.getHealthReportRetrySendInterval()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 241
  package: system.fabric
  summary: <p>Gets the retry interval at which health reports that have not yet been acknowledged by the Health Manager are resent. <bold>Remarks:</bold>The default value of this property is 30 seconds.</p>
  syntax:
    content: public Duration getHealthReportRetrySendInterval()
    return:
      type: e02a2de0
      description: <p>The retry interval at which health reports that have not yet been acknowledged by the Health Manager are resent. </p>
- uid: system.fabric._fabric_client_settings.getHealthReportSendInterval()
  id: getHealthReportSendInterval()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: getHealthReportSendInterval()
  fullName: Duration system.fabric.FabricClientSettings.getHealthReportSendInterval()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 225
  package: system.fabric
  summary: <p>Gets the interval at which health reports are sent to Health Manager. <bold>Remarks:</bold>The default value of this property is 30 seconds.</p>
  syntax:
    content: public Duration getHealthReportSendInterval()
    return:
      type: e02a2de0
      description: <p>The interval at which health reports are sent to Health Manager. </p>
- uid: system.fabric._fabric_client_settings.getKeepAliveInterval()
  id: getKeepAliveInterval()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: getKeepAliveInterval()
  fullName: Duration system.fabric.FabricClientSettings.getKeepAliveInterval()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 192
  package: system.fabric
  summary: <p>Gets the interval at which the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> will ping the connected endpoint. <bold>Remarks:</bold>The default value of this property is 0 seconds. This property can't be updated after the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> is opened. Setting this property will throw a <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> exception. <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> will continue pinging as long as it has pending operations.</p>
  syntax:
    content: public Duration getKeepAliveInterval()
    return:
      type: e02a2de0
      description: <p>The interval at which the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> will ping the connected endpoint. </p>
- uid: system.fabric._fabric_client_settings.getNotificationCacheUpdateTimeout()
  id: getNotificationCacheUpdateTimeout()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: getNotificationCacheUpdateTimeout()
  fullName: Duration system.fabric.FabricClientSettings.getNotificationCacheUpdateTimeout()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 270
  package: system.fabric
  summary: <p>Gets the timeout for updating the local cache in response to service notifications. The default value is 30 seconds. </p>
  syntax:
    content: public Duration getNotificationCacheUpdateTimeout()
    return:
      type: e02a2de0
      description: <p>The timeout for updating the local cache in response to service notifications. </p>
- uid: system.fabric._fabric_client_settings.getNotificationGatewayConnectionTimeout()
  id: getNotificationGatewayConnectionTimeout()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: getNotificationGatewayConnectionTimeout()
  fullName: Duration system.fabric.FabricClientSettings.getNotificationGatewayConnectionTimeout()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 256
  package: system.fabric
  summary: <p>Gets the timeout for running a re-connection protocol if the client has registered for service notifications. The default value is 30 seconds. </p>
  syntax:
    content: public Duration getNotificationGatewayConnectionTimeout()
    return:
      type: e02a2de0
      description: <p>The timeout for running a re-connection protocol if the client has registered for service notifications. </p>
- uid: system.fabric._fabric_client_settings.getPartitionLocationCacheBucketCount()
  id: getPartitionLocationCacheBucketCount()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: getPartitionLocationCacheBucketCount()
  fullName: long system.fabric.FabricClientSettings.getPartitionLocationCacheBucketCount()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 142
  package: system.fabric
  summary: "<p>Gets the bucket count used by the clientâ€™s service resolution cache. <bold>Remarks:</bold>The default value is 1024.</p>"
  syntax:
    content: public long getPartitionLocationCacheBucketCount()
    return:
      type: 0364520f
      description: "<p>The bucket count used by the clientâ€™s service resolution cache. </p>"
- uid: system.fabric._fabric_client_settings.getPartitionLocationCacheLimit()
  id: getPartitionLocationCacheLimit()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: getPartitionLocationCacheLimit()
  fullName: long system.fabric.FabricClientSettings.getPartitionLocationCacheLimit()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 125
  package: system.fabric
  summary: <p>Gets the maximum number of cached location entries on the client. <bold>Remarks:</bold>The default value of this property is 1000. This property is not updatable. Setting this property will throw a <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> exception. When the cache limit is reached the oldest entries are discarded first. The default value is 100.</p>
  syntax:
    content: public long getPartitionLocationCacheLimit()
    return:
      type: 0364520f
      description: <p>The maximum number of cached location entries on the client. </p>
- uid: system.fabric._fabric_client_settings.getServiceChangePollInterval()
  id: getServiceChangePollInterval()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: getServiceChangePollInterval()
  fullName: Duration system.fabric.FabricClientSettings.getServiceChangePollInterval()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 157
  package: system.fabric
  summary: <p>Gets the timeout on service change notification requests from the client to the gateway for all registered callbacks. <bold>Remarks:</bold>The default value of this property is 120 seconds.</p>
  syntax: &o2
    content: public Duration getServiceChangePollInterval()
    return:
      type: e02a2de0
      description: <p>The timeout on service change notification requests from the client to the gateway for all registered callbacks. </p>
- uid: system.fabric._fabric_client_settings.setClientFriendlyName(String)
  id: setClientFriendlyName(String)
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: setClientFriendlyName(String clientFriendlyName)
  fullName: void system.fabric.FabricClientSettings.setClientFriendlyName(String clientFriendlyName)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 116
  package: system.fabric
  summary: <p>Sets the client friendly name that will appear in Service Fabric traces for debugging. <bold>Remarks:</bold> The default value is null and the client friendly name will automatically be generated as a UUID internally.</p>
  syntax:
    content: public void setClientFriendlyName(String clientFriendlyName)
    parameters:
    - id: clientFriendlyName
      type: "26831127"
      description: <p>The client friendly name that will appear in Service Fabric traces for debugging. </p>
- uid: system.fabric._fabric_client_settings.setConnectionInitializationTimeout(Duration)
  id: setConnectionInitializationTimeout(Duration)
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: setConnectionInitializationTimeout(Duration connectionInitializationTimeout)
  fullName: void system.fabric.FabricClientSettings.setConnectionInitializationTimeout(Duration connectionInitializationTimeout)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 182
  package: system.fabric
  summary: <p>Sets the timeout after which, if the current gateway address does not respond with a valid connection, another different address is randomly selected from the gateway addresses collection. <bold>Remarks:</bold>The default value of this property is 2 seconds. This property must be less than the value of the <xref href="system.fabric._fabric_client_settings.getServiceChangePollInterval()" data-throw-if-not-resolved="false"></xref> property.</p>
  syntax:
    content: public void setConnectionInitializationTimeout(Duration connectionInitializationTimeout)
    parameters:
    - id: connectionInitializationTimeout
      type: e02a2de0
      description: <p>The timeout after the current gateway address does not respond with a valid connection. </p>
- uid: system.fabric._fabric_client_settings.setHealthOperationTimeout(Duration)
  id: setHealthOperationTimeout(Duration)
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: setHealthOperationTimeout(Duration healthOperationTimeout)
  fullName: void system.fabric.FabricClientSettings.setHealthOperationTimeout(Duration healthOperationTimeout)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 217
  package: system.fabric
  summary: <p>Sets the timeout on health operation requests from the client to the gateway. <bold>Remarks:</bold>The default value of this property is 120 seconds.</p>
  syntax:
    content: public void setHealthOperationTimeout(Duration healthOperationTimeout)
    parameters:
    - id: healthOperationTimeout
      type: e02a2de0
      description: <p>The timeout on health operation requests from the client to the gateway. </p>
- uid: system.fabric._fabric_client_settings.setHealthReportRetrySendInterval(Duration)
  id: setHealthReportRetrySendInterval(Duration)
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: setHealthReportRetrySendInterval(Duration healthReportRetrySendInterval)
  fullName: void system.fabric.FabricClientSettings.setHealthReportRetrySendInterval(Duration healthReportRetrySendInterval)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 249
  package: system.fabric
  summary: <p>Sets the retry interval at which health reports that have not yet been acknowledged by the Health Manager are resent. <bold>Remarks:</bold>The default value of this property is 30 seconds.</p>
  syntax:
    content: public void setHealthReportRetrySendInterval(Duration healthReportRetrySendInterval)
    parameters:
    - id: healthReportRetrySendInterval
      type: e02a2de0
      description: <p>The retry interval at which health reports that have not yet been acknowledged by the Health Manager are resent. </p>
- uid: system.fabric._fabric_client_settings.setHealthReportSendInterval(Duration)
  id: setHealthReportSendInterval(Duration)
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: setHealthReportSendInterval(Duration healthReportSendInterval)
  fullName: void system.fabric.FabricClientSettings.setHealthReportSendInterval(Duration healthReportSendInterval)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 233
  package: system.fabric
  summary: <p>Sets the interval at which health reports are sent to Health Manager. <bold>Remarks:</bold>The default value of this property is 30 seconds.</p>
  syntax:
    content: public void setHealthReportSendInterval(Duration healthReportSendInterval)
    parameters:
    - id: healthReportSendInterval
      type: e02a2de0
      description: <p>The interval at which health reports are sent to Health Manager. </p>
- uid: system.fabric._fabric_client_settings.setKeepAliveInterval(Duration)
  id: setKeepAliveInterval(Duration)
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: setKeepAliveInterval(Duration keepAliveInterval)
  fullName: void system.fabric.FabricClientSettings.setKeepAliveInterval(Duration keepAliveInterval)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 203
  package: system.fabric
  summary: <p>Sets the interval at which the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> will ping the connected endpoint. <bold>Remarks:</bold>The default value of this property is 0 seconds. This property can't be updated after the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> is opened. Setting this property will throw a <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> exception. <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> will continue pinging as long as it has pending operations.</p>
  syntax:
    content: public void setKeepAliveInterval(Duration keepAliveInterval)
    parameters:
    - id: keepAliveInterval
      type: e02a2de0
      description: <p>The interval at which the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> will ping the connected endpoint. </p>
- uid: system.fabric._fabric_client_settings.setNotificationCacheUpdateTimeout(Duration)
  id: setNotificationCacheUpdateTimeout(Duration)
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: setNotificationCacheUpdateTimeout(Duration notificationCacheUpdateTimeout)
  fullName: void system.fabric.FabricClientSettings.setNotificationCacheUpdateTimeout(Duration notificationCacheUpdateTimeout)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 278
  package: system.fabric
  summary: <p>Sets the timeout for updating the local cache in response to service notifications. The default value is 30 seconds. </p>
  syntax:
    content: public void setNotificationCacheUpdateTimeout(Duration notificationCacheUpdateTimeout)
    parameters:
    - id: notificationCacheUpdateTimeout
      type: e02a2de0
      description: <p>The timeout for updating the local cache in response to service notifications. </p>
- uid: system.fabric._fabric_client_settings.setNotificationGatewayConnectionTimeout(Duration)
  id: setNotificationGatewayConnectionTimeout(Duration)
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: setNotificationGatewayConnectionTimeout(Duration notificationGatewayConnectionTimeout)
  fullName: void system.fabric.FabricClientSettings.setNotificationGatewayConnectionTimeout(Duration notificationGatewayConnectionTimeout)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 263
  package: system.fabric
  summary: <p>Sets the timeout for running a re-connection protocol if the client has registered for service notifications. The default value is 30 seconds. </p>
  syntax:
    content: public void setNotificationGatewayConnectionTimeout(Duration notificationGatewayConnectionTimeout)
    parameters:
    - id: notificationGatewayConnectionTimeout
      type: e02a2de0
      description: <p>The timeout for running a re-connection protocol if the client has registered for service notifications. </p>
- uid: system.fabric._fabric_client_settings.setPartitionLocationCacheBucketCount(long)
  id: setPartitionLocationCacheBucketCount(long)
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: setPartitionLocationCacheBucketCount(long partitionLocationCacheBucketCount)
  fullName: void system.fabric.FabricClientSettings.setPartitionLocationCacheBucketCount(long partitionLocationCacheBucketCount)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 150
  package: system.fabric
  summary: "<p>Sets the bucket count used by the clientâ€™s service resolution cache. <bold>Remarks:</bold>The default value is 1024.</p>"
  syntax:
    content: public void setPartitionLocationCacheBucketCount(long partitionLocationCacheBucketCount)
    parameters:
    - id: partitionLocationCacheBucketCount
      type: 0364520f
      description: "<p>The bucket count used by the clientâ€™s service resolution cache. </p>"
- uid: system.fabric._fabric_client_settings.setPartitionLocationCacheLimit(long)
  id: setPartitionLocationCacheLimit(long)
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: setPartitionLocationCacheLimit(long partitionLocationCacheLimit)
  fullName: void system.fabric.FabricClientSettings.setPartitionLocationCacheLimit(long partitionLocationCacheLimit)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 135
  package: system.fabric
  summary: <p>Sets the maximum number of cached location entries on the client. <bold>Remarks:</bold>The default value of this property is 1000. This property is not updatable. Setting this property will throw a <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> exception. When the cache limit is reached the oldest entries are discarded first. The default value is 100.</p>
  syntax:
    content: public void setPartitionLocationCacheLimit(long partitionLocationCacheLimit)
    parameters:
    - id: partitionLocationCacheLimit
      type: 0364520f
      description: <p>The maximum number of cached location entries on the client. </p>
- uid: system.fabric._fabric_client_settings.setServiceChangePollInterval(Duration)
  id: setServiceChangePollInterval(Duration)
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  langs:
  - java
  name: setServiceChangePollInterval(Duration serviceChangePollInterval)
  fullName: void system.fabric.FabricClientSettings.setServiceChangePollInterval(Duration serviceChangePollInterval)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
    startLine: 165
  package: system.fabric
  summary: <p>Sets the timeout on service change notification requests from the client to the gateway for all registered callbacks. <bold>Remarks:</bold>The default value of this property is 120 seconds.</p>
  syntax:
    content: public void setServiceChangePollInterval(Duration serviceChangePollInterval)
    parameters:
    - id: serviceChangePollInterval
      type: e02a2de0
      description: <p>The timeout on service change notification requests from the client to the gateway for all registered callbacks. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: system.fabric._fabric_client_settings.[static initializer]()
- uid: system.fabric._fabric_client_settings.FabricClientSettings(boolean)
- uid: system.fabric._fabric_client_settings.FabricClientSettings(long,Duration,Duration,Duration,Duration,Duration,String,long,Duration,Duration,Duration)
- uid: system.fabric._fabric_client_settings.FabricClientSettings(long,long,long,long,long,long,boolean,String,long,long,boolean,long,long)
- uid: system.fabric._fabric_client_settings.fromNative(long)
- uid: system.fabric._fabric_client_settings.toNative(PinCollection)
- uid: system.fabric._fabric_client_settings.validate()
- uid: system.fabric._fabric_client_settings
  parent: system.fabric
  href: system.fabric._fabric_client_settings.yml
  name: FabricClientSettings
  fullName: system.fabric.FabricClientSettings
  type: Class
  summary: <p>Represents the configuration settings for the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax: *o1
- uid: system.fabric._fabric_client_settings.getServiceChangePollInterval()
  parent: system.fabric._fabric_client_settings
  href: system.fabric._fabric_client_settings.yml
  name: getServiceChangePollInterval()
  fullName: Duration system.fabric.FabricClientSettings.getServiceChangePollInterval()
  type: Method
  summary: <p>Gets the timeout on service change notification requests from the client to the gateway for all registered callbacks. <bold>Remarks:</bold>The default value of this property is 120 seconds.</p>
  syntax: *o2
- uid: system.fabric._fabric_client
  parent: system.fabric
  href: system.fabric._fabric_client.yml
  name: FabricClient
  fullName: system.fabric.FabricClient
  type: Class
  summary: >-
    <p>Creates and manages Service Fabric services and other entities. </p>

    <p>

      <bold>Remarks:</bold>It is highly recommended that you share FabricClients as much as possible. This is because the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise. </p>
  syntax:
    content: public class FabricClient
- uid: system.fabric._pin_collection
  parent: system.fabric
  href: system.fabric._pin_collection.yml
  name: PinCollection
  fullName: system.fabric.PinCollection
  type: Class
  syntax:
    content: public class PinCollection
