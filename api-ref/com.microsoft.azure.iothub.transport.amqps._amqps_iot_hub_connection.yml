items:
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  id: _amqps_iot_hub_connection
  parent: com.microsoft.azure.iothub.transport.amqps
  children:
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.addListener(ServerListener)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.AmqpsIotHubConnection(DeviceClientConfig,Boolean)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.close()
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.config()
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onConnectionBound(Event)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onConnectionInit(Event)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onConnectionUnbound(Event)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onDelivery(Event)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onLinkFlow(Event)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onLinkInit(Event)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onLinkRemoteClose(Event)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onLinkRemoteOpen(Event)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onReactorFinal(Event)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onReactorInit(Event)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onTransportError(Event)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.open()
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.sendMessage(Message)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.sendMessageResult(AmqpsMessage,IotHubMessageResult)
  - com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.state()
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: AmqpsIotHubConnection
  fullName: com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection
  type: Class
  source:
    remote: &o0
      path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 65
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>An AMQPS IotHub connection between a device and an IoTHub. This class contains functionality for sending/receiving a message, and logic to re-establish the connection with the IoTHub in case it gets lost. </p>
  syntax: &o1
    content: public class AmqpsIotHubConnection
  inheritance:
  - java.lang.Object
  - BaseHandler
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.addListener(ServerListener)
  id: addListener(ServerListener)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: addListener(ServerListener listener)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.addListener(ServerListener listener)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 658
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>Subscribe a listener to the list of listeners. </p>
  syntax:
    content: public void addListener(ServerListener listener)
    parameters:
    - id: listener
      type: com.microsoft.azure.iothub.transport.amqps._server_listener
      description: <p>the listener to be subscribed. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.AmqpsIotHubConnection(DeviceClientConfig,Boolean)
  id: AmqpsIotHubConnection(DeviceClientConfig,Boolean)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: AmqpsIotHubConnection(DeviceClientConfig config, Boolean useWebSockets)
  fullName: com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(DeviceClientConfig config, Boolean useWebSockets)
  type: Constructor
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 118
  package: com.microsoft.azure.iothub.transport.amqps
  summary: >-
    <p>Constructor to set up connection parameters using the <xref href="com.microsoft.azure.iothub._device_client_config" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public AmqpsIotHubConnection(DeviceClientConfig config, Boolean useWebSockets)
    parameters:
    - id: config
      type: com.microsoft.azure.iothub._device_client_config
      description: <p>The <xref href="com.microsoft.azure.iothub._device_client_config" data-throw-if-not-resolved="false"></xref> corresponding to the device associated with this <xref href="com.microsoft.azure.iothub._device_client" data-throw-if-not-resolved="false"></xref>. </p>
    - id: useWebSockets
      type: 866c2227
      description: <p>Whether the connection should use web sockets or not. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.close()
  id: close()
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: close()
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.close()
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 242
  package: com.microsoft.azure.iothub.transport.amqps
  summary: >-
    <p>Closes the <xref href="com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection" data-throw-if-not-resolved="false"></xref>. </p>

    <p>If the current connection is not closed, this function will set the current state to closed and invalidate all connection related variables. </p>
  syntax:
    content: public void close()
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.config()
  id: config()
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: config
  fullName: DeviceClientConfig com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.config
  type: Field
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 99
  package: com.microsoft.azure.iothub.transport.amqps
  syntax:
    content: protected DeviceClientConfig config
    return:
      type: com.microsoft.azure.iothub._device_client_config
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onConnectionBound(Event)
  id: onConnectionBound(Event)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onConnectionBound(Event event)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.onConnectionBound(Event event)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 448
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>Event handler for the connection bound event. Sets Sasl authentication and proper authentication mode. </p>
  syntax:
    content: public void onConnectionBound(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onConnectionInit(Event)
  id: onConnectionInit(Event)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onConnectionInit(Event event)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.onConnectionInit(Event event)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 417
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>Event handler for the connection init event </p>
  syntax:
    content: public void onConnectionInit(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onConnectionUnbound(Event)
  id: onConnectionUnbound(Event)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onConnectionUnbound(Event event)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.onConnectionUnbound(Event event)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 475
  package: com.microsoft.azure.iothub.transport.amqps
  syntax:
    content: public void onConnectionUnbound(Event event)
    parameters:
    - id: event
      type: 70fceca4
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onDelivery(Event)
  id: onDelivery(Event)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onDelivery(Event event)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.onDelivery(Event event)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 519
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>Event handler for the delivery event. This method handles both sending and receiving a message. </p>
  syntax:
    content: public void onDelivery(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onLinkFlow(Event)
  id: onLinkFlow(Event)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkFlow(Event event)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.onLinkFlow(Event event)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 569
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>Event handler for the link flow event. Handles sending a single message. </p>
  syntax:
    content: public void onLinkFlow(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onLinkInit(Event)
  id: onLinkInit(Event)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkInit(Event event)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.onLinkInit(Event event)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 615
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>Event handler for the link init event. Sets the proper target address on the link. </p>
  syntax:
    content: public void onLinkInit(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onLinkRemoteClose(Event)
  id: onLinkRemoteClose(Event)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkRemoteClose(Event event)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.onLinkRemoteClose(Event event)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 598
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>Event handler for the link remote close event. This triggers reconnection attempts until successful. Both sender and receiver links closing trigger this event, so we only handle one of them, since the other is redundant. </p>
  syntax:
    content: public void onLinkRemoteClose(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onLinkRemoteOpen(Event)
  id: onLinkRemoteOpen(Event)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onLinkRemoteOpen(Event event)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.onLinkRemoteOpen(Event event)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 581
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>Event handler for the link remote open event. This signifies that the <ref refid="" kindref="compound">org.apache.qpid.proton.reactor.Reactor</ref> is ready, so we set the connection to OPEN. </p>
  syntax:
    content: public void onLinkRemoteOpen(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onReactorFinal(Event)
  id: onReactorFinal(Event)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onReactorFinal(Event event)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.onReactorFinal(Event event)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 492
  package: com.microsoft.azure.iothub.transport.amqps
  syntax:
    content: public void onReactorFinal(Event event)
    parameters:
    - id: event
      type: 70fceca4
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onReactorInit(Event)
  id: onReactorInit(Event)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onReactorInit(Event event)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.onReactorInit(Event event)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 485
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>Event handler for reactor init event. </p>
  syntax:
    content: public void onReactorInit(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>Proton Event object </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.onTransportError(Event)
  id: onTransportError(Event)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: onTransportError(Event event)
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.onTransportError(Event event)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 646
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>Event handler for the transport error event. This triggers reconnection attempts until successful. </p>
  syntax:
    content: public void onTransportError(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The Proton Event object. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.open()
  id: open()
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: open()
  fullName: void com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.open()
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 197
  package: com.microsoft.azure.iothub.transport.amqps
  summary: >-
    <p>Opens the <xref href="com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection" data-throw-if-not-resolved="false"></xref>. </p>

    <p>If the current connection is not open, this method will create a new <ref refid="" kindref="compound">IotHubSasToken</ref>. This method will start the <ref refid="" kindref="compound">Reactor</ref>, set the connection to open and make it ready for sending. </p>

    <p></p>
  syntax:
    content: public void open()
  exceptions:
  - type: cbf33bbe
    description: <p>If the reactor could not be initialized. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.sendMessage(Message)
  id: sendMessage(Message)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: sendMessage(Message message)
  fullName: Integer com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.sendMessage(Message message)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 321
  package: com.microsoft.azure.iothub.transport.amqps
  summary: <p>Creates a binary message using the given content and messageId. Sends the created message using the sender link. </p>
  syntax:
    content: public Integer sendMessage(Message message)
    parameters:
    - id: message
      type: com.microsoft.azure.iothub._message
      description: <p>The message to be sent. </p>
    return:
      type: 08effaa0
      description: <p>An <ref refid="" kindref="compound">Integer</ref> representing the hash of the message, or -1 if the connection is closed. </p>
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.sendMessageResult(AmqpsMessage,IotHubMessageResult)
  id: sendMessageResult(AmqpsMessage,IotHubMessageResult)
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: sendMessageResult(AmqpsMessage message, IotHubMessageResult result)
  fullName: Boolean com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.sendMessageResult(AmqpsMessage message, IotHubMessageResult result)
  type: Method
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 375
  package: com.microsoft.azure.iothub.transport.amqps
  summary: >-
    <p>Sends the message result for the previously received message.</p>

    <p></p>
  syntax:
    content: public Boolean sendMessageResult(AmqpsMessage message, IotHubMessageResult result)
    parameters:
    - id: message
      type: com.microsoft.azure.iothub.transport.amqps._amqps_message
      description: <p>the message to be acknowledged. </p>
    - id: result
      type: com.microsoft.azure.iothub._iot_hub_message_result
      description: <p>the message result (one of <ref refid="" kindref="compound">IotHubMessageResult#COMPLETE</ref>, <ref refid="" kindref="compound">IotHubMessageResult#ABANDON</ref>, or <ref refid="" kindref="compound">IotHubMessageResult#REJECT</ref>). </p>
    return:
      type: 866c2227
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.state()
  id: state()
  parent: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  langs:
  - java
  name: state
  fullName: State com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection.state
  type: Field
  source:
    remote: *o0
    path: java/device/iothub-java-client/src/main/java/com/microsoft/azure/iothub/transport/amqps/AmqpsIotHubConnection.java
    startLine: 69
  package: com.microsoft.azure.iothub.transport.amqps
  syntax:
    content: protected State state
    return:
      type: com.microsoft.azure.iothub.transport._state
references:
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: 70fceca4
  spec.java:
  - name: Event
    fullName: Event
- uid: com.microsoft.azure.iothub.transport.amqps._server_listener
  parent: com.microsoft.azure.iothub.transport.amqps
  href: com.microsoft.azure.iothub.transport.amqps._server_listener.yml
  name: ServerListener
  fullName: com.microsoft.azure.iothub.transport.amqps.ServerListener
  type: Interface
  summary: <p>Defines methods which are triggered by interactions with the IoTHub. </p>
  syntax:
    content: public interface ServerListener
- uid: com.microsoft.azure.iothub._object_lock
  parent: com.microsoft.azure.iothub
  href: com.microsoft.azure.iothub._object_lock.yml
  name: ObjectLock
  fullName: com.microsoft.azure.iothub.ObjectLock
  type: Class
  summary: <p>This class enables mocking of the base class wait and notify functions </p>
  syntax:
    content: public class ObjectLock
- uid: com.microsoft.azure.iothub.transport._state
  parent: com.microsoft.azure.iothub.transport
  href: com.microsoft.azure.iothub.transport._state.yml
  name: State
  fullName: com.microsoft.azure.iothub.transport.State
  type: Enum
  syntax:
    content: public enum State
- uid: com.microsoft.azure.iothub._device_client_config
  parent: com.microsoft.azure.iothub
  href: com.microsoft.azure.iothub._device_client_config.yml
  name: DeviceClientConfig
  fullName: com.microsoft.azure.iothub.DeviceClientConfig
  type: Class
  summary: <p>Configuration settings for an IoT Hub client. Validates all user-defined settings. </p>
  syntax:
    content: public class DeviceClientConfig
- uid: com.microsoft.azure.iothub._device_client
  parent: com.microsoft.azure.iothub
  href: com.microsoft.azure.iothub._device_client.yml
  name: DeviceClient
  fullName: com.microsoft.azure.iothub.DeviceClient
  type: Class
  summary: >-
    <p>The public-facing API. Allows a single logical or physical device to connect to an IoT Hub. The IoT Hub client supports sending events to and receiving messages from an IoT Hub. </p>

    <p>To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages. </p>

    <p>The client buffers messages while the network is down, and re-sends them when the network comes back online. It also batches messages to improve communication efficiency (HTTPS only). </p>

    <p>The client supports HTTPS 1.1 and AMQPS 1.0 transports. </p>
  syntax:
    content: public class DeviceClient
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection
  parent: com.microsoft.azure.iothub.transport.amqps
  href: com.microsoft.azure.iothub.transport.amqps._amqps_iot_hub_connection.yml
  name: AmqpsIotHubConnection
  fullName: com.microsoft.azure.iothub.transport.amqps.AmqpsIotHubConnection
  type: Class
  summary: <p>An AMQPS IotHub connection between a device and an IoTHub. This class contains functionality for sending/receiving a message, and logic to re-establish the connection with the IoTHub in case it gets lost. </p>
  syntax: *o1
- uid: com.microsoft.azure.iothub._message
  parent: com.microsoft.azure.iothub
  href: com.microsoft.azure.iothub._message.yml
  name: Message
  fullName: com.microsoft.azure.iothub.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.iothub.transport.amqps._amqps_message
  parent: com.microsoft.azure.iothub.transport.amqps
  href: com.microsoft.azure.iothub.transport.amqps._amqps_message.yml
  name: AmqpsMessage
  fullName: com.microsoft.azure.iothub.transport.amqps.AmqpsMessage
  type: Class
  summary: <p>Extension of the QPID-Proton-J MessageImpl class which implements the <xref href="com.microsoft.azure.iothub._message" data-throw-if-not-resolved="false"></xref> interface. Adds a Delivery object as a private member variable and adds a new <xref href="com.microsoft.azure.iothub.transport.amqps._amqps_message._a_c_k___t_y_p_e" data-throw-if-not-resolved="false"></xref> enum. Adds the ability to easily acknowledge a single message. </p>
  syntax:
    content: public class AmqpsMessage
- uid: com.microsoft.azure.iothub._iot_hub_message_result
  parent: com.microsoft.azure.iothub
  href: com.microsoft.azure.iothub._iot_hub_message_result.yml
  name: IotHubMessageResult
  fullName: com.microsoft.azure.iothub.IotHubMessageResult
  type: Enum
  summary: <p>A return value from a message callback that instructs an IoT Hub to complete, abandon, or reject the message. </p>
  syntax:
    content: public enum IotHubMessageResult
