items:
- uid: client._application_management_instance
  id: _application_management_instance
  parent: client
  children:
  - client._application_management_instance.abort()
  - client._application_management_instance.ApplicationManagementInstance()
  - client._application_management_instance.closeAsync()
  - client._application_management_instance.initialize(StatelessServiceInitializationParameters)
  - client._application_management_instance.openAsync(StatelessServicePartition)
  href: client._application_management_instance.yml
  langs:
  - java
  name: ApplicationManagementInstance
  fullName: client.ApplicationManagementInstance
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/sample/ManagedAPIs/ApplicationManagement1/ApplicationManagement/src/client/ApplicationManagementInstance.java
      branch: release_linux_5.3
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/sample/ManagedAPIs/ApplicationManagement1/ApplicationManagement/src/client/ApplicationManagementInstance.java
    startLine: 43
  package: client
  syntax:
    content: public class ApplicationManagementInstance implements StatelessServiceInstance
  inheritance:
  - java.lang.Object
  - system.fabric._stateless_service_instance
  inheritedMembers:
  - client._application_management_instance.initializationParameters()
  - client._application_management_instance.instance()
  - client._application_management_instance.parent()
- uid: client._application_management_instance.abort()
  id: abort()
  parent: client._application_management_instance
  href: client._application_management_instance.yml
  langs:
  - java
  name: abort()
  fullName: void client.ApplicationManagementInstance.abort()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/sample/ManagedAPIs/ApplicationManagement1/ApplicationManagement/src/client/ApplicationManagementInstance.java
    startLine: 348
  package: client
  summary: >-
    <p>Terminates this instance ungracefully with this synchronous method call. </p>

    <p>

      <bold>Remarks:</bold>Examples of ungraceful termination are lease loss and, in response to the service, the use of <xref href="system.fabric._service_partition.reportFault(FaultType)" data-throw-if-not-resolved="false"></xref> to report a <ref refid="" kindref="compound">system.fabric.FaultType#Permanent</ref> fault. When the service instance receives this method, it should immediately release and clean up all references and return. </p>
  syntax:
    content: public void abort()
  overridden: system.fabric._stateless_service_instance.abort()
- uid: client._application_management_instance.ApplicationManagementInstance()
  id: ApplicationManagementInstance()
  parent: client._application_management_instance
  href: client._application_management_instance.yml
  langs:
  - java
  name: ApplicationManagementInstance()
  fullName: client.ApplicationManagementInstance.ApplicationManagementInstance()
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/sample/ManagedAPIs/ApplicationManagement1/ApplicationManagement/src/client/ApplicationManagementInstance.java
    startLine: 50
  package: client
  syntax:
    content: public ApplicationManagementInstance()
- uid: client._application_management_instance.closeAsync()
  id: closeAsync()
  parent: client._application_management_instance
  href: client._application_management_instance.yml
  langs:
  - java
  name: closeAsync()
  fullName: CompletableFuture client.ApplicationManagementInstance.closeAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/sample/ManagedAPIs/ApplicationManagement1/ApplicationManagement/src/client/ApplicationManagementInstance.java
    startLine: 330
  package: client
  summary: >-
    <p>Closes this service instance gracefully when the service instance is being shut down.</p>

    <p></p>
  syntax:
    content: public CompletableFuture closeAsync()
    return:
      type: 5f2aaa64
      description: <p>Returns <ref refid="" kindref="compound">CompletableFuture</ref>. </p>
  overridden: system.fabric._stateless_service_instance.closeAsync()
- uid: client._application_management_instance.initialize(StatelessServiceInitializationParameters)
  id: initialize(StatelessServiceInitializationParameters)
  parent: client._application_management_instance
  href: client._application_management_instance.yml
  langs:
  - java
  name: initialize(StatelessServiceInitializationParameters initializationParameters)
  fullName: void client.ApplicationManagementInstance.initialize(StatelessServiceInitializationParameters initializationParameters)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/sample/ManagedAPIs/ApplicationManagement1/ApplicationManagement/src/client/ApplicationManagementInstance.java
    startLine: 53
  package: client
  summary: >-
    <p>Initializes a newly created service instance.</p>

    <p></p>
  syntax:
    content: public void initialize(StatelessServiceInitializationParameters initializationParameters)
    parameters:
    - id: initializationParameters
      type: system.fabric._stateless_service_initialization_parameters
      description: <p>The <xref href="system.fabric._stateless_service_initialization_parameters" data-throw-if-not-resolved="false"></xref> for this service. </p>
  overridden: system.fabric._stateless_service_instance.initialize(StatelessServiceInitializationParameters)
- uid: client._application_management_instance.openAsync(StatelessServicePartition)
  id: openAsync(StatelessServicePartition)
  parent: client._application_management_instance
  href: client._application_management_instance.yml
  langs:
  - java
  name: openAsync(StatelessServicePartition partition)
  fullName: CompletableFuture<String> client.ApplicationManagementInstance.openAsync(StatelessServicePartition partition)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/sample/ManagedAPIs/ApplicationManagement1/ApplicationManagement/src/client/ApplicationManagementInstance.java
    startLine: 58
  package: client
  summary: >-
    <p>Opens an initialized service instance so that it can be contacted by clients.</p>

    <p>

      <bold>Remarks:</bold>Opening an instance stateless service indicates that the service is now resolvable and discoverable by service clients. The string that is returned is the address of this service instance. The address is associated with the service name via Service Fabric naming and returned to clients that resolve the service via <ref refid="" kindref="compound">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(java.net.URI)</ref></p>
  syntax:
    content: public CompletableFuture<String> openAsync(StatelessServicePartition partition)
    parameters:
    - id: partition
      type: system.fabric._stateless_service_partition
      description: <p>The <xref href="system.fabric._stateless_service_partition" data-throw-if-not-resolved="false"></xref> that this instance is associated with </p>
    return:
      type: 06be942d
      description: <p>Returns <ref refid="" kindref="compound">CompletableFuture</ref> of type <ref refid="" kindref="compound">java.lang.String</ref>. </p>
  overridden: system.fabric._stateless_service_instance.openAsync(StatelessServicePartition)
references:
- uid: 06be942d
  spec.java:
  - name: CompletableFuture<String>
    fullName: CompletableFuture<String>
- uid: 5f2aaa64
  spec.java:
  - name: CompletableFuture
    fullName: CompletableFuture
- uid: client._application_management_instance.initializationParameters()
- uid: client._application_management_instance.instance()
- uid: client._application_management_instance.parent()
- uid: system.fabric._stateless_service_instance
  parent: system.fabric
  href: system.fabric._stateless_service_instance.yml
  name: StatelessServiceInstance
  fullName: system.fabric.StatelessServiceInstance
  type: Interface
  summary: <p>Stateless services are those which have no state that requires management by Service Fabric. Stateless service types must implement this interface. </p>
  syntax:
    content: public interface StatelessServiceInstance
- uid: system.fabric._stateless_service_initialization_parameters
  parent: system.fabric
  href: system.fabric._stateless_service_initialization_parameters.yml
  name: StatelessServiceInitializationParameters
  fullName: system.fabric.StatelessServiceInitializationParameters
  type: Class
  summary: <p>Defines service initialization parameters for a stateless service. </p>
  syntax:
    content: public class StatelessServiceInitializationParameters
- uid: system.fabric._stateless_service_instance.initialize(StatelessServiceInitializationParameters)
  parent: system.fabric._stateless_service_instance
  href: system.fabric._stateless_service_instance.yml
  name: initialize(StatelessServiceInitializationParameters initializationParameters)
  fullName: void system.fabric.StatelessServiceInstance.initialize(StatelessServiceInitializationParameters initializationParameters)
  type: Method
  summary: >-
    <p>Initializes a newly created service instance.</p>

    <p></p>
  syntax:
    content: public void initialize(StatelessServiceInitializationParameters initializationParameters)
    parameters:
    - id: initializationParameters
      type: system.fabric._stateless_service_initialization_parameters
      description: <p>The <xref href="system.fabric._stateless_service_initialization_parameters" data-throw-if-not-resolved="false"></xref> for this service. </p>
- uid: system.fabric._stateless_service_instance.openAsync(StatelessServicePartition)
  parent: system.fabric._stateless_service_instance
  href: system.fabric._stateless_service_instance.yml
  name: openAsync(StatelessServicePartition partition)
  fullName: CompletableFuture<String> system.fabric.StatelessServiceInstance.openAsync(StatelessServicePartition partition)
  type: Method
  summary: >-
    <p>Opens an initialized service instance so that it can be contacted by clients.</p>

    <p>

      <bold>Remarks:</bold>Opening an instance stateless service indicates that the service is now resolvable and discoverable by service clients. The string that is returned is the address of this service instance. The address is associated with the service name via Service Fabric naming and returned to clients that resolve the service via <ref refid="" kindref="compound">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(java.net.URI)</ref></p>
  syntax:
    content: public CompletableFuture<String> openAsync(StatelessServicePartition partition)
    parameters:
    - id: partition
      type: system.fabric._stateless_service_partition
      description: <p>The <xref href="system.fabric._stateless_service_partition" data-throw-if-not-resolved="false"></xref> that this instance is associated with </p>
    return:
      type: 06be942d
      description: <p>Returns <ref refid="" kindref="compound">CompletableFuture</ref> of type <ref refid="" kindref="compound">java.lang.String</ref>. </p>
- uid: system.fabric._stateless_service_partition
  parent: system.fabric
  href: system.fabric._stateless_service_partition.yml
  name: StatelessServicePartition
  fullName: system.fabric.StatelessServicePartition
  type: Interface
  summary: >-
    <p>Represents a partition that is associated with a stateless service instance. </p>

    <p>

      <bold>Remarks:</bold>Provided to a stateless service as a parameter to the <xref href="system.fabric._service_partition" data-throw-if-not-resolved="false"></xref>.</p>
  syntax:
    content: public interface StatelessServicePartition
- uid: system.fabric._stateless_service_instance.closeAsync()
  parent: system.fabric._stateless_service_instance
  href: system.fabric._stateless_service_instance.yml
  name: closeAsync()
  fullName: CompletableFuture<?> system.fabric.StatelessServiceInstance.closeAsync()
  type: Method
  summary: >-
    <p>Closes this service instance gracefully when the service instance is being shut down.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> closeAsync()
    return:
      type: 16409f84
      description: <p>Returns <ref refid="" kindref="compound">CompletableFuture</ref>. </p>
- uid: system.fabric._stateless_service_instance.abort()
  parent: system.fabric._stateless_service_instance
  href: system.fabric._stateless_service_instance.yml
  name: abort()
  fullName: void system.fabric.StatelessServiceInstance.abort()
  type: Method
  summary: >-
    <p>Terminates this instance ungracefully with this synchronous method call. </p>

    <p>

      <bold>Remarks:</bold>Examples of ungraceful termination are lease loss and, in response to the service, the use of <xref href="system.fabric._service_partition.reportFault(FaultType)" data-throw-if-not-resolved="false"></xref> to report a <ref refid="" kindref="compound">system.fabric.FaultType#Permanent</ref> fault. When the service instance receives this method, it should immediately release and clean up all references and return. </p>
  syntax:
    content: public void abort()
- uid: system.fabric._service_partition.reportFault(FaultType)
  parent: system.fabric._service_partition
  href: system.fabric._service_partition.yml
  name: reportFault(FaultType faultType)
  fullName: void system.fabric.ServicePartition.reportFault(FaultType faultType)
  type: Method
  summary: >-
    <p>Reports the load for a set of load balancing metrics. The load can be reported at any time via the <ref refid="" kindref="compound">java.util.Collection</ref> of <xref href="system.fabric._load_metric" data-throw-if-not-resolved="false"></xref> method and provides one or more properties of the <xref href="system.fabric._load_metric" data-throw-if-not-resolved="false"></xref> method.</p>

    <p>

      <bold>Remarks:</bold>A fault is typically reported when the service code encounters some issue from which it cannot recover. </p>
  syntax:
    content: public void reportFault(FaultType faultType)
    parameters:
    - id: faultType
      type: system.fabric._fault_type
      description: <p>The <xref href="system.fabric._load_metric" data-throw-if-not-resolved="false"></xref> that the service has encountered. </p>
