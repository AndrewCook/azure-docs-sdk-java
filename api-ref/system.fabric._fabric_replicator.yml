items:
- uid: system.fabric._fabric_replicator
  id: _fabric_replicator
  parent: system.fabric
  children:
  - system.fabric._fabric_replicator.abort()
  - system.fabric._fabric_replicator.buildReplicaAsync(ReplicaInformation)
  - system.fabric._fabric_replicator.changeRoleAsync(Epoch,ReplicaRole)
  - system.fabric._fabric_replicator.closeAsync()
  - system.fabric._fabric_replicator.getCatchUpCapability()
  - system.fabric._fabric_replicator.getCurrentProgress()
  - system.fabric._fabric_replicator.getStateReplicator()
  - system.fabric._fabric_replicator.getStateReplicator2()
  - system.fabric._fabric_replicator.onDataLossAsync()
  - system.fabric._fabric_replicator.openAsync()
  - system.fabric._fabric_replicator.removeReplica(long)
  - system.fabric._fabric_replicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)
  - system.fabric._fabric_replicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
  - system.fabric._fabric_replicator.updateEpochAsync(Epoch)
  - system.fabric._fabric_replicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode)
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: FabricReplicator
  fullName: system.fabric.FabricReplicator
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      branch: release_linux_5.3
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 14
  package: system.fabric
  summary: >-
    <p>Replicates state for high availability and reliability. </p>

    <p>

      <bold>Remarks:</bold>Provides the default implementation of the <xref href="system.fabric._state_replicator" data-throw-if-not-resolved="false"></xref>, <xref href="system.fabric._replicator" data-throw-if-not-resolved="false"></xref>, and <xref href="system.fabric._primary_replicator" data-throw-if-not-resolved="false"></xref> interfaces, which user services can use, along with their implementation of the <xref href="system.fabric._state_provider" data-throw-if-not-resolved="false"></xref> interface. An instance of the <ref refid="" kindref="compound">system.fabric.FabricReplicator</ref> class is obtained via the <xref href="system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)" data-throw-if-not-resolved="false"></xref> method, which can be cast to <xref href="system.fabric._state_replicator" data-throw-if-not-resolved="false"></xref> for use.</p>
  syntax:
    content: public class FabricReplicator implements Replicator
  inheritance:
  - java.lang.Object
  - system.fabric._primary_replicator
  - system.fabric._replicator
  inheritedMembers:
  - system.fabric._fabric_replicator.FabricReplicator(long,long,long)
  - system.fabric._fabric_replicator.getNativeReplicator()
- uid: system.fabric._fabric_replicator.abort()
  id: abort()
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: abort()
  fullName: void system.fabric.FabricReplicator.abort()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 58
  package: system.fabric
  syntax:
    content: public void abort()
  overridden: system.fabric._replicator.abort()
- uid: system.fabric._fabric_replicator.buildReplicaAsync(ReplicaInformation)
  id: buildReplicaAsync(ReplicaInformation)
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: buildReplicaAsync(ReplicaInformation replicaInfo)
  fullName: CompletableFuture system.fabric.FabricReplicator.buildReplicaAsync(ReplicaInformation replicaInfo)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 100
  package: system.fabric
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>
  syntax:
    content: public CompletableFuture buildReplicaAsync(ReplicaInformation replicaInfo)
    parameters:
    - id: replicaInfo
      type: system.fabric._replica_information
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
    return:
      type: 5f2aaa64
      description: <p>A task that represents the asynchronous operation. </p>
  overridden: system.fabric._primary_replicator.buildReplicaAsync(ReplicaInformation)
- uid: system.fabric._fabric_replicator.changeRoleAsync(Epoch,ReplicaRole)
  id: changeRoleAsync(Epoch,ReplicaRole)
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: changeRoleAsync(Epoch epoch, ReplicaRole role)
  fullName: CompletableFuture system.fabric.FabricReplicator.changeRoleAsync(Epoch epoch, ReplicaRole role)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 48
  package: system.fabric
  syntax:
    content: public CompletableFuture changeRoleAsync(Epoch epoch, ReplicaRole role)
    parameters:
    - id: epoch
      type: system.fabric._epoch
    - id: role
      type: system.fabric._replica_role
    return:
      type: 5f2aaa64
  overridden: system.fabric._replicator.changeRoleAsync(Epoch,ReplicaRole)
- uid: system.fabric._fabric_replicator.closeAsync()
  id: closeAsync()
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: closeAsync()
  fullName: CompletableFuture system.fabric.FabricReplicator.closeAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 53
  package: system.fabric
  syntax:
    content: public CompletableFuture closeAsync()
    return:
      type: 5f2aaa64
  overridden: system.fabric._replicator.closeAsync()
- uid: system.fabric._fabric_replicator.getCatchUpCapability()
  id: getCatchUpCapability()
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: getCatchUpCapability()
  fullName: long system.fabric.FabricReplicator.getCatchUpCapability()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 68
  package: system.fabric
  syntax:
    content: public long getCatchUpCapability()
    return:
      type: 0364520f
  overridden: system.fabric._replicator.getCatchUpCapability()
- uid: system.fabric._fabric_replicator.getCurrentProgress()
  id: getCurrentProgress()
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: getCurrentProgress()
  fullName: long system.fabric.FabricReplicator.getCurrentProgress()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 63
  package: system.fabric
  syntax:
    content: public long getCurrentProgress()
    return:
      type: 0364520f
  overridden: system.fabric._replicator.getCurrentProgress()
- uid: system.fabric._fabric_replicator.getStateReplicator()
  id: getStateReplicator()
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: getStateReplicator()
  fullName: StateReplicator system.fabric.FabricReplicator.getStateReplicator()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 34
  package: system.fabric
  summary: <p>Represents the <xref href="system.fabric._state_replicator" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public StateReplicator getStateReplicator()
    return:
      type: system.fabric._state_replicator
      description: <p>the <xref href="system.fabric._state_replicator" data-throw-if-not-resolved="false"></xref>. </p>
- uid: system.fabric._fabric_replicator.getStateReplicator2()
  id: getStateReplicator2()
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: getStateReplicator2()
  fullName: StateReplicator2 system.fabric.FabricReplicator.getStateReplicator2()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 38
  package: system.fabric
  syntax:
    content: public StateReplicator2 getStateReplicator2()
    return:
      type: system.fabric._state_replicator2
- uid: system.fabric._fabric_replicator.onDataLossAsync()
  id: onDataLossAsync()
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: onDataLossAsync()
  fullName: CompletableFuture<Boolean> system.fabric.FabricReplicator.onDataLossAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 78
  package: system.fabric
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> onDataLossAsync()
    return:
      type: 7e53ac82
      description: <p>A CompletableFuture that represents the asynchronous operation. </p>
  overridden: system.fabric._primary_replicator.onDataLossAsync()
- uid: system.fabric._fabric_replicator.openAsync()
  id: openAsync()
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: openAsync()
  fullName: CompletableFuture<String> system.fabric.FabricReplicator.openAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 43
  package: system.fabric
  syntax:
    content: public CompletableFuture<String> openAsync()
    return:
      type: 06be942d
  overridden: system.fabric._replicator.openAsync()
- uid: system.fabric._fabric_replicator.removeReplica(long)
  id: removeReplica(long)
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: removeReplica(long replicaId)
  fullName: void system.fabric.FabricReplicator.removeReplica(long replicaId)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 105
  package: system.fabric
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>

    <p>

      <bold>Remarks:</bold> This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
  syntax:
    content: public void removeReplica(long replicaId)
    parameters:
    - id: replicaId
      type: 0364520f
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>
  overridden: system.fabric._primary_replicator.removeReplica(long)
- uid: system.fabric._fabric_replicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)
  id: updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
  fullName: void system.fabric.FabricReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 83
  package: system.fabric
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>
  syntax:
    content: public void updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
    parameters:
    - id: currentConfiguration
      type: system.fabric._replica_set_configuration
      description: <p>For Internal Use Only. </p>
    - id: previousConfiguration
      type: system.fabric._replica_set_configuration
      description: <p>For Internal Use Only. </p>
  overridden: system.fabric._primary_replicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)
- uid: system.fabric._fabric_replicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
  id: updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
  fullName: void system.fabric.FabricReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 95
  package: system.fabric
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>

    <p>

      <bold>Remarks:</bold> This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
  syntax:
    content: public void updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    parameters:
    - id: currentConfiguration
      type: system.fabric._replica_set_configuration
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>
  overridden: system.fabric._primary_replicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
- uid: system.fabric._fabric_replicator.updateEpochAsync(Epoch)
  id: updateEpochAsync(Epoch)
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: updateEpochAsync(Epoch epoch)
  fullName: CompletableFuture system.fabric.FabricReplicator.updateEpochAsync(Epoch epoch)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 73
  package: system.fabric
  syntax:
    content: public CompletableFuture updateEpochAsync(Epoch epoch)
    parameters:
    - id: epoch
      type: system.fabric._epoch
    return:
      type: 5f2aaa64
  overridden: system.fabric._replicator.updateEpochAsync(Epoch)
- uid: system.fabric._fabric_replicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode)
  id: waitForCatchUpQuorumAsync(ReplicaSetQuorumMode)
  parent: system.fabric._fabric_replicator
  href: system.fabric._fabric_replicator.yml
  langs:
  - java
  name: waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode)
  fullName: CompletableFuture system.fabric.FabricReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
    startLine: 90
  package: system.fabric
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>
  syntax:
    content: public CompletableFuture waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode)
    parameters:
    - id: quorumMode
      type: system.fabric._replica_set_quorum_mode
      description: <p>For Internal Use Only. </p>
    return:
      type: 5f2aaa64
      description: <p>For Internal Use Only. </p>
  overridden: system.fabric._primary_replicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode)
references:
- uid: 06be942d
  spec.java:
  - name: CompletableFuture<String>
    fullName: CompletableFuture<String>
- uid: 5f2aaa64
  spec.java:
  - name: CompletableFuture
    fullName: CompletableFuture
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: system.fabric._fabric_replicator.FabricReplicator(long,long,long)
- uid: system.fabric._fabric_replicator.getNativeReplicator()
- uid: system.fabric._replicator
  parent: system.fabric
  href: system.fabric._replicator.yml
  name: Replicator
  fullName: system.fabric.Replicator
  type: Interface
  syntax:
    content: public interface Replicator
- uid: system.fabric._state_replicator
  parent: system.fabric
  href: system.fabric._state_replicator.yml
  name: StateReplicator
  fullName: system.fabric.StateReplicator
  type: Interface
  syntax:
    content: public interface StateReplicator
- uid: system.fabric._state_replicator2
  parent: system.fabric
  href: system.fabric._state_replicator2.yml
  name: StateReplicator2
  fullName: system.fabric.StateReplicator2
  type: Interface
  summary: <p>Exposes replication-related functions of the <xref href="system.fabric._fabric_replicator" data-throw-if-not-resolved="false"></xref> class that are used by <xref href="system.fabric._state_provider" data-throw-if-not-resolved="false"></xref> to replicate state to ensure high availability. </p>
  syntax:
    content: public interface StateReplicator2
- uid: system.fabric._replicator.openAsync()
  parent: system.fabric._replicator
  href: system.fabric._replicator.yml
  name: openAsync()
  fullName: CompletableFuture<String> system.fabric.Replicator.openAsync()
  type: Method
  syntax:
    content: public CompletableFuture<String> openAsync()
    return:
      type: 06be942d
- uid: system.fabric.exception._fabric_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_exception.yml
  name: FabricException
  fullName: system.fabric.exception.FabricException
  type: Class
  syntax:
    content: public class FabricException
- uid: system.fabric._replicator.changeRoleAsync(Epoch,ReplicaRole)
  parent: system.fabric._replicator
  href: system.fabric._replicator.yml
  name: changeRoleAsync(Epoch epoch, ReplicaRole role)
  fullName: CompletableFuture system.fabric.Replicator.changeRoleAsync(Epoch epoch, ReplicaRole role)
  type: Method
  syntax:
    content: public CompletableFuture changeRoleAsync(Epoch epoch, ReplicaRole role)
    parameters:
    - id: epoch
      type: system.fabric._epoch
    - id: role
      type: system.fabric._replica_role
    return:
      type: 5f2aaa64
- uid: system.fabric._epoch
  parent: system.fabric
  href: system.fabric._epoch.yml
  name: Epoch
  fullName: system.fabric.Epoch
  type: Class
  summary: >-
    <p>Represents the current version of the partition in Service Fabric. </p>

    <p>

      <bold>Remarks:</bold>An <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> from the ones which were sent by the old Primary replica. The fact that the Primary has changed is not directly visible to Secondary replicas, which are usually unaffected by the failure that affected the original Primary replica. To track that the Primary replica has changed has to be communicated to the Secondary replica. This communication occurs via the <xref href="system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber)" data-throw-if-not-resolved="false"></xref> method. Most services can ignore the details of the inner fields of the <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> as it is usually sufficient to know that the <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> has changed and to compare Epochs to determine relative ordering of operations and events in the system. Comparison operations are provided for this purpose.</p>
  syntax:
    content: public class Epoch
- uid: system.fabric._replica_role
  parent: system.fabric
  href: system.fabric._replica_role.yml
  name: ReplicaRole
  fullName: system.fabric.ReplicaRole
  type: Enum
  syntax:
    content: public enum ReplicaRole
- uid: system.fabric._replicator.closeAsync()
  parent: system.fabric._replicator
  href: system.fabric._replicator.yml
  name: closeAsync()
  fullName: CompletableFuture system.fabric.Replicator.closeAsync()
  type: Method
  syntax:
    content: public CompletableFuture closeAsync()
    return:
      type: 5f2aaa64
- uid: system.fabric._replicator.abort()
  parent: system.fabric._replicator
  href: system.fabric._replicator.yml
  name: abort()
  fullName: void system.fabric.Replicator.abort()
  type: Method
  syntax:
    content: public void abort()
- uid: system.fabric._replicator.getCurrentProgress()
  parent: system.fabric._replicator
  href: system.fabric._replicator.yml
  name: getCurrentProgress()
  fullName: long system.fabric.Replicator.getCurrentProgress()
  type: Method
  syntax:
    content: public long getCurrentProgress()
    return:
      type: 0364520f
- uid: system.fabric._replicator.getCatchUpCapability()
  parent: system.fabric._replicator
  href: system.fabric._replicator.yml
  name: getCatchUpCapability()
  fullName: long system.fabric.Replicator.getCatchUpCapability()
  type: Method
  syntax:
    content: public long getCatchUpCapability()
    return:
      type: 0364520f
- uid: system.fabric._replicator.updateEpochAsync(Epoch)
  parent: system.fabric._replicator
  href: system.fabric._replicator.yml
  name: updateEpochAsync(Epoch epoch)
  fullName: CompletableFuture system.fabric.Replicator.updateEpochAsync(Epoch epoch)
  type: Method
  syntax:
    content: public CompletableFuture updateEpochAsync(Epoch epoch)
    parameters:
    - id: epoch
      type: system.fabric._epoch
    return:
      type: 5f2aaa64
- uid: system.fabric._primary_replicator.onDataLossAsync()
  parent: system.fabric._primary_replicator
  href: system.fabric._primary_replicator.yml
  name: onDataLossAsync()
  fullName: CompletableFuture<Boolean> system.fabric.PrimaryReplicator.onDataLossAsync()
  type: Method
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> onDataLossAsync()
    return:
      type: 7e53ac82
      description: <p>A CompletableFuture that represents the asynchronous operation. </p>
- uid: system.fabric._primary_replicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)
  parent: system.fabric._primary_replicator
  href: system.fabric._primary_replicator.yml
  name: updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
  fullName: void system.fabric.PrimaryReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
  type: Method
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>
  syntax:
    content: public void updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)
    parameters:
    - id: currentConfiguration
      type: system.fabric._replica_set_configuration
      description: <p>For Internal Use Only. </p>
    - id: previousConfiguration
      type: system.fabric._replica_set_configuration
      description: <p>For Internal Use Only. </p>
- uid: system.fabric._replica_set_configuration
  parent: system.fabric
  href: system.fabric._replica_set_configuration.yml
  name: ReplicaSetConfiguration
  fullName: system.fabric.ReplicaSetConfiguration
  type: Class
  summary: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
  syntax:
    content: public class ReplicaSetConfiguration
- uid: system.fabric._primary_replicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode)
  parent: system.fabric._primary_replicator
  href: system.fabric._primary_replicator.yml
  name: waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode)
  fullName: CompletableFuture system.fabric.PrimaryReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode)
  type: Method
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>
  syntax:
    content: public CompletableFuture waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode)
    parameters:
    - id: quorumMode
      type: system.fabric._replica_set_quorum_mode
      description: <p>For Internal Use Only. </p>
    return:
      type: 5f2aaa64
      description: <p>For Internal Use Only. </p>
- uid: system.fabric._replica_set_quorum_mode
  parent: system.fabric
  href: system.fabric._replica_set_quorum_mode.yml
  name: ReplicaSetQuorumMode
  fullName: system.fabric.ReplicaSetQuorumMode
  type: Enum
  syntax:
    content: public enum ReplicaSetQuorumMode
- uid: system.fabric._primary_replicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
  parent: system.fabric._primary_replicator
  href: system.fabric._primary_replicator.yml
  name: updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
  fullName: void system.fabric.PrimaryReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
  type: Method
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>

    <p>

      <bold>Remarks:</bold> This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
  syntax:
    content: public void updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    parameters:
    - id: currentConfiguration
      type: system.fabric._replica_set_configuration
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>
- uid: system.fabric._primary_replicator.buildReplicaAsync(ReplicaInformation)
  parent: system.fabric._primary_replicator
  href: system.fabric._primary_replicator.yml
  name: buildReplicaAsync(ReplicaInformation replicaInfo)
  fullName: CompletableFuture system.fabric.PrimaryReplicator.buildReplicaAsync(ReplicaInformation replicaInfo)
  type: Method
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>
  syntax:
    content: public CompletableFuture buildReplicaAsync(ReplicaInformation replicaInfo)
    parameters:
    - id: replicaInfo
      type: system.fabric._replica_information
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
    return:
      type: 5f2aaa64
      description: <p>A task that represents the asynchronous operation. </p>
- uid: system.fabric._replica_information
  parent: system.fabric
  href: system.fabric._replica_information.yml
  name: ReplicaInformation
  fullName: system.fabric.ReplicaInformation
  type: Class
  summary: >-
    <p>FOR INTERNAL USE ONLY. Represents information about a replica.</p>

    <p></p>
  syntax:
    content: public class ReplicaInformation
- uid: system.fabric._primary_replicator.removeReplica(long)
  parent: system.fabric._primary_replicator
  href: system.fabric._primary_replicator.yml
  name: removeReplica(long replicaId)
  fullName: void system.fabric.PrimaryReplicator.removeReplica(long replicaId)
  type: Method
  summary: >-
    <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>

    <p></p>

    <p>

      <bold>Remarks:</bold> This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
  syntax:
    content: public void removeReplica(long replicaId)
    parameters:
    - id: replicaId
      type: 0364520f
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</p>
- uid: system.fabric._primary_replicator
  parent: system.fabric
  href: system.fabric._primary_replicator.yml
  name: PrimaryReplicator
  fullName: system.fabric.PrimaryReplicator
  type: Interface
  summary: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
  syntax:
    content: public interface PrimaryReplicator
- uid: system.fabric._state_provider
  parent: system.fabric
  href: system.fabric._state_provider.yml
  name: StateProvider
  fullName: system.fabric.StateProvider
  type: Interface
  summary: <p>Defines the behavior that a service must implement to interact with the <xref href="system.fabric._fabric_replicator" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public interface StateProvider
- uid: system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)
  parent: system.fabric._stateful_service_partition
  href: system.fabric._stateful_service_partition.yml
  name: createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)
  fullName: FabricReplicator system.fabric.StatefulServicePartition.createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)
  type: Method
  summary: <p>Creates a <xref href="system.fabric._fabric_replicator" data-throw-if-not-resolved="false"></xref> with the specified settings and returns it to the replica. <bold>Remarks:</bold>This method should be used to create a <xref href="system.fabric._fabric_replicator" data-throw-if-not-resolved="false"></xref> to service as the <xref href="system.fabric._state_replicator" data-throw-if-not-resolved="false"></xref> for a stateful service that implements <xref href="system.fabric._state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public FabricReplicator createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)
    parameters:
    - id: stateProvider
      type: system.fabric._state_provider
      description: <p>The <xref href="system.fabric._state_provider" data-throw-if-not-resolved="false"></xref> with which the returned <xref href="system.fabric._fabric_replicator" data-throw-if-not-resolved="false"></xref> should be associated. This is often the same object that implements <xref href="system.fabric._stateful_service_replica" data-throw-if-not-resolved="false"></xref>, but certain services might be factored differently. </p>
    - id: replicatorSettings
      type: system.fabric._replicator_settings
      description: >-
        <p>

          <xref href="system.fabric._replicator_settings" data-throw-if-not-resolved="false"></xref> with which the returned <xref href="system.fabric._fabric_replicator" data-throw-if-not-resolved="false"></xref> should be configured. </p>
    return:
      type: system.fabric._fabric_replicator
      description: <p>Returns <xref href="system.fabric._fabric_replicator" data-throw-if-not-resolved="false"></xref>. </p>
