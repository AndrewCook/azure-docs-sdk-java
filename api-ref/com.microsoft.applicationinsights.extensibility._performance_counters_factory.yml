items:
- uid: com.microsoft.applicationinsights.extensibility._performance_counters_factory
  id: _performance_counters_factory
  parent: com.microsoft.applicationinsights.extensibility
  children:
  - com.microsoft.applicationinsights.extensibility._performance_counters_factory.getPerformanceCounters()
  href: com.microsoft.applicationinsights.extensibility._performance_counters_factory.yml
  langs:
  - java
  name: PerformanceCountersFactory
  fullName: com.microsoft.applicationinsights.extensibility.PerformanceCountersFactory
  type: Interface
  source:
    remote: &o0
      path: core/src/main/java/com/microsoft/applicationinsights/extensibility/PerformanceCountersFactory.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: core/src/main/java/com/microsoft/applicationinsights/extensibility/PerformanceCountersFactory.java
    startLine: 33
  package: com.microsoft.applicationinsights.extensibility
  summary: >-
    <p>Defines the interface that concrete factories should follow. The major method is the one that will be able create the needed Performance Counters.</p>

    <p>Created by gupele on 3/3/2015. </p>
  syntax:
    content: public interface PerformanceCountersFactory
- uid: com.microsoft.applicationinsights.extensibility._performance_counters_factory.getPerformanceCounters()
  id: getPerformanceCounters()
  parent: com.microsoft.applicationinsights.extensibility._performance_counters_factory
  href: com.microsoft.applicationinsights.extensibility._performance_counters_factory.yml
  langs:
  - java
  name: getPerformanceCounters()
  fullName: Collection<PerformanceCounter> com.microsoft.applicationinsights.extensibility.PerformanceCountersFactory.getPerformanceCounters()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/extensibility/PerformanceCountersFactory.java
    startLine: 41
  package: com.microsoft.applicationinsights.extensibility
  summary: >-
    <p>Creates the <xref href="com.microsoft.applicationinsights.internal.perfcounter._performance_counter" data-throw-if-not-resolved="false"></xref></p>

    <p>Note: The method should not throw</p>

    <p></p>
  syntax:
    content: public Collection<PerformanceCounter> getPerformanceCounters()
    return:
      type: 12ebb11acom.microsoft.applicationinsights.internal.perfcounter._performance_countera08ddfce
      description: <p>A collection of <xref href="com.microsoft.applicationinsights.internal.perfcounter._performance_counter" data-throw-if-not-resolved="false"></xref></p>
references:
- uid: 12ebb11acom.microsoft.applicationinsights.internal.perfcounter._performance_countera08ddfce
  spec.java:
  - name: Collection<
    fullName: Collection<
  - uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter
    name: PerformanceCounter
    fullName: com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounter
    href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter
  parent: com.microsoft.applicationinsights.internal.perfcounter
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter.yml
  name: PerformanceCounter
  fullName: com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounter
  type: Interface
  summary: >-
    <p>

      <xref href="com.microsoft.applicationinsights.internal.perfcounter._performance_counter" data-throw-if-not-resolved="false"></xref> interface.</p>

    <p>Every concrete class should have a unique id and it should be able to collect data send that data using a <xref href="com.microsoft.applicationinsights._telemetry_client" data-throw-if-not-resolved="false"></xref></p>

    <p>Created by gupele on 3/3/2015. </p>
  syntax:
    content: public interface PerformanceCounter
