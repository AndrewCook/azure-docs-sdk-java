items:
- uid: visualobjectactorservice._stateful_visual_object_actor
  id: _stateful_visual_object_actor
  parent: visualobjectactorservice
  children:
  - visualobjectactorservice._stateful_visual_object_actor.getStateAsJsonAsync()
  - visualobjectactorservice._stateful_visual_object_actor.onActivateAsync()
  - visualobjectactorservice._stateful_visual_object_actor.onDeactivateAsync()
  href: visualobjectactorservice._stateful_visual_object_actor.yml
  langs:
  - java
  name: StatefulVisualObjectActor
  fullName: visualobjectactorservice.StatefulVisualObjectActor
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/sample/actor/visualobject/VisualObjectActorService/src/visualobjectactorservice/StatefulVisualObjectActor.java
      branch: release_linux_5.3
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/sample/actor/visualobject/VisualObjectActorService/src/visualobjectactorservice/StatefulVisualObjectActor.java
    startLine: 21
  package: visualobjectactorservice
  syntax:
    content: public class StatefulVisualObjectActor extends ReliableActor implements VisualObjectActor,VisualObjectActor
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.actors._actor_base
  - microsoft.servicefabric.actors._reliable_actor
  inheritedMembers:
  - microsoft.servicefabric.actors._actor_base.ActorBase()
  - microsoft.servicefabric.actors._actor_base.actorService()
  - microsoft.servicefabric.actors._actor_base.applicationName()
  - microsoft.servicefabric.actors._actor_base.callContextKey()
  - microsoft.servicefabric.actors._actor_base.concurrencyLock()
  - microsoft.servicefabric.actors._actor_base.diagnosticsEventManager()
  - microsoft.servicefabric.actors._actor_base.gcHandler()
  - microsoft.servicefabric.actors._actor_base.getActorId()
  - microsoft.servicefabric.actors._actor_base.getDiagnosticsContext()
  - microsoft.servicefabric.actors._actor_base.getEvent(Class<?>)
  - microsoft.servicefabric.actors._actor_base.getManager()
  - microsoft.servicefabric.actors._actor_base.getReminder(String,ActorId)
  - microsoft.servicefabric.actors._actor_base.getServiceUri()
  - microsoft.servicefabric.actors._actor_base.id()
  - microsoft.servicefabric.actors._actor_base.initializeInternal(ActorManagerImpl,ActorId,long)
  - microsoft.servicefabric.actors._actor_base.isDirty()
  - microsoft.servicefabric.actors._actor_base.isDummy()
  - microsoft.servicefabric.actors._actor_base.isInitialized()
  - microsoft.servicefabric.actors._actor_base.markedForDeletion()
  - microsoft.servicefabric.actors._actor_base.onActivateInternalAsync()
  - microsoft.servicefabric.actors._reliable_actor.onDeactivateInternalAsync()
  - microsoft.servicefabric.actors._reliable_actor.onInitializeInternal(ActorManagerImpl,ActorId)
  - microsoft.servicefabric.actors._actor_base.onInvokeFailedInternal()
  - microsoft.servicefabric.actors._reliable_actor.onPostActiviateAsync()
  - microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)
  - microsoft.servicefabric.actors._actor_base.onPostActorMethodAsyncInternal(ActorMethodContext)
  - microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)
  - microsoft.servicefabric.actors._actor_base.onPreActorMethodAsyncInternal(ActorMethodContext)
  - microsoft.servicefabric.actors._reliable_actor.onResetStateAsyncInternal()
  - microsoft.servicefabric.actors._reliable_actor.onSaveStateAsyncInternal()
  - microsoft.servicefabric.actors._actor_base.registerReminderAsync(String,byte[],Duration,Duration)
  - microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,Object,Duration,Duration)
  - microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,String,Object,Duration,Duration)
  - microsoft.servicefabric.actors._reliable_actor.ReliableActor()
  - microsoft.servicefabric.actors._actor_base.resetStateAsyncInternal()
  - microsoft.servicefabric.actors._reliable_actor.saveStateAsync()
  - microsoft.servicefabric.actors._actor_base.saveStateAsyncInternal()
  - microsoft.servicefabric.actors._actor_base.setActorId(ActorId)
  - microsoft.servicefabric.actors._actor_base.setDiagnosticsEventManager(DiagnosticsEventManager)
  - microsoft.servicefabric.actors._actor_base.setDirty(boolean)
  - microsoft.servicefabric.actors._actor_base.setInitialized(boolean)
  - microsoft.servicefabric.actors._actor_base.setMarkedForDeletion(boolean)
  - microsoft.servicefabric.actors._reliable_actor.stateManager()
  - microsoft.servicefabric.actors._actor_base.traceId()
  - microsoft.servicefabric.actors._actor_base.traceType()
  - microsoft.servicefabric.actors._actor_base.unregisterReminderAsync(ActorReminder)
  - microsoft.servicefabric.actors._actor_base.unregisterTimer(ActorTimer)
- uid: visualobjectactorservice._stateful_visual_object_actor.getStateAsJsonAsync()
  id: getStateAsJsonAsync()
  parent: visualobjectactorservice._stateful_visual_object_actor
  href: visualobjectactorservice._stateful_visual_object_actor.yml
  langs:
  - java
  name: getStateAsJsonAsync()
  fullName: CompletableFuture<String> visualobjectactorservice.StatefulVisualObjectActor.getStateAsJsonAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/sample/actor/visualobject/VisualObjectActorService/src/visualobjectactorservice/StatefulVisualObjectActor.java
    startLine: 28
  package: visualobjectactorservice
  syntax:
    content: public CompletableFuture<String> getStateAsJsonAsync()
    return:
      type: 06be942d
  overridden: visualobjectcommon._visual_object_actor.getStateAsJsonAsync()
- uid: visualobjectactorservice._stateful_visual_object_actor.onActivateAsync()
  id: onActivateAsync()
  parent: visualobjectactorservice._stateful_visual_object_actor
  href: visualobjectactorservice._stateful_visual_object_actor.yml
  langs:
  - java
  name: onActivateAsync()
  fullName: CompletableFuture<Void> visualobjectactorservice.StatefulVisualObjectActor.onActivateAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/sample/actor/visualobject/VisualObjectActorService/src/visualobjectactorservice/StatefulVisualObjectActor.java
    startLine: 35
  package: visualobjectactorservice
  syntax:
    content: protected CompletableFuture<Void> onActivateAsync()
    return:
      type: db03ee24
- uid: visualobjectactorservice._stateful_visual_object_actor.onDeactivateAsync()
  id: onDeactivateAsync()
  parent: visualobjectactorservice._stateful_visual_object_actor
  href: visualobjectactorservice._stateful_visual_object_actor.yml
  langs:
  - java
  name: onDeactivateAsync()
  fullName: CompletableFuture<Void> visualobjectactorservice.StatefulVisualObjectActor.onDeactivateAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/sample/actor/visualobject/VisualObjectActorService/src/visualobjectactorservice/StatefulVisualObjectActor.java
    startLine: 48
  package: visualobjectactorservice
  syntax:
    content: protected CompletableFuture<Void> onDeactivateAsync()
    return:
      type: db03ee24
references:
- uid: 06be942d
  spec.java:
  - name: CompletableFuture<String>
    fullName: CompletableFuture<String>
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.actors._actor_base.ActorBase()
- uid: microsoft.servicefabric.actors._actor_base.actorService()
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: actorService()
  fullName: ActorServiceImpl microsoft.servicefabric.actors.ActorBase.actorService()
  type: Method
  summary: >-
    <p>Gets the stateful service replica that is hosting the actor.</p>

    <p></p>
  syntax:
    content: public ActorServiceImpl actorService()
    return:
      type: microsoft.servicefabric.actors._actor_service_impl
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor_service_impl" data-throw-if-not-resolved="false"></xref> that represents the stateful service replica hosting the actor. actor. </p>
- uid: microsoft.servicefabric.actors._actor_base.applicationName()
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: applicationName()
  fullName: String microsoft.servicefabric.actors.ActorBase.applicationName()
  type: Method
  summary: >-
    <p>Gets the name of the application that contains the actor service that is hosting this actor.</p>

    <p></p>
  syntax:
    content: public String applicationName()
    return:
      type: "26831127"
      description: <p>Name of application that contains the actor service that is hosting this actor. </p>
- uid: microsoft.servicefabric.actors._actor_base.callContextKey()
- uid: microsoft.servicefabric.actors._actor_base.concurrencyLock()
- uid: microsoft.servicefabric.actors._actor_base.diagnosticsEventManager()
- uid: microsoft.servicefabric.actors._actor_base.gcHandler()
- uid: microsoft.servicefabric.actors._actor_base.getActorId()
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: getActorId()
  fullName: ActorId microsoft.servicefabric.actors.ActorBase.getActorId()
  type: Method
  summary: >-
    <p>Gets the identity of this actor with the actor service.</p>

    <p></p>
  syntax:
    content: public ActorId getActorId()
    return:
      type: microsoft.servicefabric.actors._actor_id
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false"></xref> for the actor. </p>
- uid: microsoft.servicefabric.actors._actor_base.getDiagnosticsContext()
- uid: microsoft.servicefabric.actors._actor_base.getEvent(Class<?>)
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: getEvent(Class<?> eventClass)
  fullName: protected<TEvent> TEvent microsoft.servicefabric.actors.ActorBase.getEvent(Class<?> eventClass)
  type: Method
  summary: >-
    <p>Gets the event for the specified event interface.</p>

    <p></p>
  syntax:
    content: protected <TEvent> TEvent getEvent(Class<?> eventClass)
    parameters:
    - id: eventClass
      type: a19781f8
      description: <p>Event class. </p>
    return:
      type: a65a4b86
      description: <p>Returns Event that represents the specified interface. </p>
- uid: microsoft.servicefabric.actors._actor_base.getManager()
- uid: microsoft.servicefabric.actors._actor_base.getReminder(String,ActorId)
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: getReminder(String reminderName, ActorId actorId)
  fullName: ActorReminder microsoft.servicefabric.actors.ActorBase.getReminder(String reminderName, ActorId actorId)
  type: Method
  summary: >-
    <p>Gets the actor reminder with specified reminder name.</p>

    <p></p>
  syntax:
    content: protected ActorReminder getReminder(String reminderName, ActorId actorId)
    parameters:
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder to get. </p>
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> ID </p>
    return:
      type: microsoft.servicefabric.actors._actor_reminder
      description: <p>An <xref href="microsoft.servicefabric.actors._actor_reminder" data-throw-if-not-resolved="false"></xref> that represents an actor reminder. </p>
- uid: microsoft.servicefabric.actors._actor_base.getServiceUri()
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: getServiceUri()
  fullName: URI microsoft.servicefabric.actors.ActorBase.getServiceUri()
  type: Method
  summary: >-
    <p>Gets the Uri of the actor service that is hosting this actor.</p>

    <p></p>
  syntax:
    content: public URI getServiceUri()
    return:
      type: "62304784"
      description: >-
        <p>

          <ref refid="" kindref="compound">java.net.URI</ref> of the actor service that is hosting this actor. </p>
- uid: microsoft.servicefabric.actors._actor_base.id()
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: id()
  fullName: ActorId microsoft.servicefabric.actors.ActorBase.id()
  type: Method
  summary: >-
    <p>Gets the identity of this actor with the actor service.</p>

    <p></p>
  syntax:
    content: public ActorId id()
    return:
      type: microsoft.servicefabric.actors._actor_id
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false"></xref> for the actor. </p>
- uid: microsoft.servicefabric.actors._actor_base.initializeInternal(ActorManagerImpl,ActorId,long)
- uid: microsoft.servicefabric.actors._actor_base.isDirty()
- uid: microsoft.servicefabric.actors._actor_base.isDummy()
- uid: microsoft.servicefabric.actors._actor_base.isInitialized()
- uid: microsoft.servicefabric.actors._actor_base.markedForDeletion()
- uid: microsoft.servicefabric.actors._actor_base.onActivateInternalAsync()
- uid: microsoft.servicefabric.actors._reliable_actor.onDeactivateInternalAsync()
- uid: microsoft.servicefabric.actors._reliable_actor.onInitializeInternal(ActorManagerImpl,ActorId)
- uid: microsoft.servicefabric.actors._actor_base.onInvokeFailedInternal()
- uid: microsoft.servicefabric.actors._reliable_actor.onPostActiviateAsync()
- uid: microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: onPostActorMethodAsync(ActorMethodContext actorMethodContext)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
  type: Method
  summary: >-
    <p>This method is invoked by actor runtime an actor method has finished execution. Override this method for performing any actions after an actor method has finished execution.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<?> onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    parameters:
    - id: actorMethodContext
      type: microsoft.servicefabric.actors._actor_method_context
      description: <p>An <xref href="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false"></xref> describing the method that was invoked by actor runtime prior to this method. </p>
    return:
      type: 16409f84
      description: >-
        <p>A <ref refid="" kindref="compound">CompletableFuture</ref> representing post-actor-method operation. <verbatim>    &lt;b&gt;Remarks:&lt;/b&gt; This method is invoked by actor runtime prior to:

            &lt;ul&gt;

            &lt;li&gt;Invoking an actor interface method when a client request comes.&lt;/li&gt;

            &lt;li&gt;Invoking a method on {@link Remindable} interface when a reminder fires.&lt;/li&gt;

            &lt;li&gt;Invoking a timer callback when timer fires.&lt;/li&gt;

            &lt;/ul&gt;</verbatim></p>
- uid: microsoft.servicefabric.actors._actor_base.onPostActorMethodAsyncInternal(ActorMethodContext)
- uid: microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: onPreActorMethodAsync(ActorMethodContext actorMethodContext)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
  type: Method
  summary: >-
    <p>This method is invoked by actor runtime just before invoking an actor method. Override this method for performing any actions prior to an actor method is invoked.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<?> onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    parameters:
    - id: actorMethodContext
      type: microsoft.servicefabric.actors._actor_method_context
      description: <p>An <xref href="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false"></xref> describing the method that will be invoked by actor runtime after this method finishes. </p>
    return:
      type: 16409f84
      description: >-
        <p>A <ref refid="" kindref="compound">CompletableFuture</ref> representing pre-actor-method operation. <verbatim>    &lt;b&gt;Remarks:&lt;/b&gt;This method is invoked by actor runtime prior to:

            &lt;ul&gt;

            &lt;li&gt;Invoking an actor interface method when a client request comes.&lt;/li&gt;

            &lt;li&gt;Invoking a method on {@link Remindable} interface when a reminder fires.&lt;/li&gt;

            &lt;li&gt;Invoking a timer callback when timer fires.&lt;/li&gt;

            &lt;/ul&gt;</verbatim></p>
- uid: microsoft.servicefabric.actors._actor_base.onPreActorMethodAsyncInternal(ActorMethodContext)
- uid: microsoft.servicefabric.actors._reliable_actor.onResetStateAsyncInternal()
- uid: microsoft.servicefabric.actors._reliable_actor.onSaveStateAsyncInternal()
- uid: microsoft.servicefabric.actors._actor_base.registerReminderAsync(String,byte[],Duration,Duration)
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: registerReminderAsync(String reminderName, byte[] state, Duration dueTime, Duration period)
  fullName: CompletableFuture<ActorReminder> microsoft.servicefabric.actors.ActorBase.registerReminderAsync(String reminderName, byte[] state, Duration dueTime, Duration period)
  type: Method
  summary: >-
    <p>Registers the specified reminder with actor.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<ActorReminder> registerReminderAsync(String reminderName, byte[] state, Duration dueTime, Duration period)
    parameters:
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder to register </p>
    - id: state
      type: bc819c2f
      description: <p>State associated with reminder. </p>
    - id: dueTime
      type: e02a2de0
      description: <p>A <ref refid="" kindref="compound">java.time.Duration</ref> representing the amount of time to delay before firing the reminder. Specify negative one (-1) milliseconds to prevent reminder from firing. Specify zero (0) to fire the reminder immediately. </p>
    - id: period
      type: e02a2de0
      description: <p>The time interval between firing of reminders. Specify negative one (-1) milliseconds to disable periodic firing. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._actor_remindera08ddfce
      description: <p>A task that represents the asynchronous registration operation. The value of TResult parameter is an <xref href="microsoft.servicefabric.actors._actor_reminder" data-throw-if-not-resolved="false"></xref> that represents the actor reminder that was registered. </p>
- uid: microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,Object,Duration,Duration)
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, Object state, Duration dueTime, Duration period)
  fullName: ActorTimer microsoft.servicefabric.actors.ActorBase.registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, Object state, Duration dueTime, Duration period)
  type: Method
  summary: >-
    <p>Registers a Timer for the actor.</p>

    <p></p>
  syntax:
    content: protected ActorTimer registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, Object state, Duration dueTime, Duration period)
    parameters:
    - id: asyncCallback
      type: 05842176
      description: <p>Callback to invoke when timer fires. </p>
    - id: state
      type: "79317049"
      description: <p>State to pass into timer callback. </p>
    - id: dueTime
      type: e02a2de0
      description: <p>TimeSpan when actor timer is first due. </p>
    - id: period
      type: e02a2de0
      description: <p>TimeSpan for subsequent actor timer invocation. </p>
    return:
      type: microsoft.servicefabric.actors._actor_timer
      description: <p>Returns <xref href="microsoft.servicefabric.actors._actor_timer" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,String,Object,Duration,Duration)
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, String asyncCallbackFunctionName, Object state, Duration dueTime, Duration period)
  fullName: ActorTimer microsoft.servicefabric.actors.ActorBase.registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, String asyncCallbackFunctionName, Object state, Duration dueTime, Duration period)
  type: Method
  summary: >-
    <p>Registers a Timer for the actor.</p>

    <p></p>
  syntax:
    content: protected ActorTimer registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, String asyncCallbackFunctionName, Object state, Duration dueTime, Duration period)
    parameters:
    - id: asyncCallback
      type: 05842176
      description: <p>Callback to invoke when timer fires. </p>
    - id: asyncCallbackFunctionName
      type: "26831127"
      description: <p>name of AsyncCallBack function. It can be used in <xref href="microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false"></xref> and <xref href="microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false"></xref> to initiate any user task on pre- and post- calling of this function. The property <xref href="microsoft.servicefabric.actors._actor_method_context.getMethodName()" data-throw-if-not-resolved="false"></xref> will give the method name. </p>
    - id: state
      type: "79317049"
      description: <p>State to pass into timer callback. </p>
    - id: dueTime
      type: e02a2de0
      description: <p>TimeSpan when actor timer is first due. </p>
    - id: period
      type: e02a2de0
      description: <p>TimeSpan for subsequent actor timer invocation. </p>
    return:
      type: microsoft.servicefabric.actors._actor_timer
      description: <p>Returns <xref href="microsoft.servicefabric.actors._actor_timer" data-throw-if-not-resolved="false"></xref> object. </p>
- uid: microsoft.servicefabric.actors._reliable_actor.ReliableActor()
  parent: microsoft.servicefabric.actors._reliable_actor
  href: microsoft.servicefabric.actors._reliable_actor.yml
  name: ReliableActor()
  fullName: microsoft.servicefabric.actors.ReliableActor.ReliableActor()
  type: Constructor
  summary: <p>Initializes a new instance of <ref refid="" kindref="compound">ReliableActor</ref></p>
  syntax:
    content: protected ReliableActor()
- uid: microsoft.servicefabric.actors._actor_base.resetStateAsyncInternal()
- uid: microsoft.servicefabric.actors._reliable_actor.saveStateAsync()
  parent: microsoft.servicefabric.actors._reliable_actor
  href: microsoft.servicefabric.actors._reliable_actor.yml
  name: saveStateAsync()
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ReliableActor.saveStateAsync()
  type: Method
  summary: <p>Saves all the state changes (add/update/remove) that were made since last call to <xref href="microsoft.servicefabric.actors._reliable_actor.saveStateAsync()" data-throw-if-not-resolved="false"></xref>, to the actor state provider associated with the actor. </p>
  syntax:
    content: protected CompletableFuture<?> saveStateAsync()
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors._actor_base.saveStateAsyncInternal()
- uid: microsoft.servicefabric.actors._actor_base.setActorId(ActorId)
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: setActorId(ActorId actorid)
  fullName: void microsoft.servicefabric.actors.ActorBase.setActorId(ActorId actorid)
  type: Method
  summary: >-
    <p>Sets the identity of this actor with the actor service.</p>

    <p></p>
  syntax:
    content: public void setActorId(ActorId actorid)
    parameters:
    - id: actorid
      type: microsoft.servicefabric.actors._actor_id
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false"></xref> for the actor. </p>
- uid: microsoft.servicefabric.actors._actor_base.setDiagnosticsEventManager(DiagnosticsEventManager)
- uid: microsoft.servicefabric.actors._actor_base.setDirty(boolean)
- uid: microsoft.servicefabric.actors._actor_base.setInitialized(boolean)
- uid: microsoft.servicefabric.actors._actor_base.setMarkedForDeletion(boolean)
- uid: microsoft.servicefabric.actors._reliable_actor.stateManager()
  parent: microsoft.servicefabric.actors._reliable_actor
  href: microsoft.servicefabric.actors._reliable_actor.yml
  name: stateManager()
  fullName: ActorStateManager microsoft.servicefabric.actors.ReliableActor.stateManager()
  type: Method
  summary: <p>Gets the state manager for <ref refid="" kindref="compound">ReliableActor</ref> which can be used to get/add/update/remove named states. </p>
  syntax:
    content: public ActorStateManager stateManager()
    return:
      type: microsoft.servicefabric.actors._actor_state_manager
      description: <p>An <xref href="microsoft.servicefabric.actors._actor_state_manager" data-throw-if-not-resolved="false"></xref> which can be used to manage actor state. </p>
- uid: microsoft.servicefabric.actors._actor_base.traceId()
- uid: microsoft.servicefabric.actors._actor_base.traceType()
- uid: microsoft.servicefabric.actors._actor_base.unregisterReminderAsync(ActorReminder)
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: unregisterReminderAsync(ActorReminder reminder)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.unregisterReminderAsync(ActorReminder reminder)
  type: Method
  summary: >-
    <p>Unregisters the specified reminder with actor.</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<?> unregisterReminderAsync(ActorReminder reminder)
    parameters:
    - id: reminder
      type: microsoft.servicefabric.actors._actor_reminder
      description: <p>The actor reminder to unregister. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous unregister operation. </p>
- uid: microsoft.servicefabric.actors._actor_base.unregisterTimer(ActorTimer)
  parent: microsoft.servicefabric.actors._actor_base
  href: microsoft.servicefabric.actors._actor_base.yml
  name: unregisterTimer(ActorTimer timer)
  fullName: void microsoft.servicefabric.actors.ActorBase.unregisterTimer(ActorTimer timer)
  type: Method
  summary: >-
    <p>Unregisters a Timer previously set on this actor.</p>

    <p></p>
  syntax:
    content: protected void unregisterTimer(ActorTimer timer)
    parameters:
    - id: timer
      type: microsoft.servicefabric.actors._actor_timer
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor_timer" data-throw-if-not-resolved="false"></xref> representing timer that needs to be unregistered. </p>
- uid: microsoft.servicefabric.actors._reliable_actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._reliable_actor.yml
  name: ReliableActor
  fullName: microsoft.servicefabric.actors.ReliableActor
  type: Class
  summary: >-
    <p>Represents a actor that can have multiple reliable 'named' states associated with it. <xref href="microsoft.servicefabric.actors._actor_base" data-throw-if-not-resolved="false"></xref></p>

    <p>

      <bold>Remarks:</bold>The state is preserved across actor garbage collections and fail-overs. The storage and retrieval of the state is provided by the actor state provider <xref href="microsoft.servicefabric.actors._actor_state_provider" data-throw-if-not-resolved="false"></xref>.</p>
  syntax:
    content: public class ReliableActor extends ActorBase
- uid: visualobjectcommon._visual_object_actor
  parent: visualobjectcommon
  href: visualobjectcommon._visual_object_actor.yml
  name: VisualObjectActor
  fullName: visualobjectcommon.VisualObjectActor
  type: Interface
  syntax:
    content: public interface VisualObjectActor
- uid: microsoft.servicefabric.actors._actor_timer
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_timer.yml
  name: ActorTimer
  fullName: microsoft.servicefabric.actors.ActorTimer
  type: Interface
  summary: <p>Represents Timer set on an <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public interface ActorTimer
- uid: visualobjectcommon._visual_object_actor.getStateAsJsonAsync()
  parent: visualobjectcommon._visual_object_actor
  href: visualobjectcommon._visual_object_actor.yml
  name: getStateAsJsonAsync()
  fullName: CompletableFuture<String> visualobjectcommon.VisualObjectActor.getStateAsJsonAsync()
  type: Method
  syntax:
    content: public CompletableFuture<String> getStateAsJsonAsync()
    return:
      type: 06be942d
