items:
- uid: com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder
  id: _task_item_holder
  parent: com.microsoft.azure.management.resources.fluentcore.dag
  children:
  - com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder.TaskItemHolder(String,U)
  href: com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder.yml
  langs:
  - java
  name: TaskItemHolder<T,U>
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.TaskItemHolder<T,U>
  type: Class
  source:
    remote: &o0
      path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/TaskItemHolder.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/TaskItemHolder.java
    startLine: 10
  package: com.microsoft.azure.management.resources.fluentcore.dag
  summary: >-
    <p>Type that hold one <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item" data-throw-if-not-resolved="false"></xref> and associated information which includes:<orderedlist><listitem><p>references to other <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder" data-throw-if-not-resolved="false"></xref> holding <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item" data-throw-if-not-resolved="false"></xref> this <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item" data-throw-if-not-resolved="false"></xref> depends on</p></listitem><listitem><p>references to the other <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder" data-throw-if-not-resolved="false"></xref> holding <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item" data-throw-if-not-resolved="false"></xref> depends on this <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item" data-throw-if-not-resolved="false"></xref></p></listitem></orderedlist></p>

    <p></p>
  syntax: &o1
    content: public class TaskItemHolder<T,U extends TaskItem<T>> extends DAGNode<U, TaskItemHolder<T, U>>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the task result type </p>
    - type: 6043614c
      description: <p>the task item type </p>
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependency(String)
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependent(String)
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.DAGNode(final String,final T)
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.dependencyKeys()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.dependentKeys()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.hasAllResolved()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.hasDependencies()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.initialize()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.isPreparer()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.lock()
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.reportResolved(String)
  - com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.setPreparer(boolean)
- uid: com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder.TaskItemHolder(String,U)
  id: TaskItemHolder(String,U)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder
  href: com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder.yml
  langs:
  - java
  name: TaskItemHolder(String taskId, U taskItem)
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.TaskItemHolder<T, U extends TaskItem<T>.TaskItemHolder(String taskId, U taskItem)
  type: Constructor
  source:
    remote: *o0
    path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/TaskItemHolder.java
    startLine: 17
  package: com.microsoft.azure.management.resources.fluentcore.dag
  summary: >-
    <p>Creates <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public TaskItemHolder(String taskId, U taskItem)
    parameters:
    - id: taskId
      type: "26831127"
      description: <p>the unique id of the task </p>
    - id: taskItem
      type: 6043614c
      description: <p>the task </p>
references:
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: 6043614c
  spec.java:
  - name: U
    fullName: U
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependency(String)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  name: addDependency(String dependencyKey)
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<T, U extends DAGNode<T, U>.addDependency(String dependencyKey)
  type: Method
  summary: >-
    <p>Mark the node identified by the given key as this node's dependency.</p>

    <p></p>
  syntax:
    content: public void addDependency(String dependencyKey)
    parameters:
    - id: dependencyKey
      type: "26831127"
      description: <p>the id of the dependency node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.addDependent(String)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  name: addDependent(String key)
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<T, U extends DAGNode<T, U>.addDependent(String key)
  type: Method
  summary: >-
    <p>Mark the node identified by the given key as dependent of this node.</p>

    <p></p>
  syntax:
    content: public void addDependent(String key)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the id of the dependent node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.DAGNode(final String,final T)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  name: DAGNode(final String key, final T data)
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<T, U extends DAGNode<T, U>.DAGNode(final String key, final T data)
  type: Constructor
  summary: >-
    <p>Creates a DAG node.</p>

    <p></p>
  syntax:
    content: public DAGNode(final String key, final T data)
    parameters:
    - id: key
      type: 3d93591e
      description: <p>unique id of the node </p>
    - id: data
      type: 8cbc54f7
      description: <p>data to be stored in the node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.dependencyKeys()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  name: dependencyKeys()
  fullName: List<String> com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<T, U extends DAGNode<T, U>.dependencyKeys()
  type: Method
  syntax:
    content: public List<String> dependencyKeys()
    return:
      type: 7d60c20e
      description: <p>a list of keys of nodes in <xref href="com.microsoft.azure.management.resources.fluentcore.dag._d_a_graph" data-throw-if-not-resolved="false"></xref> that this node depends on </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.dependentKeys()
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.hasAllResolved()
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.hasDependencies()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  name: hasDependencies()
  fullName: boolean com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<T, U extends DAGNode<T, U>.hasDependencies()
  type: Method
  syntax:
    content: public boolean hasDependencies()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this node has any dependency </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.initialize()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  name: initialize()
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<T, U extends DAGNode<T, U>.initialize()
  type: Method
  summary: <p>Initialize the node so that traversal can be performed on the parent DAG. </p>
  syntax:
    content: public void initialize()
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.isPreparer()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  name: isPreparer()
  fullName: boolean com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<T, U extends DAGNode<T, U>.isPreparer()
  type: Method
  syntax:
    content: public boolean isPreparer()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this node is marked as preparer </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.lock()
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  name: lock()
  fullName: ReentrantLock com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<T, U extends DAGNode<T, U>.lock()
  type: Method
  syntax:
    content: public ReentrantLock lock()
    return:
      type: 8d30929a
      description: <p>the lock to be used while performing thread safe operation on this node. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.reportResolved(String)
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.setPreparer(boolean)
  parent: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  name: setPreparer(boolean isPreparer)
  fullName: void com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<T, U extends DAGNode<T, U>.setPreparer(boolean isPreparer)
  type: Method
  summary: >-
    <p>Mark or un-mark this node as preparer.</p>

    <p></p>
  syntax:
    content: public void setPreparer(boolean isPreparer)
    parameters:
    - id: isPreparer
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this node needs to be marked as preparer, <code>false</code> otherwise. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node
  parent: com.microsoft.azure.management.resources.fluentcore.dag
  href: com.microsoft.azure.management.resources.fluentcore.dag._d_a_g_node.yml
  name: DAGNode<T,U,U>
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.DAGNode<T,U,U>
  type: Class
  summary: >-
    <p>The type representing node in a <xref href="com.microsoft.azure.management.resources.fluentcore.dag._d_a_graph" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public class DAGNode<T,U extends DAGNode<T,U>> extends Node<T, U>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the data stored in the node </p>
    - type: 6043614c
      description: <p>the type of the node </p>
    - type: 6043614c
      description: <p>the type of the node </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._task_item
  parent: com.microsoft.azure.management.resources.fluentcore.dag
  href: com.microsoft.azure.management.resources.fluentcore.dag._task_item.yml
  name: TaskItem<T>
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.TaskItem<T>
  type: Interface
  summary: >-
    <p>Type representing a task in a task group <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_group" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public interface TaskItem<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the task result type </p>
- uid: com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder
  parent: com.microsoft.azure.management.resources.fluentcore.dag
  href: com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder.yml
  name: TaskItemHolder<T,U>
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.TaskItemHolder<T,U>
  type: Class
  summary: >-
    <p>Type that hold one <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item" data-throw-if-not-resolved="false"></xref> and associated information which includes:<orderedlist><listitem><p>references to other <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder" data-throw-if-not-resolved="false"></xref> holding <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item" data-throw-if-not-resolved="false"></xref> this <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item" data-throw-if-not-resolved="false"></xref> depends on</p></listitem><listitem><p>references to the other <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item_holder" data-throw-if-not-resolved="false"></xref> holding <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item" data-throw-if-not-resolved="false"></xref> depends on this <xref href="com.microsoft.azure.management.resources.fluentcore.dag._task_item" data-throw-if-not-resolved="false"></xref></p></listitem></orderedlist></p>

    <p></p>
  syntax: *o1
