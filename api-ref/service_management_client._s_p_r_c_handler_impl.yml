items:
- uid: service_management_client._s_p_r_c_handler_impl
  id: _s_p_r_c_handler_impl
  parent: service_management_client
  children:
  - service_management_client._s_p_r_c_handler_impl.onChange(FabricClient,long,ResolvedServicePartition)
  - service_management_client._s_p_r_c_handler_impl.SPRCHandlerImpl()
  href: service_management_client._s_p_r_c_handler_impl.yml
  langs:
  - java
  name: SPRCHandlerImpl
  fullName: serviceManagementClient.SPRCHandlerImpl
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/sample/ManagedAPIs/ServiceManagementClient/src/serviceManagementClient/SPRCHandlerImpl.java
      branch: release_linux_5.3
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/sample/ManagedAPIs/ServiceManagementClient/src/serviceManagementClient/SPRCHandlerImpl.java
    startLine: 9
  package: service_management_client
  syntax:
    content: public class SPRCHandlerImpl implements ServicePartitionResolutionChangeHandler
  inheritance:
  - java.lang.Object
  - system.fabric._service_partition_resolution_change_handler
- uid: service_management_client._s_p_r_c_handler_impl.onChange(FabricClient,long,ResolvedServicePartition)
  id: onChange(FabricClient,long,ResolvedServicePartition)
  parent: service_management_client._s_p_r_c_handler_impl
  href: service_management_client._s_p_r_c_handler_impl.yml
  langs:
  - java
  name: onChange(FabricClient fClient, long handlerId, ResolvedServicePartition partition)
  fullName: void serviceManagementClient.SPRCHandlerImpl.onChange(FabricClient fClient, long handlerId, ResolvedServicePartition partition)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/sample/ManagedAPIs/ServiceManagementClient/src/serviceManagementClient/SPRCHandlerImpl.java
    startLine: 16
  package: service_management_client
  summary: >-
    <p>Handler method to be overriden by implementing class to specify what operation(s) to perform when onChange gets called.</p>

    <p></p>
  syntax:
    content: public void onChange(FabricClient fClient, long handlerId, ResolvedServicePartition partition)
    parameters:
    - id: fClient
      type: system.fabric._fabric_client
      description: '<p>: FabricClient </p>'
    - id: handlerId
      type: 0364520f
      description: '<p>: Id for ServicePartitionResolutionChange Handler </p>'
    - id: partitionPtr
      type: system.fabric._resolved_service_partition
      description: '<p>: ResolvedServicePartition </p>'
  overridden: system.fabric._service_partition_resolution_change_handler.onChange(FabricClient,long,ResolvedServicePartition)
- uid: service_management_client._s_p_r_c_handler_impl.SPRCHandlerImpl()
  id: SPRCHandlerImpl()
  parent: service_management_client._s_p_r_c_handler_impl
  href: service_management_client._s_p_r_c_handler_impl.yml
  langs:
  - java
  name: SPRCHandlerImpl()
  fullName: serviceManagementClient.SPRCHandlerImpl.SPRCHandlerImpl()
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/sample/ManagedAPIs/ServiceManagementClient/src/serviceManagementClient/SPRCHandlerImpl.java
    startLine: 11
  package: service_management_client
  syntax:
    content: public SPRCHandlerImpl()
references:
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric._service_partition_resolution_change_handler
  parent: system.fabric
  href: system.fabric._service_partition_resolution_change_handler.yml
  name: ServicePartitionResolutionChangeHandler
  fullName: system.fabric.ServicePartitionResolutionChangeHandler
  type: Interface
  syntax:
    content: public interface ServicePartitionResolutionChangeHandler
- uid: system.fabric._service_partition_resolution_change_handler.onChange(FabricClient,long,ResolvedServicePartition)
  parent: system.fabric._service_partition_resolution_change_handler
  href: system.fabric._service_partition_resolution_change_handler.yml
  name: onChange(FabricClient fClient, long handlerId, ResolvedServicePartition partitionPtr)
  fullName: void system.fabric.ServicePartitionResolutionChangeHandler.onChange(FabricClient fClient, long handlerId, ResolvedServicePartition partitionPtr)
  type: Method
  summary: >-
    <p>Handler method to be overriden by implementing class to specify what operation(s) to perform when onChange gets called.</p>

    <p></p>
  syntax:
    content: public void onChange(FabricClient fClient, long handlerId, ResolvedServicePartition partitionPtr)
    parameters:
    - id: fClient
      type: system.fabric._fabric_client
      description: '<p>: <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref></p>'
    - id: handlerId
      type: 0364520f
      description: '<p>: Id for ServicePartitionResolutionChange Handler </p>'
    - id: partitionPtr
      type: system.fabric._resolved_service_partition
      description: '<p>: <xref href="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false"></xref></p>'
- uid: system.fabric._fabric_client
  parent: system.fabric
  href: system.fabric._fabric_client.yml
  name: FabricClient
  fullName: system.fabric.FabricClient
  type: Class
  summary: >-
    <p>Creates and manages Service Fabric services and other entities. </p>

    <p>

      <bold>Remarks:</bold>It is highly recommended that you share FabricClients as much as possible. This is because the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise. </p>
  syntax:
    content: public class FabricClient
- uid: system.fabric._resolved_service_partition
  parent: system.fabric
  href: system.fabric._resolved_service_partition.yml
  name: ResolvedServicePartition
  fullName: system.fabric.ResolvedServicePartition
  type: Class
  summary: >-
    <p>Represents a data structure that contains information on the partitioning and set of endpoints to which the specified Service partition listens.</p>

    <p></p>
  syntax:
    content: public class ResolvedServicePartition
