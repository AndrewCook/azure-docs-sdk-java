items:
- uid: system.fabric._rolling_upgrade_monitoring_policy
  id: _rolling_upgrade_monitoring_policy
  parent: system.fabric
  children:
  - system.fabric._rolling_upgrade_monitoring_policy.getFailureAction()
  - system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckRetryTimeout()
  - system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckStableDuration()
  - system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckWaitDuration()
  - system.fabric._rolling_upgrade_monitoring_policy.getUpgradeDomainTimeout()
  - system.fabric._rolling_upgrade_monitoring_policy.getUpgradeTimeout()
  - system.fabric._rolling_upgrade_monitoring_policy.RollingUpgradeMonitoringPolicy()
  - system.fabric._rolling_upgrade_monitoring_policy.setFailureAction(UpgradeFailureAction)
  - system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckRetryTimeout(Duration)
  - system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckStableDuration(Duration)
  - system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckWaitDuration(Duration)
  - system.fabric._rolling_upgrade_monitoring_policy.setUpgradeDomainTimeout(Duration)
  - system.fabric._rolling_upgrade_monitoring_policy.setUpgradeTimeout(Duration)
  - system.fabric._rolling_upgrade_monitoring_policy.toNative(PinCollection)
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: RollingUpgradeMonitoringPolicy
  fullName: system.fabric.RollingUpgradeMonitoringPolicy
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      branch: release_linux_5.3
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 4
  package: system.fabric
  summary: <p>Represents a class to encapsulate a rolling upgrade monitoring policy. </p>
  syntax: &o1
    content: public class RollingUpgradeMonitoringPolicy
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - system.fabric._rolling_upgrade_monitoring_policy.areEqual(RollingUpgradeMonitoringPolicy,RollingUpgradeMonitoringPolicy)
  - system.fabric._rolling_upgrade_monitoring_policy.fromNative(long)
  - system.fabric._rolling_upgrade_monitoring_policy.RollingUpgradeMonitoringPolicy(int,long,long,long,long,long)
  - system.fabric._rolling_upgrade_monitoring_policy.toNative()
  - system.fabric._rolling_upgrade_monitoring_policy.validate()
- uid: system.fabric._rolling_upgrade_monitoring_policy.getFailureAction()
  id: getFailureAction()
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: getFailureAction()
  fullName: UpgradeFailureAction system.fabric.RollingUpgradeMonitoringPolicy.getFailureAction()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 67
  package: system.fabric
  summary: <p>Gets the action to take if an upgrade process fails. The default is <xref href="system.fabric._upgrade_failure_action.Invalid()" data-throw-if-not-resolved="false"></xref>. <bold>Remarks:</bold>The FailureAction property must be changed from the default of <xref href="system.fabric._upgrade_failure_action.Invalid()" data-throw-if-not-resolved="false"></xref> or a <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> will be thrown before the upgrade begins.</p>
  syntax:
    content: public UpgradeFailureAction getFailureAction()
    return:
      type: system.fabric._upgrade_failure_action
      description: <p>The action to take if an upgrade process fails. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckRetryTimeout()
  id: getHealthCheckRetryTimeout()
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: getHealthCheckRetryTimeout()
  fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getHealthCheckRetryTimeout()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 114
  package: system.fabric
  summary: <p>Gets the length of time between attempts to perform a health check if the application or cluster is not healthy. </p>
  syntax:
    content: public Duration getHealthCheckRetryTimeout()
    return:
      type: e02a2de0
      description: <p>The length of time between attempts to perform a health checks if the application or cluster is not healthy. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckStableDuration()
  id: getHealthCheckStableDuration()
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: getHealthCheckStableDuration()
  fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getHealthCheckStableDuration()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 99
  package: system.fabric
  summary: <p>Gets the length of time that the application or cluster must remain healthy before the health check passes and the upgrade proceeds to the next Upgrade Domain. </p>
  syntax:
    content: public Duration getHealthCheckStableDuration()
    return:
      type: e02a2de0
      description: <p>The length of time that the application or cluster must remain healthy. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckWaitDuration()
  id: getHealthCheckWaitDuration()
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: getHealthCheckWaitDuration()
  fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getHealthCheckWaitDuration()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 83
  package: system.fabric
  summary: <p>Gets the length of time to wait after completing an upgrade domain before starting the health check process. </p>
  syntax:
    content: public Duration getHealthCheckWaitDuration()
    return:
      type: e02a2de0
      description: <p>The length of time to wait after completing an upgrade domain before starting the health checks process. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.getUpgradeDomainTimeout()
  id: getUpgradeDomainTimeout()
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: getUpgradeDomainTimeout()
  fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getUpgradeDomainTimeout()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 146
  package: system.fabric
  summary: <p>Gets the timeout for the upgrade domain. <bold>Remarks:</bold>The default is TimeSpan.FromSeconds(uint.MaxValue).</p>
  syntax:
    content: public Duration getUpgradeDomainTimeout()
    return:
      type: e02a2de0
      description: <p>The timeout for the upgrade domain. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.getUpgradeTimeout()
  id: getUpgradeTimeout()
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: getUpgradeTimeout()
  fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getUpgradeTimeout()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 130
  package: system.fabric
  summary: <p>Gets the upgrade timeout. <bold>Remarks:</bold>The default is TimeSpan.FromSeconds(uint.MaxValue).</p>
  syntax:
    content: public Duration getUpgradeTimeout()
    return:
      type: e02a2de0
      description: <p>The upgrade timeout. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.RollingUpgradeMonitoringPolicy()
  id: RollingUpgradeMonitoringPolicy()
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: RollingUpgradeMonitoringPolicy()
  fullName: system.fabric.RollingUpgradeMonitoringPolicy.RollingUpgradeMonitoringPolicy()
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 27
  package: system.fabric
  syntax:
    content: public RollingUpgradeMonitoringPolicy()
- uid: system.fabric._rolling_upgrade_monitoring_policy.setFailureAction(UpgradeFailureAction)
  id: setFailureAction(UpgradeFailureAction)
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: setFailureAction(UpgradeFailureAction failureAction)
  fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setFailureAction(UpgradeFailureAction failureAction)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 76
  package: system.fabric
  summary: <p>Sets the action to take if an upgrade process fails. The default is <xref href="system.fabric._upgrade_failure_action.Invalid()" data-throw-if-not-resolved="false"></xref>. <bold>Remarks:</bold>The FailureAction} property must be changed from the default of <xref href="system.fabric._upgrade_failure_action.Invalid()" data-throw-if-not-resolved="false"></xref> or a <ref refid="" kindref="compound">java.lang.IllegalArgumentException</ref> will be thrown before the upgrade begins.</p>
  syntax:
    content: public void setFailureAction(UpgradeFailureAction failureAction)
    parameters:
    - id: failureAction
      type: system.fabric._upgrade_failure_action
      description: <p>The action to take if an upgrade process fails. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckRetryTimeout(Duration)
  id: setHealthCheckRetryTimeout(Duration)
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: setHealthCheckRetryTimeout(Duration healthCheckRetryTimeout)
  fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setHealthCheckRetryTimeout(Duration healthCheckRetryTimeout)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 122
  package: system.fabric
  summary: <p>Sets the length of time between attempts to perform a health check if the application or cluster is not healthy. </p>
  syntax:
    content: public void setHealthCheckRetryTimeout(Duration healthCheckRetryTimeout)
    parameters:
    - id: healthCheckRetryTimeout
      type: e02a2de0
      description: <p>The length of time between attempts to perform a health checks if the application or cluster is not healthy. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckStableDuration(Duration)
  id: setHealthCheckStableDuration(Duration)
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: setHealthCheckStableDuration(Duration healthCheckStableDuration)
  fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setHealthCheckStableDuration(Duration healthCheckStableDuration)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 107
  package: system.fabric
  summary: <p>Sets the length of time that the application or cluster must remain healthy before the health check passes and the upgrade proceeds to the next Upgrade Domain. </p>
  syntax:
    content: public void setHealthCheckStableDuration(Duration healthCheckStableDuration)
    parameters:
    - id: healthCheckStableDuration
      type: e02a2de0
      description: <p>The length of time that the application or cluster must remain healthy. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckWaitDuration(Duration)
  id: setHealthCheckWaitDuration(Duration)
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: setHealthCheckWaitDuration(Duration healthCheckWaitDuration)
  fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setHealthCheckWaitDuration(Duration healthCheckWaitDuration)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 91
  package: system.fabric
  summary: <p>Gets the length of time to wait after completing an upgrade domain before starting the health check process. </p>
  syntax:
    content: public void setHealthCheckWaitDuration(Duration healthCheckWaitDuration)
    parameters:
    - id: healthCheckWaitDuration
      type: e02a2de0
      description: <p>The length of time to wait after completing an upgrade domain before starting the health checks process. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.setUpgradeDomainTimeout(Duration)
  id: setUpgradeDomainTimeout(Duration)
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: setUpgradeDomainTimeout(Duration upgradeDomainTimeout)
  fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setUpgradeDomainTimeout(Duration upgradeDomainTimeout)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 154
  package: system.fabric
  summary: <p>Sets the timeout for the upgrade domain. <bold>Remarks:</bold>The default is TimeSpan.FromSeconds(uint.MaxValue).</p>
  syntax:
    content: public void setUpgradeDomainTimeout(Duration upgradeDomainTimeout)
    parameters:
    - id: upgradeDomainTimeout
      type: e02a2de0
      description: <p>The timeout for the upgrade domain. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.setUpgradeTimeout(Duration)
  id: setUpgradeTimeout(Duration)
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: setUpgradeTimeout(Duration upgradeTimeout)
  fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setUpgradeTimeout(Duration upgradeTimeout)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 138
  package: system.fabric
  summary: <p>Sets the upgrade timeout. <bold>Remarks:</bold>The default is TimeSpan.FromSeconds(uint.MaxValue).</p>
  syntax:
    content: public void setUpgradeTimeout(Duration upgradeTimeout)
    parameters:
    - id: upgradeTimeout
      type: e02a2de0
      description: <p>The upgrade timeout. </p>
- uid: system.fabric._rolling_upgrade_monitoring_policy.toNative(PinCollection)
  id: toNative(PinCollection)
  parent: system.fabric._rolling_upgrade_monitoring_policy
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  langs:
  - java
  name: toNative(PinCollection pinCollection)
  fullName: long system.fabric.RollingUpgradeMonitoringPolicy.toNative(PinCollection pinCollection)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
    startLine: 185
  package: system.fabric
  syntax:
    content: public long toNative(PinCollection pinCollection)
    parameters:
    - id: pinCollection
      type: system.fabric._pin_collection
    return:
      type: 0364520f
references:
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric._rolling_upgrade_monitoring_policy.areEqual(RollingUpgradeMonitoringPolicy,RollingUpgradeMonitoringPolicy)
- uid: system.fabric._rolling_upgrade_monitoring_policy.fromNative(long)
- uid: system.fabric._rolling_upgrade_monitoring_policy.RollingUpgradeMonitoringPolicy(int,long,long,long,long,long)
- uid: system.fabric._rolling_upgrade_monitoring_policy.toNative()
- uid: system.fabric._rolling_upgrade_monitoring_policy.validate()
- uid: system.fabric._upgrade_failure_action
  parent: system.fabric
  href: system.fabric._upgrade_failure_action.yml
  name: UpgradeFailureAction
  fullName: system.fabric.UpgradeFailureAction
  type: Enum
  summary: <p>Enumerates the actions for Service Fabric to take if the upgrade fails. </p>
  syntax:
    content: public enum UpgradeFailureAction
- uid: system.fabric._rolling_upgrade_monitoring_policy
  parent: system.fabric
  href: system.fabric._rolling_upgrade_monitoring_policy.yml
  name: RollingUpgradeMonitoringPolicy
  fullName: system.fabric.RollingUpgradeMonitoringPolicy
  type: Class
  summary: <p>Represents a class to encapsulate a rolling upgrade monitoring policy. </p>
  syntax: *o1
- uid: system.fabric._upgrade_failure_action.Invalid()
  parent: system.fabric._upgrade_failure_action
  href: system.fabric._upgrade_failure_action.yml
  name: Invalid
  fullName: system.fabric.UpgradeFailureAction.Invalid
  type: Constructor
  summary: <p>Indicates that this upgrade is not valid. All Service Fabric enumerations have the invalid type. </p>
  syntax:
    content: public Invalid=(0x0000)
- uid: system.fabric._pin_collection
  parent: system.fabric
  href: system.fabric._pin_collection.yml
  name: PinCollection
  fullName: system.fabric.PinCollection
  type: Class
  syntax:
    content: public class PinCollection
