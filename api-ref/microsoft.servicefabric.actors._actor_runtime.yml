items:
- uid: microsoft.servicefabric.actors._actor_runtime
  id: _actor_runtime
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_runtime.registerActorAsync(Class<?>,BiFunction<StatefulServiceContext, ActorTypeInformation, ActorServiceImpl>,Duration)
  - microsoft.servicefabric.actors._actor_runtime.registerActorAsync(Class<?>,Duration)
  href: microsoft.servicefabric.actors._actor_runtime.yml
  langs:
  - java
  name: ActorRuntime
  fullName: microsoft.servicefabric.actors.ActorRuntime
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRuntime.java
      branch: release_linux_5.3
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRuntime.java
    startLine: 16
  package: microsoft.servicefabric.actors
  summary: <p>Contains methods to register actor type with Service Fabric runtime. </p>
  syntax: &o1
    content: public class ActorRuntime
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - microsoft.servicefabric.actors._actor_runtime.[static initializer]()
  - microsoft.servicefabric.actors._actor_runtime.logger()
- uid: microsoft.servicefabric.actors._actor_runtime.registerActorAsync(Class<?>,BiFunction<StatefulServiceContext, ActorTypeInformation, ActorServiceImpl>,Duration)
  id: registerActorAsync(Class<?>,BiFunction<StatefulServiceContext, ActorTypeInformation, ActorServiceImpl>,Duration)
  parent: microsoft.servicefabric.actors._actor_runtime
  href: microsoft.servicefabric.actors._actor_runtime.yml
  langs:
  - java
  name: registerActorAsync(Class<?> actorType, BiFunction<StatefulServiceContext, ActorTypeInformation, ActorServiceImpl> actorServiceFactory, Duration timeout)
  fullName: static <TActor extends ActorBase> CompletableFuture<?> microsoft.servicefabric.actors.ActorRuntime.registerActorAsync(Class<?> actorType, BiFunction<StatefulServiceContext, ActorTypeInformation, ActorServiceImpl> actorServiceFactory, Duration timeout)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRuntime.java
    startLine: 49
  package: microsoft.servicefabric.actors
  summary: <p>Registers an actor type with Service Fabric runtime. </p>
  syntax:
    content: public static static<TActor extends ActorBase> CompletableFuture<?> registerActorAsync(Class<?> actorType, BiFunction<StatefulServiceContext, ActorTypeInformation, ActorServiceImpl> actorServiceFactory, Duration timeout)
    parameters:
    - id: actorType
      type: a19781f8
      description: <p>The actor class implementing <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> interface </p>
    - id: actorServiceFactory
      type: 8ead6242system.fabric._stateful_service_contextb33c76fcmicrosoft.servicefabric.actors._actor_type_informationb33c76fcmicrosoft.servicefabric.actors._actor_service_impla08ddfce
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> Service implementation to create <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref>. See <xref href="microsoft.servicefabric.actors._actor_service_impl" data-throw-if-not-resolved="false"></xref></p>
    - id: timeout
      type: e02a2de0
      description: <p>A timeout period after which the registration operation will be canceled. </p>
    return:
      type: ff42d257microsoft.servicefabric.actors._actor_basea598367f
      description: <p>A task that represents the asynchronous operation to register actor type with Service Fabric runtime. </p>
- uid: microsoft.servicefabric.actors._actor_runtime.registerActorAsync(Class<?>,Duration)
  id: registerActorAsync(Class<?>,Duration)
  parent: microsoft.servicefabric.actors._actor_runtime
  href: microsoft.servicefabric.actors._actor_runtime.yml
  langs:
  - java
  name: registerActorAsync(Class<?> actorType, Duration timeout)
  fullName: static <TActor extends ActorBase> CompletableFuture<?> microsoft.servicefabric.actors.ActorRuntime.registerActorAsync(Class<?> actorType, Duration timeout)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRuntime.java
    startLine: 35
  package: microsoft.servicefabric.actors
  summary: <p>Registers an actor type with Service Fabric runtime. </p>
  syntax:
    content: public static static<TActor extends ActorBase> CompletableFuture<?> registerActorAsync(Class<?> actorType, Duration timeout)
    parameters:
    - id: actorType
      type: a19781f8
      description: <p>The actor class implementing <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> interface </p>
    - id: timeout
      type: e02a2de0
      description: <p>A timeout period after which the registration operation will be canceled. </p>
    return:
      type: ff42d257microsoft.servicefabric.actors._actor_basea598367f
      description: <p>A task that represents the asynchronous operation to register actor type with Service Fabric runtime. </p>
references:
- uid: a19781f8
  spec.java:
  - name: Class<?>
    fullName: Class<?>
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: ff42d257microsoft.servicefabric.actors._actor_basea598367f
  spec.java:
  - name: 'static<TActor extends '
    fullName: 'static<TActor extends '
  - uid: microsoft.servicefabric.actors._actor_base
    name: ActorBase
    fullName: microsoft.servicefabric.actors.ActorBase
    href: microsoft.servicefabric.actors._actor_base.yml
  - name: '> CompletableFuture<?>'
    fullName: '> CompletableFuture<?>'
- uid: 8ead6242system.fabric._stateful_service_contextb33c76fcmicrosoft.servicefabric.actors._actor_type_informationb33c76fcmicrosoft.servicefabric.actors._actor_service_impla08ddfce
  spec.java:
  - name: BiFunction<
    fullName: BiFunction<
  - uid: system.fabric._stateful_service_context
    name: StatefulServiceContext
    fullName: system.fabric.StatefulServiceContext
    href: system.fabric._stateful_service_context.yml
  - name: ', '
    fullName: ', '
  - uid: microsoft.servicefabric.actors._actor_type_information
    name: ActorTypeInformation
    fullName: microsoft.servicefabric.actors.ActorTypeInformation
    href: microsoft.servicefabric.actors._actor_type_information.yml
  - name: ', '
    fullName: ', '
  - uid: microsoft.servicefabric.actors._actor_service_impl
    name: ActorServiceImpl
    fullName: microsoft.servicefabric.actors.ActorServiceImpl
    href: microsoft.servicefabric.actors._actor_service_impl.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.actors._actor_runtime.[static initializer]()
- uid: microsoft.servicefabric.actors._actor_runtime.logger()
- uid: microsoft.servicefabric.actors._actor_runtime
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_runtime.yml
  name: ActorRuntime
  fullName: microsoft.servicefabric.actors.ActorRuntime
  type: Class
  summary: <p>Contains methods to register actor type with Service Fabric runtime. </p>
  syntax: *o1
- uid: microsoft.servicefabric.actors._actor_base
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_base.yml
  name: ActorBase
  fullName: microsoft.servicefabric.actors.ActorBase
  type: Class
  summary: >-
    <p>Represents base class for actors. <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref></p>

    <p>

      <bold>Remarks:</bold>This is a base type for actor, it provides the functionality that is common across actors implemented by actor deriving from <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> The state is preserved across actor garbage collections and fail-overs. The storage and retrieval of the state is provided by the actor state provider <xref href="microsoft.servicefabric.actors._actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ActorBase
- uid: microsoft.servicefabric.actors._actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor.yml
  name: Actor
  fullName: microsoft.servicefabric.actors.Actor
  type: Interface
  summary: <p>Base interface for inheriting reliable actor interfaces. </p>
  syntax:
    content: public interface Actor
- uid: system.fabric._stateful_service_context
  parent: system.fabric
  href: system.fabric._stateful_service_context.yml
  name: StatefulServiceContext
  fullName: system.fabric.StatefulServiceContext
  type: Class
  syntax:
    content: public class StatefulServiceContext
- uid: microsoft.servicefabric.actors._actor_type_information
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_type_information.yml
  name: ActorTypeInformation
  fullName: microsoft.servicefabric.actors.ActorTypeInformation
  type: Class
  summary: <p>Contains information about the type implementing an actor. </p>
  syntax:
    content: public class ActorTypeInformation
- uid: microsoft.servicefabric.actors._actor_service_impl
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_service_impl.yml
  name: ActorServiceImpl
  fullName: microsoft.servicefabric.actors.ActorServiceImpl
  type: Class
  summary: >-
    <p>Represents the base class for Microsoft Service Fabric based reliable actors service. </p>

    <p>

      <bold>Remarks:</bold>Derive from this class to implement your own custom actor service if you want to override any service level behavior for your actors.</p>
  syntax:
    content: public class ActorServiceImpl
