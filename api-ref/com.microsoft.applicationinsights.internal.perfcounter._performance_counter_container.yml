items:
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container
  id: _performance_counter_container
  parent: com.microsoft.applicationinsights.internal.perfcounter
  children:
  - com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.clear()
  - com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.getCollectionFrequencyInSec()
  - com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.getStartCollectingDelayInMillis()
  - com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.register(PerformanceCounter)
  - com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.setCollectionFrequencyInSec(long)
  - com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.setPlugin(PerformanceCountersCollectionPlugin)
  - com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.setStartCollectingDelayInMillis(long)
  - com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.stop(long,TimeUnit)
  - com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.unregister(PerformanceCounter)
  - com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.unregister(String)
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.yml
  langs:
  - java
  name: PerformanceCounterContainer
  fullName: com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounterContainer
  type: Enum
  source:
    remote: &o0
      path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
    startLine: 57
  package: com.microsoft.applicationinsights.internal.perfcounter
  summary: >-
    <p>The class serves as the container of all <xref href="com.microsoft.applicationinsights.internal.perfcounter._performance_counter" data-throw-if-not-resolved="false"></xref></p>

    <p>If there is a need for a performance counter, the user of this class should create an implementation of that interface and then register it in this container.</p>

    <p>Note that the container will only start working after the first registration of a Performance Counter. That means that setting the timeouts is only relevant if done before the first registration of a Performance Counter.</p>

    <p>The container will go through all the registered Performance Counters and will trigger their 'report' method. By default the container will start reporting after 5 minutes and will continue doing so every 1 minute.</p>

    <p>The user of this class can add (register), remove (unregister) a performance counter while the container is working.</p>

    <p>The container will be stopped automatically when the application exists.</p>

    <p>Created by gupele on 3/3/2015. </p>
  syntax:
    content: public enum PerformanceCounterContainer implements Stoppable
  inheritance:
  - java.lang.Object
  - java.lang.Enum<PerformanceCounterContainer>
  - com.microsoft.applicationinsights.internal.shutdown._stoppable
  inheritedMembers:
  - com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container_1a9048e879e256d1404c12cafa86570489
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.clear()
  id: clear()
  parent: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.yml
  langs:
  - java
  name: clear()
  fullName: void com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounterContainer.clear()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
    startLine: 189
  package: com.microsoft.applicationinsights.internal.perfcounter
  syntax:
    content: public void clear()
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.getCollectionFrequencyInSec()
  id: getCollectionFrequencyInSec()
  parent: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.yml
  langs:
  - java
  name: getCollectionFrequencyInSec()
  fullName: long com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounterContainer.getCollectionFrequencyInSec()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
    startLine: 134
  package: com.microsoft.applicationinsights.internal.perfcounter
  summary: <p>Gets the timeout in milliseconds that the container will wait between collections of Performance Counters. </p>
  syntax:
    content: public long getCollectionFrequencyInSec()
    return:
      type: 0364520f
      description: <p>The timeout between collections. </p>
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.getStartCollectingDelayInMillis()
  id: getStartCollectingDelayInMillis()
  parent: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.yml
  langs:
  - java
  name: getStartCollectingDelayInMillis()
  fullName: long com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounterContainer.getStartCollectingDelayInMillis()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
    startLine: 126
  package: com.microsoft.applicationinsights.internal.perfcounter
  summary: <p>Gets the timeout in milliseconds that the container will wait before the first collection of Performance Counters. </p>
  syntax:
    content: public long getStartCollectingDelayInMillis()
    return:
      type: 0364520f
      description: <p>The first timeout in milliseconds. </p>
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.register(PerformanceCounter)
  id: register(PerformanceCounter)
  parent: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.yml
  langs:
  - java
  name: register(PerformanceCounter performanceCounter)
  fullName: boolean com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounterContainer.register(PerformanceCounter performanceCounter)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
    startLine: 87
  package: com.microsoft.applicationinsights.internal.perfcounter
  summary: <p>/** Registers a <xref href="com.microsoft.applicationinsights.internal.perfcounter._performance_counter" data-throw-if-not-resolved="false"></xref> that can collect data. </p>
  syntax:
    content: public boolean register(PerformanceCounter performanceCounter)
    parameters:
    - id: performanceCounter
      type: com.microsoft.applicationinsights.internal.perfcounter._performance_counter
      description: <p>The Performance Counter. </p>
    return:
      type: 4fc6e284
      description: <p>True on success. </p>
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.setCollectionFrequencyInSec(long)
  id: setCollectionFrequencyInSec(long)
  parent: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.yml
  langs:
  - java
  name: setCollectionFrequencyInSec(long collectionFrequencyInSec)
  fullName: void com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounterContainer.setCollectionFrequencyInSec(long collectionFrequencyInSec)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
    startLine: 160
  package: com.microsoft.applicationinsights.internal.perfcounter
  summary: >-
    <p>Sets the timeout to wait between collection of Performance Counters.</p>

    <p>The number must be a positive number</p>

    <p>Note that the method will be effective if called before the first call to the 'register' method. </p>
  syntax:
    content: public void setCollectionFrequencyInSec(long collectionFrequencyInSec)
    parameters:
    - id: collectionFrequencyInSec
      type: 0364520f
      description: <p>The timeout to wait between collection of Performance Counters. </p>
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.setPlugin(PerformanceCountersCollectionPlugin)
  id: setPlugin(PerformanceCountersCollectionPlugin)
  parent: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.yml
  langs:
  - java
  name: setPlugin(PerformanceCountersCollectionPlugin plugin)
  fullName: void com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounterContainer.setPlugin(PerformanceCountersCollectionPlugin plugin)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
    startLine: 265
  package: com.microsoft.applicationinsights.internal.perfcounter
  syntax:
    content: public void setPlugin(PerformanceCountersCollectionPlugin plugin)
    parameters:
    - id: plugin
      type: com.microsoft.applicationinsights.extensibility._performance_counters_collection_plugin
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.setStartCollectingDelayInMillis(long)
  id: setStartCollectingDelayInMillis(long)
  parent: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.yml
  langs:
  - java
  name: setStartCollectingDelayInMillis(long startCollectingDelayInMillis)
  fullName: void com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounterContainer.setStartCollectingDelayInMillis(long startCollectingDelayInMillis)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
    startLine: 179
  package: com.microsoft.applicationinsights.internal.perfcounter
  summary: >-
    <p>Sets the timeout to wait before the first reporting.</p>

    <p>The number must be a positive number</p>

    <p>Note that the method will be effective if called before the first call to the 'register' method. </p>
  syntax:
    content: public void setStartCollectingDelayInMillis(long startCollectingDelayInMillis)
    parameters:
    - id: startCollectingDelayInMillis
      type: 0364520f
      description: <p>Timeout to wait before the first collection of performance counters in milliseconds. </p>
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.stop(long,TimeUnit)
  id: stop(long,TimeUnit)
  parent: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.yml
  langs:
  - java
  name: stop(long timeout, TimeUnit timeUnit)
  fullName: synchronized void com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounterContainer.stop(long timeout, TimeUnit timeUnit)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
    startLine: 143
  package: com.microsoft.applicationinsights.internal.perfcounter
  summary: <p>Stopping the collection of performance data. </p>
  syntax:
    content: public synchronized void stop(long timeout, TimeUnit timeUnit)
    parameters:
    - id: timeout
      type: 0364520f
      description: <p>The timeout to wait for the stop to happen. </p>
    - id: timeUnit
      type: 02b8628b
      description: <p>The time unit to use when waiting for the stop to happen. </p>
    return:
      type: 5c0b90ca
  overridden: com.microsoft.applicationinsights.internal.shutdown._stoppable.stop(long,TimeUnit)
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.unregister(PerformanceCounter)
  id: unregister(PerformanceCounter)
  parent: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.yml
  langs:
  - java
  name: unregister(PerformanceCounter performanceCounter)
  fullName: void com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounterContainer.unregister(PerformanceCounter performanceCounter)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
    startLine: 107
  package: com.microsoft.applicationinsights.internal.perfcounter
  summary: <p>Un-registers a performance counter. </p>
  syntax:
    content: public void unregister(PerformanceCounter performanceCounter)
    parameters:
    - id: performanceCounter
      type: com.microsoft.applicationinsights.internal.perfcounter._performance_counter
      description: <p>The Performance Counter. </p>
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.unregister(String)
  id: unregister(String)
  parent: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container.yml
  langs:
  - java
  name: unregister(String id)
  fullName: void com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounterContainer.unregister(String id)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/perfcounter/PerformanceCounterContainer.java
    startLine: 115
  package: com.microsoft.applicationinsights.internal.perfcounter
  summary: <p>Un-registers a performance counter by its id. </p>
  syntax:
    content: public void unregister(String id)
    parameters:
    - id: id
      type: "26831127"
      description: <p>The Performance Counter's id. </p>
references:
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: 02b8628b
  spec.java:
  - name: TimeUnit
    fullName: TimeUnit
- uid: 5c0b90ca
  spec.java:
  - name: synchronized void
    fullName: synchronized void
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter_container_1a9048e879e256d1404c12cafa86570489
- uid: com.microsoft.applicationinsights.internal.shutdown._stoppable
  parent: com.microsoft.applicationinsights.internal.shutdown
  href: com.microsoft.applicationinsights.internal.shutdown._stoppable.yml
  name: Stoppable
  fullName: com.microsoft.applicationinsights.internal.shutdown.Stoppable
  type: Interface
  summary: <p>Created by gupele on 3/3/2015. </p>
  syntax:
    content: public interface Stoppable
- uid: com.microsoft.applicationinsights.internal.perfcounter._performance_counter
  parent: com.microsoft.applicationinsights.internal.perfcounter
  href: com.microsoft.applicationinsights.internal.perfcounter._performance_counter.yml
  name: PerformanceCounter
  fullName: com.microsoft.applicationinsights.internal.perfcounter.PerformanceCounter
  type: Interface
  summary: >-
    <p>

      <xref href="com.microsoft.applicationinsights.internal.perfcounter._performance_counter" data-throw-if-not-resolved="false"></xref> interface.</p>

    <p>Every concrete class should have a unique id and it should be able to collect data send that data using a <xref href="com.microsoft.applicationinsights._telemetry_client" data-throw-if-not-resolved="false"></xref></p>

    <p>Created by gupele on 3/3/2015. </p>
  syntax:
    content: public interface PerformanceCounter
- uid: com.microsoft.applicationinsights.extensibility._performance_counters_collection_plugin
  parent: com.microsoft.applicationinsights.extensibility
  href: com.microsoft.applicationinsights.extensibility._performance_counters_collection_plugin.yml
  name: PerformanceCountersCollectionPlugin
  fullName: com.microsoft.applicationinsights.extensibility.PerformanceCountersCollectionPlugin
  type: Interface
  summary: <p>Created by gupele on 9/13/2016. </p>
  syntax:
    content: public interface PerformanceCountersCollectionPlugin
- uid: com.microsoft.applicationinsights._telemetry_client
  parent: com.microsoft.applicationinsights
  href: com.microsoft.applicationinsights._telemetry_client.yml
  name: TelemetryClient
  fullName: com.microsoft.applicationinsights.TelemetryClient
  type: Class
  summary: <p>Created by gupele on 1/5/2015. </p>
  syntax:
    content: public class TelemetryClient
- uid: com.microsoft.applicationinsights.internal.shutdown._stoppable.stop(long,TimeUnit)
  parent: com.microsoft.applicationinsights.internal.shutdown._stoppable
  href: com.microsoft.applicationinsights.internal.shutdown._stoppable.yml
  name: stop(long timeout, TimeUnit timeUnit)
  fullName: void com.microsoft.applicationinsights.internal.shutdown.Stoppable.stop(long timeout, TimeUnit timeUnit)
  type: Method
  syntax:
    content: public void stop(long timeout, TimeUnit timeUnit)
    parameters:
    - id: timeout
      type: 0364520f
    - id: timeUnit
      type: 02b8628b
- uid: com.microsoft.applicationinsights.internal.shutdown._s_d_k_shutdown_activity
  parent: com.microsoft.applicationinsights.internal.shutdown
  href: com.microsoft.applicationinsights.internal.shutdown._s_d_k_shutdown_activity.yml
  name: SDKShutdownActivity
  fullName: com.microsoft.applicationinsights.internal.shutdown.SDKShutdownActivity
  type: Enum
  summary: >-
    <p>The class is responsible for all shutdown activities done in the SDK.</p>

    <p>Created by gupele on 2/2/2015. </p>
  syntax:
    content: public enum SDKShutdownActivity
