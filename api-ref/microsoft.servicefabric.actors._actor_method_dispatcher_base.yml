items:
- uid: microsoft.servicefabric.actors._actor_method_dispatcher_base
  id: _actor_method_dispatcher_base
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_method_dispatcher_base.continueWith(CompletableFuture<?>)
  - microsoft.servicefabric.actors._actor_method_dispatcher_base.continueWithResult(int,CompletableFuture<TRetval>)
  - microsoft.servicefabric.actors._actor_method_dispatcher_base.deserializeRequestMessageBody(byte [])
  - microsoft.servicefabric.actors._actor_method_dispatcher_base.dispatchAsync(int,ActorBase,ActorMessageBody)
  - microsoft.servicefabric.actors._actor_method_dispatcher_base.getInterfaceId()
  - microsoft.servicefabric.actors._actor_method_dispatcher_base.getMethodName(int)
  - microsoft.servicefabric.actors._actor_method_dispatcher_base.initialize(int,Map<Integer, String>,List<Class<?>>,List<Class<?>>)
  - microsoft.servicefabric.actors._actor_method_dispatcher_base.onDispatchAsync(int,Object,Object)
  - microsoft.servicefabric.actors._actor_method_dispatcher_base.serializeRequestMessageBody(ActorMessageBody)
  href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
  langs:
  - java
  name: ActorMethodDispatcherBase
  fullName: microsoft.servicefabric.actors.ActorMethodDispatcherBase
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorMethodDispatcherBase.java
      branch: release_linux_5.3
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorMethodDispatcherBase.java
    startLine: 12
  package: microsoft.servicefabric.actors
  summary: <p>The base class used by remoting code generator to generate the type that dispatches requests from the client to the right interface and method of the remoted object. </p>
  syntax:
    content: public class ActorMethodDispatcherBase
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.actors.ActorMethodDispatcher
- uid: microsoft.servicefabric.actors._actor_method_dispatcher_base.continueWith(CompletableFuture<?>)
  id: continueWith(CompletableFuture<?>)
  parent: microsoft.servicefabric.actors._actor_method_dispatcher_base
  href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
  langs:
  - java
  name: continueWith(CompletableFuture<?> task)
  fullName: CompletableFuture<Object> microsoft.servicefabric.actors.ActorMethodDispatcherBase.continueWith(CompletableFuture<?> task)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorMethodDispatcherBase.java
    startLine: 114
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Internal - used by Service remoting</p>

    <p></p>
  syntax:
    content: protected CompletableFuture<Object> continueWith(CompletableFuture<?> task)
    parameters:
    - id: task
      type: 16409f84
      description: <p>continuation future </p>
    return:
      type: 55aa5245
      description: <p>A <ref refid="" kindref="compound">java.util.concurrent.CompletableFuture</ref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.actors._actor_method_dispatcher_base.continueWithResult(int,CompletableFuture<TRetval>)
  id: continueWithResult(int,CompletableFuture<TRetval>)
  parent: microsoft.servicefabric.actors._actor_method_dispatcher_base
  href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
  langs:
  - java
  name: continueWithResult(int methodId, CompletableFuture<TRetval> task)
  fullName: protected<TRetval> CompletableFuture<Object> microsoft.servicefabric.actors.ActorMethodDispatcherBase.continueWithResult(int methodId, CompletableFuture<TRetval> task)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorMethodDispatcherBase.java
    startLine: 102
  package: microsoft.servicefabric.actors
  summary: >-
    <p>Internal - used by Service remoting</p>

    <p></p>
  syntax:
    content: protected <TRetval> CompletableFuture<Object> continueWithResult(int methodId, CompletableFuture<TRetval> task)
    parameters:
    - id: methodId
      type: f75371fa
      description: <p>method id </p>
    - id: task
      type: 77318c5d
      description: <p>continuation future </p>
    return:
      type: d2898f57
      description: <p>A <ref refid="" kindref="compound">java.util.concurrent.CompletableFuture</ref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.actors._actor_method_dispatcher_base.deserializeRequestMessageBody(byte [])
  id: deserializeRequestMessageBody(byte [])
  parent: microsoft.servicefabric.actors._actor_method_dispatcher_base
  href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
  langs:
  - java
  name: deserializeRequestMessageBody(byte[] requestMsgBodyBytes)
  fullName: ActorMessageBody microsoft.servicefabric.actors.ActorMethodDispatcherBase.deserializeRequestMessageBody(byte[] requestMsgBodyBytes)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorMethodDispatcherBase.java
    startLine: 31
  package: microsoft.servicefabric.actors
  syntax:
    content: public ActorMessageBody deserializeRequestMessageBody(byte[] requestMsgBodyBytes)
    parameters:
    - id: requestMsgBodyBytes
      type: ccd9418d
    return:
      type: bfa80cc3
- uid: microsoft.servicefabric.actors._actor_method_dispatcher_base.dispatchAsync(int,ActorBase,ActorMessageBody)
  id: dispatchAsync(int,ActorBase,ActorMessageBody)
  parent: microsoft.servicefabric.actors._actor_method_dispatcher_base
  href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
  langs:
  - java
  name: dispatchAsync(int methodId, ActorBase actor, ActorMessageBody requestMsgBody)
  fullName: CompletableFuture<ActorMessageBody> microsoft.servicefabric.actors.ActorMethodDispatcherBase.dispatchAsync(int methodId, ActorBase actor, ActorMessageBody requestMsgBody)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorMethodDispatcherBase.java
    startLine: 59
  package: microsoft.servicefabric.actors
  summary: >-
    <p>This method is implemented by the generated method dispatcher to dispatch request to the specified methodId of the interface implemented by the remoted object.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ActorMessageBody> dispatchAsync(int methodId, ActorBase actor, ActorMessageBody requestMsgBody)
    parameters:
    - id: methodId
      type: f75371fa
      description: <p>id of the method </p>
    - id: actor
      type: microsoft.servicefabric.actors._actor_base
      description: <p>The remoted object instance </p>
    - id: requestMsgBody
      type: bfa80cc3
      description: <p>The request body </p>
    return:
      type: 53cbc4d0
      description: <p>A <ref refid="" kindref="compound">java.util.concurrent.CompletableFuture</ref> that represents outstanding operation. The result of the task is the return value from the method. </p>
- uid: microsoft.servicefabric.actors._actor_method_dispatcher_base.getInterfaceId()
  id: getInterfaceId()
  parent: microsoft.servicefabric.actors._actor_method_dispatcher_base
  href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
  langs:
  - java
  name: getInterfaceId()
  fullName: int microsoft.servicefabric.actors.ActorMethodDispatcherBase.getInterfaceId()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorMethodDispatcherBase.java
    startLine: 26
  package: microsoft.servicefabric.actors
  syntax:
    content: public int getInterfaceId()
    return:
      type: f75371fa
- uid: microsoft.servicefabric.actors._actor_method_dispatcher_base.getMethodName(int)
  id: getMethodName(int)
  parent: microsoft.servicefabric.actors._actor_method_dispatcher_base
  href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
  langs:
  - java
  name: getMethodName(int methodId)
  fullName: String microsoft.servicefabric.actors.ActorMethodDispatcherBase.getMethodName(int methodId)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorMethodDispatcherBase.java
    startLine: 41
  package: microsoft.servicefabric.actors
  syntax:
    content: public String getMethodName(int methodId)
    parameters:
    - id: methodId
      type: f75371fa
    return:
      type: "26831127"
- uid: microsoft.servicefabric.actors._actor_method_dispatcher_base.initialize(int,Map<Integer, String>,List<Class<?>>,List<Class<?>>)
  id: initialize(int,Map<Integer, String>,List<Class<?>>,List<Class<?>>)
  parent: microsoft.servicefabric.actors._actor_method_dispatcher_base
  href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
  langs:
  - java
  name: initialize(int interfaceId, Map<Integer, String> methodNameMap, List<Class<?>> requestBodyTypes, List<Class<?>> responseBodyTypes)
  fullName: void microsoft.servicefabric.actors.ActorMethodDispatcherBase.initialize(int interfaceId, Map<Integer, String> methodNameMap, List<Class<?>> requestBodyTypes, List<Class<?>> responseBodyTypes)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorMethodDispatcherBase.java
    startLine: 17
  package: microsoft.servicefabric.actors
  syntax:
    content: public void initialize(int interfaceId, Map<Integer, String> methodNameMap, List<Class<?>> requestBodyTypes, List<Class<?>> responseBodyTypes)
    parameters:
    - id: interfaceId
      type: f75371fa
    - id: methodNameMap
      type: 5188bed5
    - id: requestBodyTypes
      type: 0e0b5418
    - id: responseBodyTypes
      type: 0e0b5418
- uid: microsoft.servicefabric.actors._actor_method_dispatcher_base.onDispatchAsync(int,Object,Object)
  id: onDispatchAsync(int,Object,Object)
  parent: microsoft.servicefabric.actors._actor_method_dispatcher_base
  href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
  langs:
  - java
  name: onDispatchAsync(int methodId, Object actor, Object requestBody)
  fullName: abstract CompletableFuture<Object> microsoft.servicefabric.actors.ActorMethodDispatcherBase.onDispatchAsync(int methodId, Object actor, Object requestBody)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorMethodDispatcherBase.java
    startLine: 133
  package: microsoft.servicefabric.actors
  summary: >-
    <p>This method is implemented by the generated method dispatcher to dispatch request to the specified methodId of the interface implemented by the remoted object.</p>

    <p></p>
  syntax:
    content: protected abstract CompletableFuture<Object> onDispatchAsync(int methodId, Object actor, Object requestBody)
    parameters:
    - id: methodId
      type: f75371fa
      description: <p>id of the method </p>
    - id: actor
      type: "79317049"
      description: <p>the remoted object instance </p>
    - id: requestBody
      type: "79317049"
      description: <p>The request body </p>
    return:
      type: "55e17007"
      description: <p>A <ref refid="" kindref="compound">java.util.concurrent.CompletableFuture</ref> that represents outstanding operation. The result of the task is the return value from the method. </p>
- uid: microsoft.servicefabric.actors._actor_method_dispatcher_base.serializeRequestMessageBody(ActorMessageBody)
  id: serializeRequestMessageBody(ActorMessageBody)
  parent: microsoft.servicefabric.actors._actor_method_dispatcher_base
  href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
  langs:
  - java
  name: serializeRequestMessageBody(ActorMessageBody responseMsgBody)
  fullName: byte [] microsoft.servicefabric.actors.ActorMethodDispatcherBase.serializeRequestMessageBody(ActorMessageBody responseMsgBody)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorMethodDispatcherBase.java
    startLine: 36
  package: microsoft.servicefabric.actors
  syntax:
    content: public byte [] serializeRequestMessageBody(ActorMessageBody responseMsgBody)
    parameters:
    - id: responseMsgBody
      type: bfa80cc3
    return:
      type: ccd9418d
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 5188bed5
  spec.java:
  - name: Map<Integer, String>
    fullName: Map<Integer, String>
- uid: 0e0b5418
  spec.java:
  - name: List<Class<?>>
    fullName: List<Class<?>>
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: bfa80cc3
  spec.java:
  - name: ActorMessageBody
    fullName: ActorMessageBody
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 53cbc4d0
  spec.java:
  - name: CompletableFuture<ActorMessageBody>
    fullName: CompletableFuture<ActorMessageBody>
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: 55aa5245
  spec.java:
  - name: CompletableFuture<Object>
    fullName: CompletableFuture<Object>
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: "55e17007"
  spec.java:
  - name: abstract CompletableFuture<Object>
    fullName: abstract CompletableFuture<Object>
- uid: 77318c5d
  spec.java:
  - name: CompletableFuture<TRetval>
    fullName: CompletableFuture<TRetval>
- uid: d2898f57
  spec.java:
  - name: <TRetval> CompletableFuture<Object>
    fullName: <TRetval> CompletableFuture<Object>
- uid: microsoft.servicefabric.actors._actor_base
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_base.yml
  name: ActorBase
  fullName: microsoft.servicefabric.actors.ActorBase
  type: Class
  summary: >-
    <p>Represents base class for actors. <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref></p>

    <p>

      <bold>Remarks:</bold>This is a base type for actor, it provides the functionality that is common across actors implemented by actor deriving from <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> The state is preserved across actor garbage collections and fail-overs. The storage and retrieval of the state is provided by the actor state provider <xref href="microsoft.servicefabric.actors._actor_state_provider" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ActorBase
