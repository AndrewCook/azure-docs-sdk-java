items:
- uid: com.microsoft.applicationinsights.sample
  id: sample
  children:
  - com.microsoft.applicationinsights.sample._ai_core
  - com.microsoft.applicationinsights.sample._ai_custom_context_initializer
  - com.microsoft.applicationinsights.sample._ai_logging
  - com.microsoft.applicationinsights.sample._sample_filter
  - com.microsoft.applicationinsights.sample._sample_p_c_plugin
  href: com.microsoft.applicationinsights.sample.yml
  langs:
  - java
  name: com.microsoft.applicationinsights.sample
  fullName: com.microsoft.applicationinsights.sample
  type: Namespace
  source:
    remote:
      path: samples/src/main/java/com/microsoft/applicationinsights/sample/AiCore.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: samples/src/main/java/com/microsoft/applicationinsights/sample/AiCore.java
    startLine: 21
  syntax:
    content: namespace sample
references:
- uid: com.microsoft.applicationinsights.sample.plugins
  href: com.microsoft.applicationinsights.sample.plugins.yml
  name: com.microsoft.applicationinsights.sample.plugins
  fullName: com.microsoft.applicationinsights.sample.plugins
  type: Namespace
  syntax:
    content: namespace plugins
- uid: com.microsoft.applicationinsights.sample._ai_core
  parent: com.microsoft.applicationinsights.sample
  href: com.microsoft.applicationinsights.sample._ai_core.yml
  name: AiCore
  fullName: com.microsoft.applicationinsights.sample.AiCore
  type: Class
  syntax:
    content: public class AiCore
- uid: com.microsoft.applicationinsights.sample._ai_custom_context_initializer
  parent: com.microsoft.applicationinsights.sample
  href: com.microsoft.applicationinsights.sample._ai_custom_context_initializer.yml
  name: AiCustomContextInitializer
  fullName: com.microsoft.applicationinsights.sample.AiCustomContextInitializer
  type: Class
  summary: <p>Created by gupele on 7/15/2015. </p>
  syntax:
    content: public class AiCustomContextInitializer
- uid: com.microsoft.applicationinsights.sample._ai_logging
  parent: com.microsoft.applicationinsights.sample
  href: com.microsoft.applicationinsights.sample._ai_logging.yml
  name: AiLogging
  fullName: com.microsoft.applicationinsights.sample.AiLogging
  type: Class
  syntax:
    content: public class AiLogging
- uid: com.microsoft.applicationinsights.sample._sample_filter
  parent: com.microsoft.applicationinsights.sample
  href: com.microsoft.applicationinsights.sample._sample_filter.yml
  name: SampleFilter
  fullName: com.microsoft.applicationinsights.sample.SampleFilter
  type: Class
  summary: >-
    <p>Sample filter This class is an example for having a custom filter that can filter out unneded telemetries. To have one, you should implement <ref refid="" kindref="compound">TelemetryProcessor</ref> and implement its 'process' method.</p>

    <p>The method gets a <ref refid="" kindref="compound">Telemetry</ref> instance that is ready to be sent. This is your chance to approve or deny it. Returning 'false' means that the Telemetry will not be sent while 'true' means you approve it.</p>

    <p>The Telemetry might go through other filters though, that might deny its sending.</p>

    <p>To enable this processor you need to add it in the ApplicationInsights.xml like this:</p>

    <p>

      <programlisting>

        <codeline>

          <highlight class="normal">&lt;TelemetryProcessors&gt;</highlight>

        </codeline>

        <codeline></codeline>

        <codeline>

          <highlight class="normal">

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>&lt;CustomProcessors&gt;</highlight>

        </codeline>

        <codeline>

          <highlight class="normal">

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>&lt;Processor<sp></sp>type="com.microsoft.applicationinsights.sample.SampleFilter"&gt;</highlight>

        </codeline>

        <codeline>

          <highlight class="normal">

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>&lt;Add<sp></sp>name="Pass"<sp></sp>value="false"/&gt;</highlight>

        </codeline>

        <codeline>

          <highlight class="normal">

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>&lt;/Processor&gt;</highlight>

        </codeline>

        <codeline>

          <highlight class="normal">

            <sp></sp>

            <sp></sp>

            <sp></sp>&lt;/CustomProcessors&gt;</highlight>

        </codeline>

        <codeline></codeline>

        <codeline>

          <highlight class="normal">&lt;/TelemetryProcessors&gt;</highlight>

        </codeline>

      </programlisting>

    </p>

    <p>Note that the class defines a property named 'pass' which is configured too. Every property that you wish to configure needs to have a 'setX' public method like 'setPass' in this example <bold>Exceptions thrown from the 'setX' methods will be caught by the framework that will ignore the filter</bold></p>

    <p>Created by gupele on 7/26/2016. </p>
  syntax:
    content: public class SampleFilter implements TelemetryProcessor
- uid: com.microsoft.applicationinsights.sample._sample_p_c_plugin
  parent: com.microsoft.applicationinsights.sample
  href: com.microsoft.applicationinsights.sample._sample_p_c_plugin.yml
  name: SamplePCPlugin
  fullName: com.microsoft.applicationinsights.sample.SamplePCPlugin
  type: Class
  summary: >-
    <p>A sample for creating a concrete plugin that will be called before and after Performance Counters are collected.</p>

    <p>To activate this class you need to add it to the ApplicationInsights.xml configuration file with the 'Plugin' tag:</p>

    <p>

      <preformatted>

        <programlisting>

          <codeline>

            <highlight class="normal">

              <sp></sp>

              <sp></sp>

              <sp></sp>&lt;PerformanceCounters&gt;</highlight>

          </codeline>

          <codeline>

            <highlight class="normal">

              <sp></sp>

              <sp></sp>

              <sp></sp>

              <sp></sp>

              <sp></sp>

              <sp></sp>

              <sp></sp>&lt;Plugin&gt;full.path.to.your.Plugin&lt;/Plugin&gt;</highlight>

          </codeline>

          <codeline>

            <highlight class="normal">&lt;/PerformanceCounters&gt;</highlight>

          </codeline>

        </programlisting>

      </preformatted>

    </p>

    <p>Created by gupele on 9/13/2016. </p>
  syntax:
    content: public class SamplePCPlugin implements PerformanceCountersCollectionPlugin
