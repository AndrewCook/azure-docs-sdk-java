items:
- uid: com.microsoft.applicationinsights.sample._sample_filter
  id: _sample_filter
  parent: com.microsoft.applicationinsights.sample
  children:
  - com.microsoft.applicationinsights.sample._sample_filter.process(Telemetry)
  - com.microsoft.applicationinsights.sample._sample_filter.setPass(String)
  href: com.microsoft.applicationinsights.sample._sample_filter.yml
  langs:
  - java
  name: SampleFilter
  fullName: com.microsoft.applicationinsights.sample.SampleFilter
  type: Class
  source:
    remote: &o0
      path: samples/src/main/java/com/microsoft/applicationinsights/sample/SampleFilter.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: samples/src/main/java/com/microsoft/applicationinsights/sample/SampleFilter.java
    startLine: 57
  package: com.microsoft.applicationinsights.sample
  summary: >-
    <p>Sample filter This class is an example for having a custom filter that can filter out unneded telemetries. To have one, you should implement <ref refid="" kindref="compound">TelemetryProcessor</ref> and implement its 'process' method.</p>

    <p>The method gets a <ref refid="" kindref="compound">Telemetry</ref> instance that is ready to be sent. This is your chance to approve or deny it. Returning 'false' means that the Telemetry will not be sent while 'true' means you approve it.</p>

    <p>The Telemetry might go through other filters though, that might deny its sending.</p>

    <p>To enable this processor you need to add it in the ApplicationInsights.xml like this:</p>

    <p>

      <programlisting>

        <codeline>

          <highlight class="normal">&lt;TelemetryProcessors&gt;</highlight>

        </codeline>

        <codeline></codeline>

        <codeline>

          <highlight class="normal">

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>&lt;CustomProcessors&gt;</highlight>

        </codeline>

        <codeline>

          <highlight class="normal">

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>&lt;Processor<sp></sp>type="com.microsoft.applicationinsights.sample.SampleFilter"&gt;</highlight>

        </codeline>

        <codeline>

          <highlight class="normal">

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>&lt;Add<sp></sp>name="Pass"<sp></sp>value="false"/&gt;</highlight>

        </codeline>

        <codeline>

          <highlight class="normal">

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>

            <sp></sp>&lt;/Processor&gt;</highlight>

        </codeline>

        <codeline>

          <highlight class="normal">

            <sp></sp>

            <sp></sp>

            <sp></sp>&lt;/CustomProcessors&gt;</highlight>

        </codeline>

        <codeline></codeline>

        <codeline>

          <highlight class="normal">&lt;/TelemetryProcessors&gt;</highlight>

        </codeline>

      </programlisting>

    </p>

    <p>Note that the class defines a property named 'pass' which is configured too. Every property that you wish to configure needs to have a 'setX' public method like 'setPass' in this example <bold>Exceptions thrown from the 'setX' methods will be caught by the framework that will ignore the filter</bold></p>

    <p>Created by gupele on 7/26/2016. </p>
  syntax:
    content: public class SampleFilter implements TelemetryProcessor
  inheritance:
  - java.lang.Object
  - com.microsoft.applicationinsights.extensibility._telemetry_processor
- uid: com.microsoft.applicationinsights.sample._sample_filter.process(Telemetry)
  id: process(Telemetry)
  parent: com.microsoft.applicationinsights.sample._sample_filter
  href: com.microsoft.applicationinsights.sample._sample_filter.yml
  langs:
  - java
  name: process(Telemetry telemetry)
  fullName: boolean com.microsoft.applicationinsights.sample.SampleFilter.process(Telemetry telemetry)
  type: Method
  source:
    remote: *o0
    path: samples/src/main/java/com/microsoft/applicationinsights/sample/SampleFilter.java
    startLine: 65
  package: com.microsoft.applicationinsights.sample
  syntax:
    content: public boolean process(Telemetry telemetry)
    parameters:
    - id: telemetry
      type: com.microsoft.applicationinsights.telemetry._telemetry
    return:
      type: 4fc6e284
  overridden: com.microsoft.applicationinsights.extensibility._telemetry_processor.process(Telemetry)
- uid: com.microsoft.applicationinsights.sample._sample_filter.setPass(String)
  id: setPass(String)
  parent: com.microsoft.applicationinsights.sample._sample_filter
  href: com.microsoft.applicationinsights.sample._sample_filter.yml
  langs:
  - java
  name: setPass(String bad)
  fullName: void com.microsoft.applicationinsights.sample.SampleFilter.setPass(String bad)
  type: Method
  source:
    remote: *o0
    path: samples/src/main/java/com/microsoft/applicationinsights/sample/SampleFilter.java
    startLine: 60
  package: com.microsoft.applicationinsights.sample
  syntax:
    content: public void setPass(String bad)
    parameters:
    - id: bad
      type: "26831127"
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.applicationinsights.extensibility._telemetry_processor
  parent: com.microsoft.applicationinsights.extensibility
  href: com.microsoft.applicationinsights.extensibility._telemetry_processor.yml
  name: TelemetryProcessor
  fullName: com.microsoft.applicationinsights.extensibility.TelemetryProcessor
  type: Interface
  summary: "<p>The method gets a <ref refid=\"\" kindref=\"compound\">Telemetry</ref> instance that is ready to be sent. This is your chance to approve or deny it. Returning 'false' means that the Telemetry will not be sent while 'true' means you approve it.</p>\r\n<p>The Telemetry might go through other filters though, that might deny its sending.</p>\r\n<p>To enable this processor you need to add it in the ApplicationInsights.xml like this:</p>\r\n<p>\r\n  <preformatted>\r\n    <programlisting>\r\n      <codeline>\r\n        <highlight class=\"normal\">&lt;TelemetryProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;CustomProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;Processor<sp></sp>type=\"full.path.to.Filter\"&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;Add<sp></sp>name=\"Property\"<sp></sp>value=\"stringValue\"/&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;/Processor&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;/CustomProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">&lt;/TelemetryProcessors&gt;</highlight>\r\n      </codeline>\r\n    </programlisting> \r\n*</preformatted>\r\n</p>\r\n<p>Note that the class defines a property named 'Property' which is configured too. Every property that you wish to configure needs to have a 'setX' public method like 'setProperty' in this example <bold>Exceptions thrown from the 'setX' methods will be caught by the framework that will ignore the filter</bold></p>\r\n<p>Created by gupele on 7/26/2016. </p>"
  syntax:
    content: public interface TelemetryProcessor
- uid: com.microsoft.applicationinsights.extensibility._telemetry_processor.process(Telemetry)
  parent: com.microsoft.applicationinsights.extensibility._telemetry_processor
  href: com.microsoft.applicationinsights.extensibility._telemetry_processor.yml
  name: process(Telemetry telemetry)
  fullName: boolean com.microsoft.applicationinsights.extensibility.TelemetryProcessor.process(Telemetry telemetry)
  type: Method
  syntax:
    content: public boolean process(Telemetry telemetry)
    parameters:
    - id: telemetry
      type: com.microsoft.applicationinsights.telemetry._telemetry
    return:
      type: 4fc6e284
- uid: com.microsoft.applicationinsights.telemetry._telemetry
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: Telemetry
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry
  type: Interface
  summary: <p>The base telemetry type interface for application insights. </p>
  syntax:
    content: public interface Telemetry
