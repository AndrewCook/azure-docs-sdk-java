items:
- uid: microsoft.servicefabric.actors._actor_state_provider
  id: _actor_state_provider
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_state_provider.actorActivatedAsync(ActorId)
  - microsoft.servicefabric.actors._actor_state_provider.containsStateAsync(ActorId,String)
  - microsoft.servicefabric.actors._actor_state_provider.deleteReminderAsync(ActorId,String)
  - microsoft.servicefabric.actors._actor_state_provider.enumerateStateNamesAsync(ActorId)
  - microsoft.servicefabric.actors._actor_state_provider.getActorsAsync(int,ContinuationToken)
  - microsoft.servicefabric.actors._actor_state_provider.initialize(ActorTypeInformation)
  - microsoft.servicefabric.actors._actor_state_provider.loadRemindersAsync()
  - microsoft.servicefabric.actors._actor_state_provider.loadStateAsync(ActorId,String)
  - microsoft.servicefabric.actors._actor_state_provider.removeActorAsync(ActorId)
  - microsoft.servicefabric.actors._actor_state_provider.saveReminderAsync(ActorId,ActorReminder)
  - microsoft.servicefabric.actors._actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: ActorStateProvider
  fullName: microsoft.servicefabric.actors.ActorStateProvider
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      branch: release_linux_5.3
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 11
  package: microsoft.servicefabric.actors
  summary: <p>Represents the interface that an actor state provider needs to implement for actor runtime to communicate with it. </p>
  syntax:
    content: public interface ActorStateProvider extends StateProviderReplica
  inheritedMembers:
  - microsoft.servicefabric.data._state_provider_replica.abort()
  - microsoft.servicefabric.data._state_provider_replica.backupAsync(Function<BackupInfo, CompletableFuture<Boolean>>)
  - microsoft.servicefabric.data._state_provider_replica.backupAsync(BackupOption,Duration,Function<BackupInfo, CompletableFuture<Boolean>>)
  - microsoft.servicefabric.data._state_provider_replica.changeRoleAsync(ReplicaRole)
  - microsoft.servicefabric.data._state_provider_replica.closeAsync()
  - microsoft.servicefabric.data._state_provider_replica.initialize(StatefulServiceInitializationParameters)
  - microsoft.servicefabric.data._state_provider_replica.openAsync(ReplicaOpenMode,StatefulServicePartition)
  - microsoft.servicefabric.data._state_provider_replica.restoreAsync(String)
  - microsoft.servicefabric.data._state_provider_replica.restoreAsync(String,RestorePolicy)
  - microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback(Callable<CompletableFuture<Boolean>>)
- uid: microsoft.servicefabric.actors._actor_state_provider.actorActivatedAsync(ActorId)
  id: actorActivatedAsync(ActorId)
  parent: microsoft.servicefabric.actors._actor_state_provider
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: actorActivatedAsync(ActorId actorId)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.actorActivatedAsync(ActorId actorId)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 23
  package: microsoft.servicefabric.actors
  summary: <p>This method is invoked as part of the activation process of the actor with the specified Id. </p>
  syntax:
    content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor that is activated. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> activation notification processing. </p>
- uid: microsoft.servicefabric.actors._actor_state_provider.containsStateAsync(ActorId,String)
  id: containsStateAsync(ActorId,String)
  parent: microsoft.servicefabric.actors._actor_state_provider
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: containsStateAsync(ActorId actorId, String stateName)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateProvider.containsStateAsync(ActorId actorId, String stateName)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 55
  package: microsoft.servicefabric.actors
  summary: <p>Checks whether actor state provider contains an actor state with specified state name. </p>
  syntax:
    content: public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to check state existence. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to check for existence. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous check operation. The value of TResult parameter is true if state with specified name exists otherwise false. </p>
- uid: microsoft.servicefabric.actors._actor_state_provider.deleteReminderAsync(ActorId,String)
  id: deleteReminderAsync(ActorId,String)
  parent: microsoft.servicefabric.actors._actor_state_provider
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: deleteReminderAsync(ActorId actorId, String reminderName)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 105
  package: microsoft.servicefabric.actors
  summary: <p>Deletes the specified actor reminder if it exists. </p>
  syntax:
    content: public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to delete the reminder. </p>
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder to delete. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
- uid: microsoft.servicefabric.actors._actor_state_provider.enumerateStateNamesAsync(ActorId)
  id: enumerateStateNamesAsync(ActorId)
  parent: microsoft.servicefabric.actors._actor_state_provider
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: enumerateStateNamesAsync(ActorId actorId)
  fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.ActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 71
  package: microsoft.servicefabric.actors
  summary: <p>Creates an enumerable of all the state names associated with specified actor. <bold>Remarks:</bold>The enumerator returned from actor state provider is safe to use concurrently with reads and writes to the state provider. It represents a snapshot consistent view of the state provider.</p>
  syntax:
    content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to create enumerable. </p>
    return:
      type: d20512af
      description: <p>A task that represents the asynchronous enumeration operation. The value of TResult parameter is an enumerable of all state names associated with specified actor. </p>
- uid: microsoft.servicefabric.actors._actor_state_provider.getActorsAsync(int,ContinuationToken)
  id: getActorsAsync(int,ContinuationToken)
  parent: microsoft.servicefabric.actors._actor_state_provider
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)
  fullName: CompletableFuture<PagedResult<ActorId>> microsoft.servicefabric.actors.ActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 88
  package: microsoft.servicefabric.actors
  summary: <p>Gets ActorIds from the State Provider. <bold>Remarks:</bold> The </p>
  syntax:
    content: public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)
    parameters:
    - id: numItemsToReturn
      type: f75371fa
      description: <p>Number of items requested to be returned. </p>
    - id: continuationToken
      type: microsoft.servicefabric.actors._continuation_token
      description: <p>A continuation token to start querying the results from. A null value of continuation token means start returning values form the beginning. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
      description: <p>A task that represents the asynchronous operation of call to server. </p>
- uid: microsoft.servicefabric.actors._actor_state_provider.initialize(ActorTypeInformation)
  id: initialize(ActorTypeInformation)
  parent: microsoft.servicefabric.actors._actor_state_provider
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: initialize(ActorTypeInformation actorTypeInformation)
  fullName: void microsoft.servicefabric.actors.ActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 17
  package: microsoft.servicefabric.actors
  summary: <p>Initializes the actor state provider with type information of the actor type associated with it. </p>
  syntax:
    content: public void initialize(ActorTypeInformation actorTypeInformation)
    parameters:
    - id: actorTypeInformation
      type: microsoft.servicefabric.actors._actor_type_information
      description: <p>Type information of the actor class </p>
- uid: microsoft.servicefabric.actors._actor_state_provider.loadRemindersAsync()
  id: loadRemindersAsync()
  parent: microsoft.servicefabric.actors._actor_state_provider
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: loadRemindersAsync()
  fullName: CompletableFuture<ActorReminderCollection> microsoft.servicefabric.actors.ActorStateProvider.loadRemindersAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 112
  package: microsoft.servicefabric.actors
  summary: <p>Loads all the reminders contained in the actor state provider. </p>
  syntax:
    content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync()
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._actor_reminder_collectiona08ddfce
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter is a collection of all actor reminders contained in the actor state provider. </p>
- uid: microsoft.servicefabric.actors._actor_state_provider.loadStateAsync(ActorId,String)
  id: loadStateAsync(ActorId,String)
  parent: microsoft.servicefabric.actors._actor_state_provider
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: loadStateAsync(ActorId actorId, String stateName)
  fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateProvider.loadStateAsync(ActorId actorId, String stateName)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 33
  package: microsoft.servicefabric.actors
  summary: <p>Loads the actor state associated with the specified state name. </p>
  syntax:
    content: public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to load the state. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to load. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter contains value of actor state associated with given state name. </p>
- uid: microsoft.servicefabric.actors._actor_state_provider.removeActorAsync(ActorId)
  id: removeActorAsync(ActorId)
  parent: microsoft.servicefabric.actors._actor_state_provider
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: removeActorAsync(ActorId actorId)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.removeActorAsync(ActorId actorId)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 61
  package: microsoft.servicefabric.actors
  summary: <p>Removes all the existing states and reminders associated with specified actor atomically. </p>
  syntax:
    content: public CompletableFuture<?> removeActorAsync(ActorId actorId)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to remove state. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous remove operation. </p>
- uid: microsoft.servicefabric.actors._actor_state_provider.saveReminderAsync(ActorId,ActorReminder)
  id: saveReminderAsync(ActorId,ActorReminder)
  parent: microsoft.servicefabric.actors._actor_state_provider
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: saveReminderAsync(ActorId actorId, ActorReminder reminder)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 98
  package: microsoft.servicefabric.actors
  summary: <p>Saves the specified actor reminder. If an actor reminder with given name does not exist, it adds the actor reminder otherwise existing actor reminder with same name is updated. </p>
  syntax:
    content: public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to save the reminder. </p>
    - id: reminder
      type: microsoft.servicefabric.actors._actor_reminder
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> reminder to save. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors._actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)
  id: saveStateAsync(ActorId,List<ActorStateChange>)
  parent: microsoft.servicefabric.actors._actor_state_provider
  href: microsoft.servicefabric.actors._actor_state_provider.yml
  langs:
  - java
  name: saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
    startLine: 45
  package: microsoft.servicefabric.actors
  summary: <p>Saves the specified set of actor state changes atomically. <bold>Remarks:</bold> The collection of state changes should contain only one item for a given state name. The save operation will fail on trying to add an actor state which already exists or update/remove an actor state which does not exist.</p>
  syntax:
    content: public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to save the state changes. </p>
    - id: stateChanges
      type: 5618da2dmicrosoft.servicefabric.actors._actor_state_changea08ddfce
      description: <p>Collection of state changes to save. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
references:
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 6d056e8b
  spec.java:
  - name: <T> CompletableFuture<T>
    fullName: <T> CompletableFuture<T>
- uid: 5618da2dmicrosoft.servicefabric.actors._actor_state_changea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: microsoft.servicefabric.actors._actor_state_change
    name: ActorStateChange
    fullName: microsoft.servicefabric.actors.ActorStateChange
    href: microsoft.servicefabric.actors._actor_state_change.yml
  - name: '>'
    fullName: '>'
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: d20512af
  spec.java:
  - name: CompletableFuture<List<String>>
    fullName: CompletableFuture<List<String>>
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.actors._paged_result
    name: PagedResult
    fullName: microsoft.servicefabric.actors.PagedResult
    href: microsoft.servicefabric.actors._paged_result.yml
  - name: <
    fullName: <
  - uid: microsoft.servicefabric.actors._actor_id
    name: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    href: microsoft.servicefabric.actors._actor_id.yml
  - name: '>>'
    fullName: '>>'
- uid: 9cdf14d0microsoft.servicefabric.actors._actor_reminder_collectiona08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.actors._actor_reminder_collection
    name: ActorReminderCollection
    fullName: microsoft.servicefabric.actors.ActorReminderCollection
    href: microsoft.servicefabric.actors._actor_reminder_collection.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.data._state_provider_replica.abort()
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: abort()
  fullName: void microsoft.servicefabric.data.StateProviderReplica.abort()
  type: Method
  summary: >-
    <p>Forcefully abort the state provider replica. </p>

    <p>

      <bold>Remarks:</bold>This generally occurs when a permanent fault is detected on the node, or when Service Fabric cannot reliably manage the replica's lifecycle due to internal failures.</p>
  syntax:
    content: public void abort()
- uid: microsoft.servicefabric.data._state_provider_replica.backupAsync(Function<BackupInfo, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: backupAsync(Function<BackupInfo, CompletableFuture<Boolean>> backupCallback)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.backupAsync(Function<BackupInfo, CompletableFuture<Boolean>> backupCallback)
  type: Method
  summary: <p>Performs a full backup of all reliable state managed by this ReliableStateManager. <bold>Remarks:</bold> A FULL backup will be performed with a one-hour timeout. Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws InvalidOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>
  syntax:
    content: public CompletableFuture<?> backupAsync(Function<BackupInfo, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: backupCallback
      type: 432ffe41microsoft.servicefabric.data._backup_info774bd4f0
      description: <p>Callback to be called when the backup folder has been created locally and is ready to be moved out of the node </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.backupAsync(BackupOption,Duration,Function<BackupInfo, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: backupAsync(BackupOption option, Duration timeout, Function<BackupInfo, CompletableFuture<Boolean>> backupCallback)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.backupAsync(BackupOption option, Duration timeout, Function<BackupInfo, CompletableFuture<Boolean>> backupCallback)
  type: Method
  summary: <p>Performs a full backup of all reliable state managed by this ReliableStateManager. <bold>Remarks:</bold> A FULL backup will be performed with a one-hour timeout. Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws InvalidOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupOption option, Duration timeout, Function<BackupInfo, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: option
      type: microsoft.servicefabric.data._backup_option
      description: <p>The type of backup to perform. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timeout for this operation. </p>
    - id: backupCallback
      type: 432ffe41microsoft.servicefabric.data._backup_info774bd4f0
      description: <p>Callback to be called when the backup folder has been created locally and is ready to be moved out of the node </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.changeRoleAsync(ReplicaRole)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: changeRoleAsync(ReplicaRole newRole)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.changeRoleAsync(ReplicaRole newRole)
  type: Method
  summary: <p>Notify the state provider replica that its role is changing, for example to Primary or Secondary. </p>
  syntax:
    content: public CompletableFuture<?> changeRoleAsync(ReplicaRole newRole)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>The new replica role, such as primary or secondary. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous change role operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.closeAsync()
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: closeAsync()
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.closeAsync()
  type: Method
  summary: <p>Gracefully close the state provider replica. <bold>Remarks:</bold>This generally occurs when the replica's code is being upgrade, the replica is being moved due to load balancing, or a transient fault is detected.</p>
  syntax:
    content: public CompletableFuture<?> closeAsync()
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous close operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.initialize(StatefulServiceInitializationParameters)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: initialize(StatefulServiceInitializationParameters initializationParameters)
  fullName: void microsoft.servicefabric.data.StateProviderReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
  type: Method
  summary: <p>Initialize the state provider replica using the service initialization information. <bold>Remarks:</bold>No complex processing should be done during Initialize. Expensive or long-running initialization should be done in OpenAsync.</p>
  syntax:
    content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
    parameters:
    - id: initializationParameters
      type: system.fabric._stateful_service_initialization_parameters
      description: <p>Service initialization information such as service name, partition id, replica id, and code package information. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.openAsync(ReplicaOpenMode,StatefulServicePartition)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
  fullName: CompletableFuture<Replicator> microsoft.servicefabric.data.StateProviderReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
  type: Method
  summary: <p>Open the state provider replica for use. <bold>Remarks:</bold>Extended state provider initialization tasks can be started at this time.</p>
  syntax:
    content: public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
    parameters:
    - id: openMode
      type: system.fabric._replica_open_mode
      description: <p>Indicates whether this is a new or existing replica. </p>
    - id: partition
      type: system.fabric._stateful_service_partition
      description: <p>The partition this replica belongs to. </p>
    return:
      type: 9cdf14d0system.fabric._replicatora08ddfce
      description: <p>Task that represents the asynchronous open operation. The result contains the replicator responsible for replicating state between other state provider replicas in the partition. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.restoreAsync(String)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: restoreAsync(String backupFolderPath)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath)
  type: Method
  summary: <p>Restore a backup taken. <bold>Remarks:</bold>A safe restore will be performed, meaning the restore will only be completed if the data to restore is ahead of state of the current replica.</p>
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.restoreAsync(String,RestorePolicy)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
  fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
  type: Method
  summary: <p>Restore a backup taken </p>
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    - id: restorePolicy
      type: microsoft.servicefabric.data._restore_policy
      description: <p>The restore policy. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback(Callable<CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: setOnDataLossCallback(Callable<CompletableFuture<Boolean>> onDataLossAsync)
  fullName: void microsoft.servicefabric.data.StateProviderReplica.setOnDataLossCallback(Callable<CompletableFuture<Boolean>> onDataLossAsync)
  type: Method
  summary: <p>Function called during suspected data-loss </p>
  syntax:
    content: public void setOnDataLossCallback(Callable<CompletableFuture<Boolean>> onDataLossAsync)
    parameters:
    - id: onDataLossAsync
      type: 4b194e73
      description: <p>TODO. Task that represents the asynchronous operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: StateProviderReplica
  fullName: microsoft.servicefabric.data.StateProviderReplica
  type: Interface
  summary: <p>Defines methods a reliable state provider replica must implement for Service Fabric to interact with it. </p>
  syntax:
    content: public interface StateProviderReplica
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: KvsActorStateProvider
  fullName: microsoft.servicefabric.actors.KvsActorStateProvider
  type: Class
  syntax:
    content: public class KvsActorStateProvider
- uid: microsoft.servicefabric.actors._null_actor_state_provider
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: VolatileActorStateProvider
  fullName: microsoft.servicefabric.actors.VolatileActorStateProvider
  type: Class
  summary: >-
    <p>

      <xref href="microsoft.servicefabric.actors._actor_state_provider" data-throw-if-not-resolved="false"></xref> implementation for Volatile persistence i.e <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> state is kept in-memory only. </p>
  syntax:
    content: public class VolatileActorStateProvider
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.initialize(ActorTypeInformation)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: initialize(ActorTypeInformation actorTypeInformation)
  fullName: void microsoft.servicefabric.actors.KvsActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  type: Method
  summary: >-
    <p>Initializes the actor state provider with type information of the actor type associated with it.</p>

    <p></p>
  syntax:
    content: public void initialize(ActorTypeInformation actorTypeInformation)
    parameters:
    - id: actorTypeInformation
      type: microsoft.servicefabric.actors._actor_type_information
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor_type_information" data-throw-if-not-resolved="false"></xref> Type information of the actor class. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.initialize(ActorTypeInformation)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: initialize(ActorTypeInformation actorTypeInformation)
  fullName: void microsoft.servicefabric.actors.VolatileActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  type: Method
  summary: >-
    <p>Initializes the actor state provider with type information of the actor type associated with it.</p>

    <p></p>
  syntax:
    content: public void initialize(ActorTypeInformation actorTypeInformation)
    parameters:
    - id: actorTypeInformation
      type: microsoft.servicefabric.actors._actor_type_information
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor_type_information" data-throw-if-not-resolved="false"></xref> Type information of the actor class. </p>
- uid: microsoft.servicefabric.actors._actor_type_information
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_type_information.yml
  name: ActorTypeInformation
  fullName: microsoft.servicefabric.actors.ActorTypeInformation
  type: Class
  summary: <p>Contains information about the type implementing an actor. </p>
  syntax:
    content: public class ActorTypeInformation
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.actorActivatedAsync(ActorId)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: actorActivatedAsync(ActorId actorId)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.actorActivatedAsync(ActorId actorId)
  type: Method
  summary: >-
    <p>This method is invoked as part of the activation process of the actor with the specified Id.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>Id of the actor that is activated. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> activation notification processing. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.actorActivatedAsync(ActorId)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: actorActivatedAsync(ActorId actorId)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.actorActivatedAsync(ActorId actorId)
  type: Method
  summary: >-
    <p>This method is invoked as part of the activation process of the actor with the specified Id.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>Id of the actor that is activated. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> activation notification processing. </p>
- uid: microsoft.servicefabric.actors._actor_id
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_id.yml
  name: ActorId
  fullName: microsoft.servicefabric.actors.ActorId
  type: Class
  summary: >-
    <p>

      <xref href="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false"></xref> represents identity of an actor within an actor service. The actors can be identified by <ref refid="" kindref="compound">java.lang.String</ref>, <ref refid="" kindref="compound">java.util.UUID</ref> or long. </p>
  syntax:
    content: public class ActorId
- uid: microsoft.servicefabric.actors._actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor.yml
  name: Actor
  fullName: microsoft.servicefabric.actors.Actor
  type: Interface
  summary: <p>Base interface for inheriting reliable actor interfaces. </p>
  syntax:
    content: public interface Actor
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.loadStateAsync(ActorId,String)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: loadStateAsync(ActorId actorId, String stateName)
  fullName: public<T> CompletableFuture<T> microsoft.servicefabric.actors.KvsActorStateProvider.loadStateAsync(ActorId actorId, String stateName)
  type: Method
  summary: >-
    <p>Loads the actor state associated with the specified state name.</p>

    <p></p>
  syntax:
    content: public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>Id of the actor that is activated. </p>
    - id: stateName
      type: "26831127"
      description: <p>StateName. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter contains value of actor state associated with given state name. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.loadStateAsync(ActorId,String)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: loadStateAsync(ActorId actorId, String stateName)
  fullName: public<T> CompletableFuture<T> microsoft.servicefabric.actors.VolatileActorStateProvider.loadStateAsync(ActorId actorId, String stateName)
  type: Method
  summary: >-
    <p>Loads the actor state associated with the specified state name.</p>

    <p></p>
  syntax:
    content: public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>Id of the actor that is activated. </p>
    - id: stateName
      type: "26831127"
      description: <p>StateName. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter contains value of actor state associated with given state name. </p>
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)
  type: Method
  summary: >-
    <p>Saves the specified set of actor state changes atomically.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to save the state changes. </p>
    - id: stateChanges
      type: 5618da2dmicrosoft.servicefabric.actors._actor_state_changea08ddfce
      description: <p>Collection of state changes to save. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. The collection of state changes should contain only one item for a given state name. The save operation will fail on trying to add an actor state which already exists or update/remove an actor state which does not exist. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)
  type: Method
  summary: >-
    <p>Saves the specified set of actor state changes atomically.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to save the state changes. </p>
    - id: stateChanges
      type: 5618da2dmicrosoft.servicefabric.actors._actor_state_changea08ddfce
      description: <p>Collection of state changes to save. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. The collection of state changes should contain only one item for a given state name. The save operation will fail on trying to add an actor state which already exists or update/remove an actor state which does not exist. </p>
- uid: microsoft.servicefabric.actors._actor_state_change
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_state_change.yml
  name: ActorStateChange
  fullName: microsoft.servicefabric.actors.ActorStateChange
  type: Class
  summary: <p>Represents change to an actor state with a given state name. </p>
  syntax:
    content: public class ActorStateChange
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.containsStateAsync(ActorId,String)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: containsStateAsync(ActorId actorId, String stateName)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.KvsActorStateProvider.containsStateAsync(ActorId actorId, String stateName)
  type: Method
  summary: >-
    <p>Checks whether actor state provider contains an actor state with specified state name.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to check state existence. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to check for existence. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous check operation. The value of TResult parameter is true if state with specified name exists otherwise false. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.containsStateAsync(ActorId,String)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: containsStateAsync(ActorId actorId, String stateName)
  fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.VolatileActorStateProvider.containsStateAsync(ActorId actorId, String stateName)
  type: Method
  summary: >-
    <p>Checks whether actor state provider contains an actor state with specified state name.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to check state existence. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to check for existence. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous check operation. The value of TResult parameter is true if state with specified name exists otherwise false. </p>
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.removeActorAsync(ActorId)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: removeActorAsync(ActorId actorId)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.removeActorAsync(ActorId actorId)
  type: Method
  summary: >-
    <p>Removes all the existing states and reminders associated with specified actor atomically.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> removeActorAsync(ActorId actorId)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to remove state. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous remove operation. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.removeActorAsync(ActorId)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: removeActorAsync(ActorId actorId)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.removeActorAsync(ActorId actorId)
  type: Method
  summary: >-
    <p>Removes all the existing states and reminders associated with specified actor atomically.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> removeActorAsync(ActorId actorId)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to remove state. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous remove operation. </p>
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.enumerateStateNamesAsync(ActorId)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: enumerateStateNamesAsync(ActorId actorId)
  fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.KvsActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
  type: Method
  summary: >-
    <p>Creates an enumerable of all the state names associated with specified actor.</p>

    <p>

      <bold>Remarks:</bold>The enumerator returned from actor state provider is safe to use concurrently with reads and writes to the state provider. It represents a snapshot consistent view of the state provider. </p>
  syntax:
    content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to create enumerable. </p>
    return:
      type: d20512af
      description: <p>A task that represents the asynchronous enumeration operation. The value of TResult parameter is an enumerable of all state names associated with specified actor. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.enumerateStateNamesAsync(ActorId)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: enumerateStateNamesAsync(ActorId actorId)
  fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.VolatileActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
  type: Method
  summary: >-
    <p>Creates an enumerable of all the state names associated with specified actor.</p>

    <p>

      <bold>Remarks:</bold>The enumerator returned from actor state provider is safe to use concurrently with reads and writes to the state provider. It represents a snapshot consistent view of the state provider. </p>
  syntax:
    content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to create enumerable. </p>
    return:
      type: d20512af
      description: <p>A task that represents the asynchronous enumeration operation. The value of TResult parameter is an enumerable of all state names associated with specified actor. </p>
- uid: microsoft.servicefabric.actors._paged_result
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._paged_result.yml
  name: PagedResult<T>
  fullName: microsoft.servicefabric.actors.PagedResult<T>
  type: Class
  summary: <p>Represents the result of actor query calls. </p>
  syntax:
    content: public class PagedResult<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>Type of the items this query result contains. </p>
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.getActorsAsync(int,ContinuationToken)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)
  fullName: CompletableFuture<PagedResult<ActorId>> microsoft.servicefabric.actors.KvsActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)
  type: Method
  summary: >-
    <p>Gets ActorIds from the State Provider.</p>

    <p>

      <bold>Remarks:</bold> The </p>
  syntax:
    content: public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)
    parameters:
    - id: numItemsToReturn
      type: f75371fa
      description: <p>Number of items requested to be returned. </p>
    - id: continuationToken
      type: microsoft.servicefabric.actors._continuation_token
      description: <p>A continuation token to start querying the results from. A null value of continuation token means start returning values form the beginning. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
      description: <p>A task that represents the asynchronous operation of call to server. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.getActorsAsync(int,ContinuationToken)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: getActorsAsync(int itemsCount, ContinuationToken continuationToken)
  fullName: CompletableFuture<PagedResult<ActorId>> microsoft.servicefabric.actors.VolatileActorStateProvider.getActorsAsync(int itemsCount, ContinuationToken continuationToken)
  type: Method
  summary: >-
    <p>Gets ActorIds from the State Provider.</p>

    <p>

      <bold>Remarks:</bold> The </p>
  syntax:
    content: public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int itemsCount, ContinuationToken continuationToken)
    parameters:
    - id: itemsCount
      type: f75371fa
      description: <p>Number of items requested to be returned. </p>
    - id: continuationToken
      type: microsoft.servicefabric.actors._continuation_token
      description: <p>A continuation token to start querying the results from. A null value of continuation token means start returning values form the beginning. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
      description: <p>A task that represents the asynchronous operation of call to server. </p>
- uid: microsoft.servicefabric.actors._continuation_token
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._continuation_token.yml
  name: ContinuationToken
  fullName: microsoft.servicefabric.actors.ContinuationToken
  type: Class
  summary: >-
    <p>Represents a continuation token for query operations. </p>

    <p>

      <bold>Remarks:</bold>A method that may return a partial set of results via a <xref href="microsoft.servicefabric.actors._paged_result" data-throw-if-not-resolved="false"></xref> object also returns a continuation token in the object, which can be used in a subsequent call to return the next set of available results.</p>
  syntax:
    content: public class ContinuationToken
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.saveReminderAsync(ActorId,ActorReminder)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: saveReminderAsync(ActorId actorId, ActorReminder reminder)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)
  type: Method
  summary: >-
    <p>Saves the specified actor reminder. If an actor reminder with given name does not exist, it adds the actor reminder otherwise existing actor reminder with same name is updated.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of actor for which to save reminder. </p>
    - id: reminder
      type: microsoft.servicefabric.actors._actor_reminder
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> reminder to save. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.saveReminderAsync(ActorId,ActorReminder)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: saveReminderAsync(ActorId actorId, ActorReminder reminder)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)
  type: Method
  summary: >-
    <p>Saves the specified actor reminder. If an actor reminder with given name does not exist, it adds the actor reminder otherwise existing actor reminder with same name is updated.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of actor for which to save reminder. </p>
    - id: reminder
      type: microsoft.servicefabric.actors._actor_reminder
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> reminder to save. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors._actor_reminder
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_reminder.yml
  name: ActorReminder
  fullName: microsoft.servicefabric.actors.ActorReminder
  type: Interface
  summary: <p>Encapsulates Reminder set on an <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public interface ActorReminder
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.deleteReminderAsync(ActorId,String)
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: deleteReminderAsync(ActorId actorId, String reminderName)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)
  type: Method
  summary: >-
    <p>Deletes the specified actor reminder if it exists.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor to delete the reminder. </p>
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder to delete. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.deleteReminderAsync(ActorId,String)
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: deleteReminderAsync(ActorId actorId, String reminderName)
  fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)
  type: Method
  summary: >-
    <p>Deletes the specified actor reminder if it exists.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor to delete the reminder. </p>
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder to delete. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
- uid: microsoft.servicefabric.actors._actor_reminder_collection
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_reminder_collection.yml
  name: ActorReminderCollection
  fullName: microsoft.servicefabric.actors.ActorReminderCollection
  type: Interface
  summary: <p>Captures <xref href="microsoft.servicefabric.actors._actor_reminder_state" data-throw-if-not-resolved="false"></xref> for Actors </p>
  syntax:
    content: public interface ActorReminderCollection
- uid: microsoft.servicefabric.actors._kvs_actor_state_provider.loadRemindersAsync()
  parent: microsoft.servicefabric.actors._kvs_actor_state_provider
  href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
  name: loadRemindersAsync()
  fullName: CompletableFuture<ActorReminderCollection> microsoft.servicefabric.actors.KvsActorStateProvider.loadRemindersAsync()
  type: Method
  summary: >-
    <p>Loads all the reminders contained in the actor state provider.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync()
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._actor_reminder_collectiona08ddfce
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter is a collection of all actor reminders contained in the actor state provider. </p>
- uid: microsoft.servicefabric.actors._volatile_actor_state_provider.loadRemindersAsync()
  parent: microsoft.servicefabric.actors._volatile_actor_state_provider
  href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
  name: loadRemindersAsync()
  fullName: CompletableFuture<ActorReminderCollection> microsoft.servicefabric.actors.VolatileActorStateProvider.loadRemindersAsync()
  type: Method
  summary: >-
    <p>Loads all the reminders contained in the actor state provider.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync()
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._actor_reminder_collectiona08ddfce
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter is a collection of all actor reminders contained in the actor state provider. </p>
