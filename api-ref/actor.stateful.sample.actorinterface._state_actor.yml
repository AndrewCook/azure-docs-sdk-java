items:
- uid: actor.stateful.sample.actorinterface._state_actor
  id: _state_actor
  parent: actor.stateful.sample.actorinterface
  children:
  - actor.stateful.sample.actorinterface._state_actor.getCountAsync()
  - actor.stateful.sample.actorinterface._state_actor.setCountAsync(int)
  href: actor.stateful.sample.actorinterface._state_actor.yml
  langs:
  - java
  name: StateActor
  fullName: actor.stateful.sample.actorinterface.StateActor
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/sample/actor/statefulactor/src/actor/stateful/sample/actorinterface/StateActor.java
      branch: release_linux_5.3
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/sample/actor/statefulactor/src/actor/stateful/sample/actorinterface/StateActor.java
    startLine: 17
  package: actor.stateful.sample.actorinterface
  syntax:
    content: public interface StateActor extends Actor,ActorEventPublisherE<GameEvents>
- uid: actor.stateful.sample.actorinterface._state_actor.getCountAsync()
  id: getCountAsync()
  parent: actor.stateful.sample.actorinterface._state_actor
  href: actor.stateful.sample.actorinterface._state_actor.yml
  langs:
  - java
  name: getCountAsync()
  fullName: CompletableFuture<Integer> actor.stateful.sample.actorinterface.StateActor.getCountAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/sample/actor/statefulactor/src/actor/stateful/sample/actorinterface/StateActor.java
    startLine: 19
  package: actor.stateful.sample.actorinterface
  syntax:
    content: public CompletableFuture<Integer> getCountAsync()
    return:
      type: dbb7f135
- uid: actor.stateful.sample.actorinterface._state_actor.setCountAsync(int)
  id: setCountAsync(int)
  parent: actor.stateful.sample.actorinterface._state_actor
  href: actor.stateful.sample.actorinterface._state_actor.yml
  langs:
  - java
  name: setCountAsync(int count)
  fullName: CompletableFuture<?> actor.stateful.sample.actorinterface.StateActor.setCountAsync(int count)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/sample/actor/statefulactor/src/actor/stateful/sample/actorinterface/StateActor.java
    startLine: 21
  package: actor.stateful.sample.actorinterface
  syntax:
    content: public CompletableFuture<?> setCountAsync(int count)
    parameters:
    - id: count
      type: f75371fa
    return:
      type: 16409f84
references:
- uid: dbb7f135
  spec.java:
  - name: CompletableFuture<Integer>
    fullName: CompletableFuture<Integer>
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.actors._actor
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor.yml
  name: Actor
  fullName: microsoft.servicefabric.actors.Actor
  type: Interface
  summary: <p>Base interface for inheriting reliable actor interfaces. </p>
  syntax:
    content: public interface Actor
- uid: microsoft.servicefabric.actors._actor_event_publisher_e
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_event_publisher_e.yml
  name: ActorEventPublisherE<TActorEvents>
  fullName: microsoft.servicefabric.actors.ActorEventPublisherE<TActorEvents>
  type: Interface
  summary: <p>Represents publisher of actor events. Publishers of actor events must implement this interface </p>
  syntax:
    content: public interface ActorEventPublisherE<TActorEvents extends ActorEvents> extends ActorEventPublisher
    typeParameters:
    - type: 6e1c167f
      description: >-
        <p>

          <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> event interface type derived from <xref href="microsoft.servicefabric.actors._actor_events" data-throw-if-not-resolved="false"></xref>. </p>
- uid: actor.stateful.sample.actorservice._actor_service
  parent: actor.stateful.sample.actorservice
  href: actor.stateful.sample.actorservice._actor_service.yml
  name: ActorService
  fullName: actor.stateful.sample.actorservice.ActorService
  type: Class
  syntax:
    content: public class ActorService implements StateActor
- uid: actor.stateful.sample.actorservice._actor_service.getCountAsync()
  parent: actor.stateful.sample.actorservice._actor_service
  href: actor.stateful.sample.actorservice._actor_service.yml
  name: getCountAsync()
  fullName: CompletableFuture<Integer> actor.stateful.sample.actorservice.ActorService.getCountAsync()
  type: Method
  syntax:
    content: public CompletableFuture<Integer> getCountAsync()
    return:
      type: dbb7f135
- uid: actor.stateful.sample.actorservice._actor_service.setCountAsync(int)
  parent: actor.stateful.sample.actorservice._actor_service
  href: actor.stateful.sample.actorservice._actor_service.yml
  name: setCountAsync(int count)
  fullName: CompletableFuture<?> actor.stateful.sample.actorservice.ActorService.setCountAsync(int count)
  type: Method
  syntax:
    content: public CompletableFuture<?> setCountAsync(int count)
    parameters:
    - id: count
      type: f75371fa
    return:
      type: 16409f84
