items:
- uid: com.microsoft.applicationinsights._telemetry_configuration
  id: _telemetry_configuration
  parent: com.microsoft.applicationinsights
  children:
  - com.microsoft.applicationinsights._telemetry_configuration.createDefault()
  - com.microsoft.applicationinsights._telemetry_configuration.getActive()
  - com.microsoft.applicationinsights._telemetry_configuration.getChannel()
  - com.microsoft.applicationinsights._telemetry_configuration.getContextInitializers()
  - com.microsoft.applicationinsights._telemetry_configuration.getInstrumentationKey()
  - com.microsoft.applicationinsights._telemetry_configuration.getTelemetryInitializers()
  - com.microsoft.applicationinsights._telemetry_configuration.getTelemetryModules()
  - com.microsoft.applicationinsights._telemetry_configuration.getTelemetryProcessors()
  - com.microsoft.applicationinsights._telemetry_configuration.isTrackingDisabled()
  - com.microsoft.applicationinsights._telemetry_configuration.setChannel(TelemetryChannel)
  - com.microsoft.applicationinsights._telemetry_configuration.setInstrumentationKey(String)
  - com.microsoft.applicationinsights._telemetry_configuration.setTrackingIsDisabled(boolean)
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: TelemetryConfiguration
  fullName: com.microsoft.applicationinsights.TelemetryConfiguration
  type: Class
  source:
    remote: &o0
      path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 44
  package: com.microsoft.applicationinsights
  summary: >-
    <p>Encapsulates the global telemetry configuration typically loaded from the ApplicationInsights.xml file.</p>

    <p>All <xref href="com.microsoft.applicationinsights.telemetry._telemetry_context" data-throw-if-not-resolved="false"></xref> objects are initialized using the 'Active' (returned by the 'getActive' static method) telemetry configuration provided by this class. </p>
  syntax: &o1
    content: public class TelemetryConfiguration
  inheritance:
  - java.lang.Object
- uid: com.microsoft.applicationinsights._telemetry_configuration.createDefault()
  id: createDefault()
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: createDefault()
  fullName: static TelemetryConfiguration com.microsoft.applicationinsights.TelemetryConfiguration.createDefault()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 88
  package: com.microsoft.applicationinsights
  summary: <p>Creates a new instance loaded from the ApplicationInsights.xml file. If the configuration file does not exist, the new configuration instance is initialized with minimum defaults needed to send telemetry to Application Insights. </p>
  syntax:
    content: public static TelemetryConfiguration createDefault()
    return:
      type: com.microsoft.applicationinsights._telemetry_configuration
      description: <p>Telemetry Configuration instance. </p>
- uid: com.microsoft.applicationinsights._telemetry_configuration.getActive()
  id: getActive()
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: getActive()
  fullName: static TelemetryConfiguration com.microsoft.applicationinsights.TelemetryConfiguration.getActive()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 68
  package: com.microsoft.applicationinsights
  summary: <p>Gets the active <ref refid="" kindref="compound">com.microsoft.applicationinsights.TelemetryConfiguration</ref> instance loaded from the ApplicationInsights.xml file. If the configuration file does not exist, the active configuration instance is initialized with minimum defaults needed to send telemetry to Application Insights. </p>
  syntax:
    content: public static TelemetryConfiguration getActive()
    return:
      type: com.microsoft.applicationinsights._telemetry_configuration
      description: <p>The 'Active' instance </p>
- uid: com.microsoft.applicationinsights._telemetry_configuration.getChannel()
  id: getChannel()
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: getChannel()
  fullName: TelemetryChannel com.microsoft.applicationinsights.TelemetryConfiguration.getChannel()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 98
  package: com.microsoft.applicationinsights
  summary: <p>Gets the telemetry channel. </p>
  syntax:
    content: public TelemetryChannel getChannel()
    return:
      type: com.microsoft.applicationinsights.channel._telemetry_channel
      description: <p>An instance of <xref href="com.microsoft.applicationinsights.channel._telemetry_channel" data-throw-if-not-resolved="false"></xref></p>
- uid: com.microsoft.applicationinsights._telemetry_configuration.getContextInitializers()
  id: getContextInitializers()
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: getContextInitializers()
  fullName: List<ContextInitializer> com.microsoft.applicationinsights.TelemetryConfiguration.getContextInitializers()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 143
  package: com.microsoft.applicationinsights
  summary: >-
    <p>Gets the list of <ref refid="" kindref="compound">ContextInitializer</ref> objects that supply additional information about application.</p>

    <p>Context initializers extend Application Insights telemetry collection by supplying additional information about application environment, such as 'User' information (in TelemetryContext.getUser or Device (in TelemetryContext.getDevice invokes telemetry initializers each time the <xref href="com.microsoft.applicationinsights._telemetry_client" data-throw-if-not-resolved="false"></xref>'s 'track' method is called</p>

    <p>The default list of telemetry initializers is provided by the SDK and can also be set from the ApplicationInsights.xml. </p>
  syntax:
    content: public List<ContextInitializer> getContextInitializers()
    return:
      type: 5618da2dcom.microsoft.applicationinsights.extensibility._context_initializera08ddfce
      description: <p>Collection of Context Initializers </p>
- uid: com.microsoft.applicationinsights._telemetry_configuration.getInstrumentationKey()
  id: getInstrumentationKey()
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: getInstrumentationKey()
  fullName: String com.microsoft.applicationinsights.TelemetryConfiguration.getInstrumentationKey()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 174
  package: com.microsoft.applicationinsights
  summary: >-
    <p>Gets or sets the default instrumentation key for the application.</p>

    <p>This instrumentation key value is used by default by all <xref href="com.microsoft.applicationinsights._telemetry_client" data-throw-if-not-resolved="false"></xref> instances created in the application. This value can be overwritten by setting the Instrumentation Key in <xref href="com.microsoft.applicationinsights.telemetry._telemetry_context" data-throw-if-not-resolved="false"></xref> class </p>
  syntax:
    content: public String getInstrumentationKey()
    return:
      type: "26831127"
      description: <p>The instrumentation key </p>
- uid: com.microsoft.applicationinsights._telemetry_configuration.getTelemetryInitializers()
  id: getTelemetryInitializers()
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: getTelemetryInitializers()
  fullName: List<TelemetryInitializer> com.microsoft.applicationinsights.TelemetryConfiguration.getTelemetryInitializers()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 154
  package: com.microsoft.applicationinsights
  summary: >-
    <p>Gets the list of modules that automatically generate application telemetry.</p>

    <p>Telemetry modules automatically send telemetry describing the application to Application Insights. For example, a telemetry module can handle application exception events and automatically send </p>
  syntax:
    content: public List<TelemetryInitializer> getTelemetryInitializers()
    return:
      type: 5618da2dcom.microsoft.applicationinsights.extensibility._telemetry_initializera08ddfce
      description: <p>List of Telemetry Initializers </p>
- uid: com.microsoft.applicationinsights._telemetry_configuration.getTelemetryModules()
  id: getTelemetryModules()
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: getTelemetryModules()
  fullName: List<TelemetryModule> com.microsoft.applicationinsights.TelemetryConfiguration.getTelemetryModules()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 158
  package: com.microsoft.applicationinsights
  syntax:
    content: public List<TelemetryModule> getTelemetryModules()
    return:
      type: 5618da2dcom.microsoft.applicationinsights.extensibility._telemetry_modulea08ddfce
- uid: com.microsoft.applicationinsights._telemetry_configuration.getTelemetryProcessors()
  id: getTelemetryProcessors()
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: getTelemetryProcessors()
  fullName: List<TelemetryProcessor> com.microsoft.applicationinsights.TelemetryConfiguration.getTelemetryProcessors()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 162
  package: com.microsoft.applicationinsights
  syntax:
    content: public List<TelemetryProcessor> getTelemetryProcessors()
    return:
      type: 5618da2dcom.microsoft.applicationinsights.extensibility._telemetry_processora08ddfce
- uid: com.microsoft.applicationinsights._telemetry_configuration.isTrackingDisabled()
  id: isTrackingDisabled()
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: isTrackingDisabled()
  fullName: boolean com.microsoft.applicationinsights.TelemetryConfiguration.isTrackingDisabled()
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 118
  package: com.microsoft.applicationinsights
  summary: >-
    <p>Gets value indicating whether sending of telemetry to Application Insights is disabled.</p>

    <p>This disable tracking setting value is used by default by all <xref href="com.microsoft.applicationinsights._telemetry_client" data-throw-if-not-resolved="false"></xref> instances created in the application.</p>

    <p></p>
  syntax:
    content: public boolean isTrackingDisabled()
    return:
      type: 4fc6e284
      description: <p>True if tracking is disabled. </p>
- uid: com.microsoft.applicationinsights._telemetry_configuration.setChannel(TelemetryChannel)
  id: setChannel(TelemetryChannel)
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: setChannel(TelemetryChannel channel)
  fullName: void com.microsoft.applicationinsights.TelemetryConfiguration.setChannel(TelemetryChannel channel)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 106
  package: com.microsoft.applicationinsights
  summary: <p>Sets the telemetry channel. </p>
  syntax:
    content: public void setChannel(TelemetryChannel channel)
    parameters:
    - id: channel
      type: com.microsoft.applicationinsights.channel._telemetry_channel
      description: <p>An instance of <xref href="com.microsoft.applicationinsights.channel._telemetry_channel" data-throw-if-not-resolved="false"></xref></p>
- uid: com.microsoft.applicationinsights._telemetry_configuration.setInstrumentationKey(String)
  id: setInstrumentationKey(String)
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: setInstrumentationKey(String key)
  fullName: void com.microsoft.applicationinsights.TelemetryConfiguration.setInstrumentationKey(String key)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 187
  package: com.microsoft.applicationinsights
  summary: >-
    <p>Gets or sets the default instrumentation key for the application.</p>

    <p>This instrumentation key value is used by default by all <xref href="com.microsoft.applicationinsights._telemetry_client" data-throw-if-not-resolved="false"></xref> instances created in the application. This value can be overwritten by setting the Instrumentation Key in <xref href="com.microsoft.applicationinsights.telemetry._telemetry_context" data-throw-if-not-resolved="false"></xref> class </p>
  syntax:
    content: public void setInstrumentationKey(String key)
    parameters:
    - id: key
      type: "26831127"
      description: <p>The instrumentation key </p>
  exceptions:
  - type: 3c87bd19
    description: <p>when the new value is null or empty </p>
- uid: com.microsoft.applicationinsights._telemetry_configuration.setTrackingIsDisabled(boolean)
  id: setTrackingIsDisabled(boolean)
  parent: com.microsoft.applicationinsights._telemetry_configuration
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  langs:
  - java
  name: setTrackingIsDisabled(boolean disable)
  fullName: void com.microsoft.applicationinsights.TelemetryConfiguration.setTrackingIsDisabled(boolean disable)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/TelemetryConfiguration.java
    startLine: 129
  package: com.microsoft.applicationinsights
  summary: >-
    <p>Sets value indicating whether sending of telemetry to Application Insights is disabled.</p>

    <p>This disable tracking setting value is used by default by all <xref href="com.microsoft.applicationinsights._telemetry_client" data-throw-if-not-resolved="false"></xref> instances created in the application. </p>
  syntax:
    content: public void setTrackingIsDisabled(boolean disable)
    parameters:
    - id: disable
      type: 4fc6e284
      description: <p>True to disable tracking. </p>
references:
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: 5618da2dcom.microsoft.applicationinsights.extensibility._context_initializera08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.applicationinsights.extensibility._context_initializer
    name: ContextInitializer
    fullName: com.microsoft.applicationinsights.extensibility.ContextInitializer
    href: com.microsoft.applicationinsights.extensibility._context_initializer.yml
  - name: '>'
    fullName: '>'
- uid: 5618da2dcom.microsoft.applicationinsights.extensibility._telemetry_initializera08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.applicationinsights.extensibility._telemetry_initializer
    name: TelemetryInitializer
    fullName: com.microsoft.applicationinsights.extensibility.TelemetryInitializer
    href: com.microsoft.applicationinsights.extensibility._telemetry_initializer.yml
  - name: '>'
    fullName: '>'
- uid: 5618da2dcom.microsoft.applicationinsights.extensibility._telemetry_modulea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.applicationinsights.extensibility._telemetry_module
    name: TelemetryModule
    fullName: com.microsoft.applicationinsights.extensibility.TelemetryModule
    href: com.microsoft.applicationinsights.extensibility._telemetry_module.yml
  - name: '>'
    fullName: '>'
- uid: 5618da2dcom.microsoft.applicationinsights.extensibility._telemetry_processora08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.applicationinsights.extensibility._telemetry_processor
    name: TelemetryProcessor
    fullName: com.microsoft.applicationinsights.extensibility.TelemetryProcessor
    href: com.microsoft.applicationinsights.extensibility._telemetry_processor.yml
  - name: '>'
    fullName: '>'
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: com.microsoft.applicationinsights._telemetry_configuration
  parent: com.microsoft.applicationinsights
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  name: TelemetryConfiguration
  fullName: com.microsoft.applicationinsights.TelemetryConfiguration
  type: Class
  summary: >-
    <p>Encapsulates the global telemetry configuration typically loaded from the ApplicationInsights.xml file.</p>

    <p>All <xref href="com.microsoft.applicationinsights.telemetry._telemetry_context" data-throw-if-not-resolved="false"></xref> objects are initialized using the 'Active' (returned by the 'getActive' static method) telemetry configuration provided by this class. </p>
  syntax: *o1
- uid: com.microsoft.applicationinsights.extensibility._context_initializer
  parent: com.microsoft.applicationinsights.extensibility
  href: com.microsoft.applicationinsights.extensibility._context_initializer.yml
  name: ContextInitializer
  fullName: com.microsoft.applicationinsights.extensibility.ContextInitializer
  type: Interface
  summary: <p>Represents an object that implements supporting logic for TelemetryContext. <xref href="com.microsoft.applicationinsights.telemetry._telemetry_context" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public interface ContextInitializer
- uid: com.microsoft.applicationinsights.extensibility._telemetry_initializer
  parent: com.microsoft.applicationinsights.extensibility
  href: com.microsoft.applicationinsights.extensibility._telemetry_initializer.yml
  name: TelemetryInitializer
  fullName: com.microsoft.applicationinsights.extensibility.TelemetryInitializer
  type: Interface
  summary: <p>Created by gupele on 12/30/2014. </p>
  syntax:
    content: public interface TelemetryInitializer
- uid: com.microsoft.applicationinsights.extensibility._telemetry_module
  parent: com.microsoft.applicationinsights.extensibility
  href: com.microsoft.applicationinsights.extensibility._telemetry_module.yml
  name: TelemetryModule
  fullName: com.microsoft.applicationinsights.extensibility.TelemetryModule
  type: Interface
  summary: <p>Created by yonisha on 2/2/2015. </p>
  syntax:
    content: public interface TelemetryModule
- uid: com.microsoft.applicationinsights.extensibility._telemetry_processor
  parent: com.microsoft.applicationinsights.extensibility
  href: com.microsoft.applicationinsights.extensibility._telemetry_processor.yml
  name: TelemetryProcessor
  fullName: com.microsoft.applicationinsights.extensibility.TelemetryProcessor
  type: Interface
  summary: "<p>The method gets a <ref refid=\"\" kindref=\"compound\">Telemetry</ref> instance that is ready to be sent. This is your chance to approve or deny it. Returning 'false' means that the Telemetry will not be sent while 'true' means you approve it.</p>\r\n<p>The Telemetry might go through other filters though, that might deny its sending.</p>\r\n<p>To enable this processor you need to add it in the ApplicationInsights.xml like this:</p>\r\n<p>\r\n  <preformatted>\r\n    <programlisting>\r\n      <codeline>\r\n        <highlight class=\"normal\">&lt;TelemetryProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;CustomProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;Processor<sp></sp>type=\"full.path.to.Filter\"&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;Add<sp></sp>name=\"Property\"<sp></sp>value=\"stringValue\"/&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;/Processor&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;/CustomProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">&lt;/TelemetryProcessors&gt;</highlight>\r\n      </codeline>\r\n    </programlisting> \r\n*</preformatted>\r\n</p>\r\n<p>Note that the class defines a property named 'Property' which is configured too. Every property that you wish to configure needs to have a 'setX' public method like 'setProperty' in this example <bold>Exceptions thrown from the 'setX' methods will be caught by the framework that will ignore the filter</bold></p>\r\n<p>Created by gupele on 7/26/2016. </p>"
  syntax:
    content: public interface TelemetryProcessor
- uid: com.microsoft.applicationinsights.channel._telemetry_channel
  parent: com.microsoft.applicationinsights.channel
  href: com.microsoft.applicationinsights.channel._telemetry_channel.yml
  name: TelemetryChannel
  fullName: com.microsoft.applicationinsights.channel.TelemetryChannel
  type: Interface
  summary: <p>Represents a communication channel for sending telemetry to application insights. </p>
  syntax:
    content: public interface TelemetryChannel
- uid: com.microsoft.applicationinsights._telemetry_client
  parent: com.microsoft.applicationinsights
  href: com.microsoft.applicationinsights._telemetry_client.yml
  name: TelemetryClient
  fullName: com.microsoft.applicationinsights.TelemetryClient
  type: Class
  summary: <p>Created by gupele on 1/5/2015. </p>
  syntax:
    content: public class TelemetryClient
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  name: TelemetryContext
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext
  type: Class
  summary: <p>Represents a context for sending telemetry to the Application Insights service. </p>
  syntax:
    content: public class TelemetryContext
