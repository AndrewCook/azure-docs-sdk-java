items:
- uid: system.fabric._key_value_store_replica
  id: _key_value_store_replica
  parent: system.fabric
  children:
  - system.fabric._key_value_store_replica.abort()
  - system.fabric._key_value_store_replica.add(TransactionBase,String,byte[])
  - system.fabric._key_value_store_replica.backupAsync(String,StoreBackupOption,Function<StoreBackupInfo, CompletableFuture<Boolean>>)
  - system.fabric._key_value_store_replica.changeRoleAsync(ReplicaRole)
  - system.fabric._key_value_store_replica.closeAsync()
  - system.fabric._key_value_store_replica.contains(TransactionBase,String)
  - system.fabric._key_value_store_replica.createTransaction()
  - system.fabric._key_value_store_replica.createTransaction(KeyValueStoreTransactionSettings)
  - system.fabric._key_value_store_replica.enumerate(TransactionBase)
  - system.fabric._key_value_store_replica.enumerate(TransactionBase,String)
  - system.fabric._key_value_store_replica.enumerate(TransactionBase,String,boolean)
  - system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase)
  - system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String)
  - system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String,boolean)
  - system.fabric._key_value_store_replica.get(TransactionBase,String)
  - system.fabric._key_value_store_replica.getCurrentEpoch()
  - system.fabric._key_value_store_replica.getDataLossHandler()
  - system.fabric._key_value_store_replica.getMetadata(TransactionBase,String)
  - system.fabric._key_value_store_replica.getReplicatorSettings()
  - system.fabric._key_value_store_replica.getStoreName()
  - system.fabric._key_value_store_replica.getValue(TransactionBase,String)
  - system.fabric._key_value_store_replica.initialize(StatefulServiceInitializationParameters)
  - system.fabric._key_value_store_replica.KeyValueStoreReplica(String)
  - system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings)
  - system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings)
  - system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,KeyValueStoreReplicaSettings)
  - system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,SecondaryNotificationMode)
  - system.fabric._key_value_store_replica.KeyValueStoreReplica(String,ReplicatorSettings)
  - system.fabric._key_value_store_replica.onAbort()
  - system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole)
  - system.fabric._key_value_store_replica.onCloseAsync()
  - system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)
  - system.fabric._key_value_store_replica.onDatalossReported()
  - system.fabric._key_value_store_replica.onInitialize(StatefulServiceInitializationParameters)
  - system.fabric._key_value_store_replica.onOpenAsync(ReplicaOpenMode,StatefulServicePartition)
  - system.fabric._key_value_store_replica.onReplicationOperation(Enumeration<KeyValueStoreNotification>)
  - system.fabric._key_value_store_replica.openAsync(ReplicaOpenMode,StatefulServicePartition)
  - system.fabric._key_value_store_replica.remove(TransactionBase,String)
  - system.fabric._key_value_store_replica.remove(TransactionBase,String,long)
  - system.fabric._key_value_store_replica.restoreAsync(String)
  - system.fabric._key_value_store_replica.restoreAsync(String,RestoreSettings)
  - system.fabric._key_value_store_replica.serviceCloseAsync()
  - system.fabric._key_value_store_replica.setReplicatorSettings(ReplicatorSettings)
  - system.fabric._key_value_store_replica.tryAdd(TransactionBase,String,byte[])
  - system.fabric._key_value_store_replica.tryGet(TransactionBase,String)
  - system.fabric._key_value_store_replica.tryGetMetadata(TransactionBase,String)
  - system.fabric._key_value_store_replica.tryGetValue(TransactionBase,String)
  - system.fabric._key_value_store_replica.tryRemove(TransactionBase,String)
  - system.fabric._key_value_store_replica.tryRemove(TransactionBase,String,long)
  - system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte[])
  - system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte[],long)
  - system.fabric._key_value_store_replica.update(TransactionBase,String,byte[])
  - system.fabric._key_value_store_replica.update(TransactionBase,String,byte[],long)
  - system.fabric._key_value_store_replica.updateReplicatorSettings(ReplicatorSettings)
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: KeyValueStoreReplica
  fullName: system.fabric.KeyValueStoreReplica
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      branch: release_linux_5.3
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 23
  package: system.fabric
  summary: "<p>Provides a transactional, replicated, associative data storage to service writers â€“ ready for integration into any Service Fabric service. </p>"
  syntax: &o1
    content: public class KeyValueStoreReplica implements StatefulServiceReplica
  inheritance:
  - java.lang.Object
  - system.fabric._stateful_service_replica
  inheritedMembers:
  - system.fabric._key_value_store_replica.Abort(long)
  - system.fabric._key_value_store_replica.Add(long,long,String,long,byte[])
  - system.fabric._key_value_store_replica.BeginBackup(long,String,int,KeyValueStorePostBackupHandlerBroker,NativeAsyncCallback)
  - system.fabric._key_value_store_replica.BeginChangeRole(long,int,NativeAsyncCallback)
  - system.fabric._key_value_store_replica.BeginClose(long,NativeAsyncCallback)
  - system.fabric._key_value_store_replica.BeginOpen(long,int,long,NativeAsyncCallback)
  - system.fabric._key_value_store_replica.BeginRestore2(long,String,long,NativeAsyncCallback)
  - system.fabric._key_value_store_replica.Contains(long,long,String)
  - system.fabric._key_value_store_replica.CreateKeyValueStoreReplica(String,String,long,String,long,long,int,String,long,long,long,long,long,boolean,KeyValueStoreReplica,int)
  - system.fabric._key_value_store_replica.CreateTransaction(long)
  - system.fabric._key_value_store_replica.CreateTransaction2(long,long)
  - system.fabric._key_value_store_replica.EndBackup(long,long)
  - system.fabric._key_value_store_replica.EndChangeRole(long,long)
  - system.fabric._key_value_store_replica.EndClose(long,long)
  - system.fabric._key_value_store_replica.EndOpen(long,long)
  - system.fabric._key_value_store_replica.EndRestore(long,long)
  - system.fabric._key_value_store_replica.Enumerate(long,long)
  - system.fabric._key_value_store_replica.EnumerateByKey(long,long,String,boolean)
  - system.fabric._key_value_store_replica.EnumerateMetadata(long,long)
  - system.fabric._key_value_store_replica.EnumerateMetadataByKey(long,long,String,boolean)
  - system.fabric._key_value_store_replica.Get(long,long,String)
  - system.fabric._key_value_store_replica.GetCurrentEpoch(long)
  - system.fabric._key_value_store_replica.GetMetadata(long,long,String)
  - system.fabric._key_value_store_replica.Remove(long,long,String,long)
  - system.fabric._key_value_store_replica.TryAdd(long,long,String,long,byte[])
  - system.fabric._key_value_store_replica.TryGet(long,long,String)
  - system.fabric._key_value_store_replica.TryGetMetadata(long,long,String)
  - system.fabric._key_value_store_replica.TryRemove(long,long,String,long)
  - system.fabric._key_value_store_replica.TryUpdate(long,long,String,long,byte[],long)
  - system.fabric._key_value_store_replica.Update(long,long,String,long,byte[],long)
  - system.fabric._key_value_store_replica.UpdateReplicatorSettings(long,long)
- uid: system.fabric._key_value_store_replica.abort()
  id: abort()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: abort()
  fullName: void system.fabric.KeyValueStoreReplica.abort()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1199
  package: system.fabric
  summary: <p>Aborts this instance of the <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref> class. </p>
  syntax:
    content: public void abort()
  overridden: system.fabric._stateful_service_replica.abort()
- uid: system.fabric._key_value_store_replica.add(TransactionBase,String,byte[])
  id: add(TransactionBase,String,byte[])
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: add(TransactionBase transactionBase, String key, byte[] value)
  fullName: void system.fabric.KeyValueStoreReplica.add(TransactionBase transactionBase, String key, byte[] value)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 361
  package: system.fabric
  summary: >-
    <p>Adds a value indexed by the specified key to the key/value store.</p>

    <p></p>
  syntax:
    content: public void add(TransactionBase transactionBase, String key, byte[] value)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key or index of the value to be added (as a string). Limited to 800 characters in length. </p>
    - id: value
      type: bc819c2f
      description: <p>The value (as a byte array) to be stored, limited to 2GB in length. </p>
- uid: system.fabric._key_value_store_replica.backupAsync(String,StoreBackupOption,Function<StoreBackupInfo, CompletableFuture<Boolean>>)
  id: backupAsync(String,StoreBackupOption,Function<StoreBackupInfo, CompletableFuture<Boolean>>)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: backupAsync(String backupDirectory, StoreBackupOption backupOption, Function<StoreBackupInfo, CompletableFuture<Boolean>> postBackupAsyncFunc)
  fullName: CompletableFuture<?> system.fabric.KeyValueStoreReplica.backupAsync(String backupDirectory, StoreBackupOption backupOption, Function<StoreBackupInfo, CompletableFuture<Boolean>> postBackupAsyncFunc)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 909
  package: system.fabric
  summary: >-
    <p>Asynchronously creates a backup of the key-value store.</p>

    <p>

      <bold>Remarks:</bold> The <bold>postBackupAsyncFunc</bold> is not invoked if there is an error during backup. Also, it is not invoked when <bold>backupOption</bold> is <xref href="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()" data-throw-if-not-resolved="false"></xref> since there is no further action needed from the user in this case to complete a single backup cycle. </p>
  syntax:
    content: public CompletableFuture<?> backupAsync(String backupDirectory, StoreBackupOption backupOption, Function<StoreBackupInfo, CompletableFuture<Boolean>> postBackupAsyncFunc)
    parameters:
    - id: backupDirectory
      type: "26831127"
      description: <p>The directory where the backup is to be stored. If <bold>backupOption</bold> is <xref href="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()" data-throw-if-not-resolved="false"></xref>, then this parameter should be null. Otherwise, this parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. If the directory doesn't exist, it is created. If it exists and isn't empty, then incremental backup fails with <xref href="system.fabric.exception._fabric_backup_directory_not_empty_exception" data-throw-if-not-resolved="false"></xref>. </p>
    - id: backupOption
      type: system.fabric._store_backup_option
      description: <p>The backup option. </p>
    - id: postBackupAsyncFunc
      type: 432ffe41system.fabric._store_backup_info774bd4f0
      description: <p>The post backup asynchronous method that is invoked by Windows Fabric to allow the user to complete any post backup activity before returning control to the system. If <bold>null</bold> is passed in for this, incremental backups are disallowed. If the post-backup method returns false, then again, incremental backups are disallowed. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous backup operation. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>backupDirectory is <bold>null</bold> when backupOption is not <xref href="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()" data-throw-if-not-resolved="false"></xref>. </p>
  - type: 3c87bd19
    description: <p>backupDirectory is empty or contains just whitespaces when backupOption is not <xref href="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()" data-throw-if-not-resolved="false"></xref> or backupDirectory is not <bold>null</bold> when backupOption is <xref href="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()" data-throw-if-not-resolved="false"></xref>. </p>
  - type: system.fabric.exception._fabric_backup_directory_not_empty_exception
    description: <p>When backupOption is <xref href="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL()" data-throw-if-not-resolved="false"></xref> and the backup directory already contains files or sub-directories. </p>
  - type: system.fabric.exception._fabric_backup_in_progress_exception
    description: <p>When a previously initiated backup is currently in progress. </p>
- uid: system.fabric._key_value_store_replica.changeRoleAsync(ReplicaRole)
  id: changeRoleAsync(ReplicaRole)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: changeRoleAsync(ReplicaRole newRole)
  fullName: CompletableFuture<String> system.fabric.KeyValueStoreReplica.changeRoleAsync(ReplicaRole newRole)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1121
  package: system.fabric
  summary: >-
    <p>Changes the replica role of the replica and its replicator.</p>

    <p>

      <bold>Remarks:</bold>This method does not need to be called explicitly if the application replica derives from <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref>, which is the recommended pattern. In this case, the application replica should override <xref href="system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole)" data-throw-if-not-resolved="false"></xref> instead. </p>
  syntax:
    content: public CompletableFuture<String> changeRoleAsync(ReplicaRole newRole)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>The target replica role. </p>
    return:
      type: 06be942d
      description: <p>A task whose result is the address of this replica. </p>
  overridden: system.fabric._stateful_service_replica.changeRoleAsync(ReplicaRole)
- uid: system.fabric._key_value_store_replica.closeAsync()
  id: closeAsync()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: closeAsync()
  fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.closeAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1169
  package: system.fabric
  summary: >-
    <p>Closes the replica and its replicator in preparation for going offline from a replica set. Currently unused. Reserved for future use.</p>

    <p>

      <bold>Remarks:</bold>The replica has not necessarily been removed permanently from the replica set and may be re-opened at a later time. The most common causes for closing a replica is graceful shutdown in preparation for upgrade or load balancing. This method does not need to be called explicitly if the application replica derives from <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref>, which is the recommended pattern. In this case, the application replica should override <xref href="system.fabric._key_value_store_replica.onCloseAsync()" data-throw-if-not-resolved="false"></xref> instead. </p>
  syntax:
    content: public CompletableFuture<Void> closeAsync()
    return:
      type: db03ee24
      description: <p>A task that represents the asynchronous operation. </p>
  overridden: system.fabric._stateful_service_replica.closeAsync()
- uid: system.fabric._key_value_store_replica.contains(TransactionBase,String)
  id: contains(TransactionBase,String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: contains(TransactionBase transactionBase, String key)
  fullName: boolean system.fabric.KeyValueStoreReplica.contains(TransactionBase transactionBase, String key)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 703
  package: system.fabric
  summary: >-
    <p>Determines a flag that indicates whether a value is contained in the key/value store.</p>

    <p></p>
  syntax:
    content: public boolean contains(TransactionBase transactionBase, String key)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key or index of the value to look up (as a string). Limited to 800 characters in length. </p>
    return:
      type: 4fc6e284
      description: <p>true if the value is contained in the key/value store; false, otherwise. </p>
- uid: system.fabric._key_value_store_replica.createTransaction()
  id: createTransaction()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: createTransaction()
  fullName: Transaction system.fabric.KeyValueStoreReplica.createTransaction()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 318
  package: system.fabric
  summary: >-
    <p>Creates a unique <xref href="system.fabric._transaction" data-throw-if-not-resolved="false"></xref> instance, which is used to commit or rollback groups of key/value store operations.</p>

    <p></p>
  syntax:
    content: public Transaction createTransaction()
    return:
      type: system.fabric._transaction
      description: <p>A <xref href="system.fabric._transaction" data-throw-if-not-resolved="false"></xref> object representing a transaction. </p>
- uid: system.fabric._key_value_store_replica.createTransaction(KeyValueStoreTransactionSettings)
  id: createTransaction(KeyValueStoreTransactionSettings)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: createTransaction(KeyValueStoreTransactionSettings settings)
  fullName: Transaction system.fabric.KeyValueStoreReplica.createTransaction(KeyValueStoreTransactionSettings settings)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 338
  package: system.fabric
  summary: >-
    <p>Creates a unique <xref href="system.fabric._transaction" data-throw-if-not-resolved="false"></xref> instance, which is used to commit or rollback groups of key/value store operations.</p>

    <p></p>
  syntax:
    content: public Transaction createTransaction(KeyValueStoreTransactionSettings settings)
    parameters:
    - id: settings
      type: system.fabric._key_value_store_transaction_settings
      description: <p>The transaction settings. </p>
    return:
      type: system.fabric._transaction
      description: <p>A <xref href="system.fabric._transaction" data-throw-if-not-resolved="false"></xref> object representing a transaction. </p>
- uid: system.fabric._key_value_store_replica.enumerate(TransactionBase)
  id: enumerate(TransactionBase)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: enumerate(TransactionBase transactionBase)
  fullName: Enumeration<KeyValueStoreItem> system.fabric.KeyValueStoreReplica.enumerate(TransactionBase transactionBase)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 722
  package: system.fabric
  summary: >-
    <p>Returns an enumerator that iterates through the <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> values in the key/value store.</p>

    <p></p>
  syntax:
    content: public Enumeration<KeyValueStoreItem> enumerate(TransactionBase transactionBase)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    return:
      type: 29771a6asystem.fabric._key_value_store_itema08ddfce
      description: <p>A <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> enumerator. </p>
- uid: system.fabric._key_value_store_replica.enumerate(TransactionBase,String)
  id: enumerate(TransactionBase,String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: enumerate(TransactionBase transactionBase, String keyPrefix)
  fullName: Enumeration<KeyValueStoreItem> system.fabric.KeyValueStoreReplica.enumerate(TransactionBase transactionBase, String keyPrefix)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 744
  package: system.fabric
  summary: >-
    <p>Returns an enumerator that iterates through the <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> values in the key/value store, where the value keys match the specified key prefix.</p>

    <p></p>
  syntax:
    content: public Enumeration<KeyValueStoreItem> enumerate(TransactionBase transactionBase, String keyPrefix)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: keyPrefix
      type: "26831127"
      description: <p>The key, or index, prefix to match (as a string). Limited to 800 characters in length. </p>
    return:
      type: 29771a6asystem.fabric._key_value_store_itema08ddfce
      description: <p>A <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> enumerator. </p>
- uid: system.fabric._key_value_store_replica.enumerate(TransactionBase,String,boolean)
  id: enumerate(TransactionBase,String,boolean)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: enumerate(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)
  fullName: Enumeration<KeyValueStoreItem> system.fabric.KeyValueStoreReplica.enumerate(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 770
  package: system.fabric
  summary: >-
    <p>Returns an enumerator that iterates through the <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> values in the key/value store.</p>

    <p></p>
  syntax:
    content: public Enumeration<KeyValueStoreItem> enumerate(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: keyPrefix
      type: "26831127"
      description: <p>The key, or index, prefix to match (as a string). Limited to 800 characters in length. </p>
    - id: strictPrefix
      type: 4fc6e284
      description: <p>When true, only keys prefixed by the value specified for "keyPrefix" are returned. Otherwise, enumeration starts at the first key matching or lexicographically greater than "keyPrefix" and continues until there are no more rows. The default is true. </p>
    return:
      type: 29771a6asystem.fabric._key_value_store_itema08ddfce
      description: <p>A <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> enumerator. </p>
- uid: system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase)
  id: enumerateMetadata(TransactionBase)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: enumerateMetadata(TransactionBase transactionBase)
  fullName: Enumeration<KeyValueStoreItemMetadata> system.fabric.KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 796
  package: system.fabric
  summary: >-
    <p>Returns an enumerator that iterates through the <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> values in the key/value store.</p>

    <p></p>
  syntax:
    content: public Enumeration<KeyValueStoreItemMetadata> enumerateMetadata(TransactionBase transactionBase)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    return:
      type: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
      description: <p>A <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> enumerator. </p>
- uid: system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String)
  id: enumerateMetadata(TransactionBase,String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: enumerateMetadata(TransactionBase transactionBase, String keyPrefix)
  fullName: Enumeration<KeyValueStoreItemMetadata> system.fabric.KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase, String keyPrefix)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 819
  package: system.fabric
  summary: >-
    <p>Returns an enumerator that iterates through the <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> values in the key/value store, where the value keys match the specified key prefix.</p>

    <p></p>
  syntax:
    content: public Enumeration<KeyValueStoreItemMetadata> enumerateMetadata(TransactionBase transactionBase, String keyPrefix)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: keyPrefix
      type: "26831127"
      description: <p>The key, or index, prefix to match (as a string). Limited to 800 characters in length. </p>
    return:
      type: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
      description: <p>A <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> enumerator. </p>
- uid: system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String,boolean)
  id: enumerateMetadata(TransactionBase,String,boolean)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: enumerateMetadata(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)
  fullName: Enumeration<KeyValueStoreItemMetadata> system.fabric.KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 849
  package: system.fabric
  summary: >-
    <p>Returns an enumerator that iterates through the <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> values in the key/value store.</p>

    <p></p>
  syntax:
    content: public Enumeration<KeyValueStoreItemMetadata> enumerateMetadata(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: keyPrefix
      type: "26831127"
      description: <p>The key, or index, prefix to match (as a string). Limited to 800 characters in length. </p>
    - id: strictPrefix
      type: 4fc6e284
      description: <p>When true, only keys prefixed by the value specified for "keyPrefix" are returned. Otherwise, enumeration starts at the first key matching or lexicographically greater than "keyPrefix" and continues until there are no more rows. The default is true. </p>
    return:
      type: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
      description: <p>A <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> enumerator. </p>
- uid: system.fabric._key_value_store_replica.get(TransactionBase,String)
  id: get(TransactionBase,String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: get(TransactionBase transactionBase, String key)
  fullName: KeyValueStoreItem system.fabric.KeyValueStoreReplica.get(TransactionBase transactionBase, String key)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 574
  package: system.fabric
  summary: >-
    <p>Gets the stored value, as a <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> object, associated with the specified key.</p>

    <p></p>
  syntax:
    content: public KeyValueStoreItem get(TransactionBase transactionBase, String key)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key or index of the value to be retrieved (as a string). Limited to 800 characters in length. </p>
    return:
      type: system.fabric._key_value_store_item
      description: <p>A <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> object representing the stored value. </p>
- uid: system.fabric._key_value_store_replica.getCurrentEpoch()
  id: getCurrentEpoch()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: getCurrentEpoch()
  fullName: Epoch system.fabric.KeyValueStoreReplica.getCurrentEpoch()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 281
  package: system.fabric
  summary: >-
    <p>Gets the current epoch for the key/value store.</p>

    <p></p>
  syntax:
    content: public Epoch getCurrentEpoch()
    return:
      type: system.fabric._epoch
      description: <p>The current epoch for the key/value store. </p>
- uid: system.fabric._key_value_store_replica.getDataLossHandler()
  id: getDataLossHandler()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: getDataLossHandler()
  fullName: Observable system.fabric.KeyValueStoreReplica.getDataLossHandler()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 271
  package: system.fabric
  syntax:
    content: public Observable getDataLossHandler()
    return:
      type: system.fabric._observable
- uid: system.fabric._key_value_store_replica.getMetadata(TransactionBase,String)
  id: getMetadata(TransactionBase,String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: getMetadata(TransactionBase transactionBase, String key)
  fullName: KeyValueStoreItemMetadata system.fabric.KeyValueStoreReplica.getMetadata(TransactionBase transactionBase, String key)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 661
  package: system.fabric
  summary: >-
    <p>Gets the metadata, as a <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> object, for the value associated with the specified key.</p>

    <p></p>
  syntax:
    content: public KeyValueStoreItemMetadata getMetadata(TransactionBase transactionBase, String key)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key or index of the value to be retrieved (as a string). Limited to 800 characters in length. </p>
    return:
      type: system.fabric._key_value_store_item_metadata
      description: <p>A <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> object representing the metadata associated with the specified value. </p>
- uid: system.fabric._key_value_store_replica.getReplicatorSettings()
  id: getReplicatorSettings()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: getReplicatorSettings()
  fullName: ReplicatorSettings system.fabric.KeyValueStoreReplica.getReplicatorSettings()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1407
  package: system.fabric
  summary: >-
    <p>Gets the option settings for the key/value store replicator.</p>

    <p></p>
  syntax:
    content: public ReplicatorSettings getReplicatorSettings()
    return:
      type: system.fabric._replicator_settings
      description: <p>The store replicator option settings. </p>
- uid: system.fabric._key_value_store_replica.getStoreName()
  id: getStoreName()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: getStoreName()
  fullName: String system.fabric.KeyValueStoreReplica.getStoreName()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1358
  package: system.fabric
  summary: >-
    <p>Gets the name of the key/value store.</p>

    <p>

      <bold>Remarks:</bold>The store name should conform to valid filename characters. </p>
  syntax:
    content: public String getStoreName()
    return:
      type: "26831127"
      description: <p>The name of the key/value store. </p>
- uid: system.fabric._key_value_store_replica.getValue(TransactionBase,String)
  id: getValue(TransactionBase,String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: getValue(TransactionBase transactionBase, String key)
  fullName: byte [] system.fabric.KeyValueStoreReplica.getValue(TransactionBase transactionBase, String key)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 616
  package: system.fabric
  summary: >-
    <p>Gets the stored value as a byte array, associated with the specified key.</p>

    <p></p>
  syntax:
    content: public byte[] getValue(TransactionBase transactionBase, String key)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key or index of the value to be retrieved (as a string). Limited to 800 characters in length. </p>
    return:
      type: bc819c2f
      description: <p>A byte array representing the stored value. </p>
- uid: system.fabric._key_value_store_replica.initialize(StatefulServiceInitializationParameters)
  id: initialize(StatefulServiceInitializationParameters)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: initialize(StatefulServiceInitializationParameters initializationParameters)
  fullName: void system.fabric.KeyValueStoreReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1006
  package: system.fabric
  summary: >-
    <p>Initializes the replica in preparation for opening.</p>

    <p>

      <bold>Remarks:</bold>This method does not need to be called explicitly if the application replica derives from <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref>, which is the recommended pattern. In this case, the application replica should override <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica#onInitialize(system.fabric.StatefulServiceInitializationParameters)</ref> instead. </p>
  syntax:
    content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
    parameters:
    - id: initializationParameters
      type: system.fabric._stateful_service_initialization_parameters
      description: <p>The initialization information for the replica. </p>
  overridden: system.fabric._stateful_service_replica.initialize(StatefulServiceInitializationParameters)
- uid: system.fabric._key_value_store_replica.KeyValueStoreReplica(String)
  id: KeyValueStoreReplica(String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: KeyValueStoreReplica(String storeName)
  fullName: system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName)
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 164
  package: system.fabric
  summary: >-
    <p>Initializes a new instance of the <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref> class with the specified key/value store name.</p>

    <p>

      <bold>Remarks:</bold>The store name should conform to valid filename characters. </p>
  syntax:
    content: public KeyValueStoreReplica(String storeName)
    parameters:
    - id: storeName
      type: "26831127"
      description: <p>The name of the key/value store. </p>
- uid: system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings)
  id: KeyValueStoreReplica(String,LocalStoreSettings)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings)
  fullName: system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings)
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 177
  package: system.fabric
  summary: >-
    <p>Initializes a new instance of the <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref> class with the specified key/value store name and local store settings.</p>

    <p></p>
  syntax:
    content: public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings)
    parameters:
    - id: storeName
      type: "26831127"
      description: <p>The name of the key/value store. </p>
    - id: localStoreSettings
      type: system.fabric._local_store_settings
      description: <p>The optional settings for the local store. </p>
- uid: system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings)
  id: KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings)
  fullName: system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings)
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 208
  package: system.fabric
  summary: >-
    <p>Initializes a new instance of the <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref> class with the specified key/value store name, local store settings, and replicator settings.</p>

    <p></p>
  syntax:
    content: public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings)
    parameters:
    - id: storeName
      type: "26831127"
      description: <p>The name of the key/value store. </p>
    - id: localStoreSettings
      type: system.fabric._local_store_settings
      description: <p>The optional settings for the local store. </p>
    - id: replicatorSettings
      type: system.fabric._replicator_settings
      description: <p>The option settings for the key/value store replicator. </p>
- uid: system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,KeyValueStoreReplicaSettings)
  id: KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,KeyValueStoreReplicaSettings)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, KeyValueStoreReplicaSettings kvsSettings)
  fullName: system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, KeyValueStoreReplicaSettings kvsSettings)
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 254
  package: system.fabric
  summary: >-
    <p>Initializes a new instance of the <xref href="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false"></xref> class with the specified key/value store name, local store settings, replicator settings, and replica settings.</p>

    <p></p>
  syntax:
    content: public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, KeyValueStoreReplicaSettings kvsSettings)
    parameters:
    - id: storeName
      type: "26831127"
      description: <p>The name of the key/value store. </p>
    - id: localStoreSettings
      type: system.fabric._local_store_settings
      description: <p>The optional settings for the local store. </p>
    - id: replicatorSettings
      type: system.fabric._replicator_settings
      description: <p>The optional settings for the key/value store replicator. </p>
    - id: kvsSettings
      type: system.fabric._key_value_store_replica_settings
      description: <p>The optional settings for the key/value store replica. </p>
- uid: system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,SecondaryNotificationMode)
  id: KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,SecondaryNotificationMode)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, SecondaryNotificationMode notificationMode)
  fullName: system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, SecondaryNotificationMode notificationMode)
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 233
  package: system.fabric
  summary: >-
    <p>Initializes a new instance of the <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref> class with the specified key/value store name, local store settings, and replicator settings. Secondary replica notifications are enabled via the notification mode.</p>

    <p></p>
  syntax:
    content: public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, SecondaryNotificationMode notificationMode)
    parameters:
    - id: storeName
      type: "26831127"
      description: <p>The name of the key/value store. </p>
    - id: localStoreSettings
      type: system.fabric._local_store_settings
      description: <p>The optional settings for the local store. </p>
    - id: replicatorSettings
      type: system.fabric._replicator_settings
      description: <p>The option settings for the key/value store replicator. </p>
    - id: notificationMode
      type: system.fabric._secondary_notification_mode
      description: <p>The secondary notification mode to enable <xref href="system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)" data-throw-if-not-resolved="false"></xref> and <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</ref> callbacks on this replica. </p>
- uid: system.fabric._key_value_store_replica.KeyValueStoreReplica(String,ReplicatorSettings)
  id: KeyValueStoreReplica(String,ReplicatorSettings)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: KeyValueStoreReplica(String storeName, ReplicatorSettings replicatorSettings)
  fullName: system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, ReplicatorSettings replicatorSettings)
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 193
  package: system.fabric
  summary: >-
    <p>Initializes a new instance of the <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref> class with the specified key/value store name and store replicator settings.</p>

    <p>

      <bold>Remarks:</bold>The store name should conform to valid filename characters. </p>
  syntax:
    content: public KeyValueStoreReplica(String storeName, ReplicatorSettings replicatorSettings)
    parameters:
    - id: storeName
      type: "26831127"
      description: <p>The name of the key/value store. </p>
    - id: replicatorSettings
      type: system.fabric._replicator_settings
      description: <p>The option settings for the key/value store replicator. </p>
- uid: system.fabric._key_value_store_replica.onAbort()
  id: onAbort()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: onAbort()
  fullName: void system.fabric.KeyValueStoreReplica.onAbort()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1230
  package: system.fabric
  summary: <p>Called to shut down this instance. </p>
  syntax:
    content: protected void onAbort()
- uid: system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole)
  id: onChangeRoleAsync(ReplicaRole)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: onChangeRoleAsync(ReplicaRole newRole)
  fullName: CompletableFuture<String> system.fabric.KeyValueStoreReplica.onChangeRoleAsync(ReplicaRole newRole)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1271
  package: system.fabric
  summary: <p>Indicates that this replica is changing roles. <bold>Remarks:</bold>The application replica should override this method if deriving from <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref>, which is the recommended pattern. The application replica should return a Task whose result is the address of this replica. This replica address is stored by the system as is and can be retrieved (unmodified) using ResolveServiceAsync. The application must take care to complete the role change in a timely manner since reconfiguration of the replica set will be blocked behind the completion of all outstanding change role calls.</p>
  syntax: &o3
    content: protected CompletableFuture<String> onChangeRoleAsync(ReplicaRole newRole)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>The target role. </p>
    return:
      type: 06be942d
      description: <p>A task whose result is the resolvable address of this replica.. </p>
- uid: system.fabric._key_value_store_replica.onCloseAsync()
  id: onCloseAsync()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: onCloseAsync()
  fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onCloseAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1244
  package: system.fabric
  summary: <p>Called when this service replica is being shut down and needs to close. </p>
  syntax: &o4
    content: protected CompletableFuture<Void> onCloseAsync()
    return:
      type: db03ee24
      description: <p>The asynchronous operation. </p>
- uid: system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)
  id: onCopyComplete(KeyValueStoreEnumerator)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: onCopyComplete(KeyValueStoreEnumerator enumerator)
  fullName: void system.fabric.KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1218
  package: system.fabric
  summary: <p>Called by the system on secondary replicas when they have finished building from the primary and are ready to start applying replication operations. <bold>Remarks:</bold>The <xref href="system.fabric._key_value_store_enumerator" data-throw-if-not-resolved="false"></xref> object can be used to read data on the secondary within the context of this method before any replication operations are applied. The <xref href="system.fabric._key_value_store_enumerator" data-throw-if-not-resolved="false"></xref> object is no longer valid after this method returns and cannot be used outside the context of this method. The application must take care to complete this callback in a timely manner since replication operations are being queued on the secondary replica and will not start getting applied until this method returns. The <xref href="system.fabric._key_value_store_enumerator" data-throw-if-not-resolved="false"></xref> object is backed by a single underlying local transaction and is not thread-safe.</p>
  syntax: &o2
    content: protected void onCopyComplete(KeyValueStoreEnumerator enumerator)
    parameters:
    - id: enumerator
      type: system.fabric._key_value_store_enumerator
      description: <p>The enumerator used to read data on the secondary. </p>
- uid: system.fabric._key_value_store_replica.onDatalossReported()
  id: onDatalossReported()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: onDatalossReported()
  fullName: void system.fabric.KeyValueStoreReplica.onDatalossReported()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1209
  package: system.fabric
  summary: <p>Signals that the replica set may have experienced data loss. The application can either override this method or listen for the <xref href="system.fabric._key_value_store_replica.onDatalossReported()" data-throw-if-not-resolved="false"></xref> Event. Both represent the same event Currently contains no data. Reserved for future use. </p>
  syntax: &o5
    content: protected void onDatalossReported()
- uid: system.fabric._key_value_store_replica.onInitialize(StatefulServiceInitializationParameters)
  id: onInitialize(StatefulServiceInitializationParameters)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: onInitialize(StatefulServiceInitializationParameters parameters)
  fullName: void system.fabric.KeyValueStoreReplica.onInitialize(StatefulServiceInitializationParameters parameters)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1234
  package: system.fabric
  syntax:
    content: protected void onInitialize(StatefulServiceInitializationParameters parameters)
    parameters:
    - id: parameters
      type: system.fabric._stateful_service_initialization_parameters
- uid: system.fabric._key_value_store_replica.onOpenAsync(ReplicaOpenMode,StatefulServicePartition)
  id: onOpenAsync(ReplicaOpenMode,StatefulServicePartition)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: onOpenAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
  fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onOpenAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1258
  package: system.fabric
  summary: <p>Called on an initialized service replica to open it so that additional actions can be taken. </p>
  syntax:
    content: protected CompletableFuture<Void> onOpenAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
    parameters:
    - id: openMode
      type: system.fabric._replica_open_mode
      description: <p>A <xref href="system.fabric._replica_open_mode" data-throw-if-not-resolved="false"></xref> object specifying for this replica whether it is new or recovered. </p>
    - id: partition
      type: system.fabric._stateful_service_partition
      description: <p>A <xref href="system.fabric._stateful_service_partition" data-throw-if-not-resolved="false"></xref> object representing the stateful service partition information for this replica. </p>
    return:
      type: db03ee24
      description: <p>A <ref refid="" kindref="compound">CompletableFuture</ref> object representing the asynchronous operation. </p>
- uid: system.fabric._key_value_store_replica.onReplicationOperation(Enumeration<KeyValueStoreNotification>)
  id: onReplicationOperation(Enumeration<KeyValueStoreNotification>)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: onReplicationOperation(Enumeration<KeyValueStoreNotification> enumerator)
  fullName: void system.fabric.KeyValueStoreReplica.onReplicationOperation(Enumeration<KeyValueStoreNotification> enumerator)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1227
  package: system.fabric
  summary: <p>Called by the system on secondary replicas for incoming replication operations. Each <xref href="system.fabric._key_value_store_notification" data-throw-if-not-resolved="false"></xref> object contains all the data for a single atomic replication operation. <bold>Remarks:</bold> If the BlockSecondaryAck mode was specified, then the incoming replication operation is not applied locally on the secondary replica and acknowledged to the primary until the method returns. This implies that the application must take care to return from this method in a timely manner to avoiding blocking the replication stream. Since the acknowledgment is not sent to the primary until this method returns, it cannot be assumed that the observed replication operation has already been (or is guaranteed to be in the future) applied by a quorum of replicas in the replica set. If the NonBlockingQuorumAcked mode was specified, then the observed replication operation is guaranteed to have already been applied by a quorum of replicas in the replica set. Furthermore, the observed replication operation may have already been applied locally by this secondary and acknowledged to the primary at the time the method is invoked by the system. The method callback will not block the replication stream in this mode, but it will still block the replication operation notification stream. That is, there will only be one outstanding OnReplicationOperation method callback at any given time.</p>
  syntax:
    content: protected void onReplicationOperation(Enumeration<KeyValueStoreNotification> enumerator)
    parameters:
    - id: enumerator
      type: 29771a6asystem.fabric._key_value_store_notificationa08ddfce
      description: <p>The enumerator used to read the data in this replication operation. </p>
- uid: system.fabric._key_value_store_replica.openAsync(ReplicaOpenMode,StatefulServicePartition)
  id: openAsync(ReplicaOpenMode,StatefulServicePartition)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
  fullName: CompletableFuture<Replicator> system.fabric.KeyValueStoreReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1068
  package: system.fabric
  summary: >-
    <p>Opens the replica and its replicator in preparation for coming online in a replica set.</p>

    <p>

      <bold>Remarks:</bold>This method does not need to be called explicitly if the application replica derives from <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref>, which is the recommended pattern. In this case, the application replica should override OnOpenAsync instead. </p>
  syntax:
    content: public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
    parameters:
    - id: openMode
      type: system.fabric._replica_open_mode
      description: <p>Specifies the context under which this replica is begin opened. </p>
    - id: partition
      type: system.fabric._stateful_service_partition
      description: <p>Contains information describing the replica set to which this replica belongs. </p>
    return:
      type: 9cdf14d0system.fabric._replicatora08ddfce
      description: <p>A CompletableFuture to indicate completion of the open <ref refid="" kindref="compound">java.util.concurrent.CompletableFuture</ref>. </p>
  overridden: system.fabric._stateful_service_replica.openAsync(ReplicaOpenMode,StatefulServicePartition)
- uid: system.fabric._key_value_store_replica.remove(TransactionBase,String)
  id: remove(TransactionBase,String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: remove(TransactionBase transactionBase, String key)
  fullName: void system.fabric.KeyValueStoreReplica.remove(TransactionBase transactionBase, String key)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 405
  package: system.fabric
  summary: >-
    <p>Removes the stored value associated with the specified key.</p>

    <p></p>
  syntax:
    content: public void remove(TransactionBase transactionBase, String key)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key, or index, of the value to be removed (as a string). Limited to 800 characters in length. </p>
- uid: system.fabric._key_value_store_replica.remove(TransactionBase,String,long)
  id: remove(TransactionBase,String,long)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: remove(TransactionBase transactionBase, String key, long checkSequenceNumber)
  fullName: void system.fabric.KeyValueStoreReplica.remove(TransactionBase transactionBase, String key, long checkSequenceNumber)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 435
  package: system.fabric
  summary: >-
    <p>Attempts to remove the stored value associated with the specified key.</p>

    <p></p>
  syntax:
    content: public void remove(TransactionBase transactionBase, String key, long checkSequenceNumber)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key, or index, of the value to be removed (as a string). Limited to 800 characters in length. </p>
    - id: checkSequenceNumber
      type: 0364520f
      description: <p>The current sequence number of the key to be removed. </p>
- uid: system.fabric._key_value_store_replica.restoreAsync(String)
  id: restoreAsync(String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: restoreAsync(String backupDirectory)
  fullName: CompletableFuture<?> system.fabric.KeyValueStoreReplica.restoreAsync(String backupDirectory)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 963
  package: system.fabric
  summary: >-
    <p>Asynchronously restores the key-value store replica.</p>

    <p>

      <bold>Remarks:</bold> It is recommended to not perform any write operations to the key-value store while restore is underway since the updated data would be lost when the store is restored from the files in backupDirectory. </p>
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupDirectory)
    parameters:
    - id: backupDirectory
      type: "26831127"
      description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous restore operation. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>backupDirectory is <bold>null</bold>. </p>
  - type: 3c87bd19
    description: <p>backupDirectory is empty or contains just whitespaces. </p>
- uid: system.fabric._key_value_store_replica.restoreAsync(String,RestoreSettings)
  id: restoreAsync(String,RestoreSettings)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: restoreAsync(String backupDirectory, RestoreSettings settings)
  fullName: CompletableFuture<?> system.fabric.KeyValueStoreReplica.restoreAsync(String backupDirectory, RestoreSettings settings)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 968
  package: system.fabric
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupDirectory, RestoreSettings settings)
    parameters:
    - id: backupDirectory
      type: "26831127"
    - id: settings
      type: system.fabric._restore_settings
    return:
      type: 16409f84
- uid: system.fabric._key_value_store_replica.serviceCloseAsync()
  id: serviceCloseAsync()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: serviceCloseAsync()
  fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.serviceCloseAsync()
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1236
  package: system.fabric
  syntax:
    content: protected CompletableFuture<Void> serviceCloseAsync()
    return:
      type: db03ee24
- uid: system.fabric._key_value_store_replica.setReplicatorSettings(ReplicatorSettings)
  id: setReplicatorSettings(ReplicatorSettings)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: setReplicatorSettings(ReplicatorSettings replicatorSettings)
  fullName: void system.fabric.KeyValueStoreReplica.setReplicatorSettings(ReplicatorSettings replicatorSettings)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 1415
  package: system.fabric
  summary: >-
    <p>Sets the option settings for the key/value store replicator.</p>

    <p></p>
  syntax:
    content: public void setReplicatorSettings(ReplicatorSettings replicatorSettings)
    parameters:
    - id: replicatorSettings
      type: system.fabric._replicator_settings
      description: <p>The store replicator option settings. </p>
- uid: system.fabric._key_value_store_replica.tryAdd(TransactionBase,String,byte[])
  id: tryAdd(TransactionBase,String,byte[])
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: tryAdd(TransactionBase transactionBase, String key, byte[] value)
  fullName: boolean system.fabric.KeyValueStoreReplica.tryAdd(TransactionBase transactionBase, String key, byte[] value)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 385
  package: system.fabric
  summary: >-
    <p>Attempts to add a value indexed by the specified key to the key/value store.</p>

    <p></p>
  syntax:
    content: public boolean tryAdd(TransactionBase transactionBase, String key, byte[] value)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key, or index, of the value to be removed (as a string). Limited to 800 characters in length. </p>
    - id: value
      type: bc819c2f
      description: <p>The value (as a byte array) to be stored, limited to 2GB in length. </p>
    return:
      type: 4fc6e284
      description: <p>True if the specified key was not already found and added. False if the specified key already exists. </p>
- uid: system.fabric._key_value_store_replica.tryGet(TransactionBase,String)
  id: tryGet(TransactionBase,String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: tryGet(TransactionBase transactionBase, String key)
  fullName: KeyValueStoreItem system.fabric.KeyValueStoreReplica.tryGet(TransactionBase transactionBase, String key)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 596
  package: system.fabric
  summary: >-
    <p>Attempts to get the stored value, as a <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> object, associated with the specified key.</p>

    <p></p>
  syntax:
    content: public KeyValueStoreItem tryGet(TransactionBase transactionBase, String key)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key, or index, of the value to be removed (as a string). Limited to 800 characters in length. </p>
    return:
      type: system.fabric._key_value_store_item
      description: <p>A <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> object representing the stored value or null if the specified key does not exist. </p>
- uid: system.fabric._key_value_store_replica.tryGetMetadata(TransactionBase,String)
  id: tryGetMetadata(TransactionBase,String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: tryGetMetadata(TransactionBase transactionBase, String key)
  fullName: KeyValueStoreItemMetadata system.fabric.KeyValueStoreReplica.tryGetMetadata(TransactionBase transactionBase, String key)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 683
  package: system.fabric
  summary: >-
    <p>Attempts to get the metadata as a <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> object, for the value associated with the specified key.</p>

    <p></p>
  syntax:
    content: public KeyValueStoreItemMetadata tryGetMetadata(TransactionBase transactionBase, String key)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key, or index, of the value to be removed (as a string). Limited to 800 characters in length. </p>
    return:
      type: system.fabric._key_value_store_item_metadata
      description: <p>A <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> object representing the metadata associated with the specified value or null if the specified key does not exist. </p>
- uid: system.fabric._key_value_store_replica.tryGetValue(TransactionBase,String)
  id: tryGetValue(TransactionBase,String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: tryGetValue(TransactionBase transactionBase, String key)
  fullName: byte [] system.fabric.KeyValueStoreReplica.tryGetValue(TransactionBase transactionBase, String key)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 637
  package: system.fabric
  summary: >-
    <p>Attempts to get the stored value as a byte array, associated with the specified key.</p>

    <p></p>
  syntax:
    content: public byte[] tryGetValue(TransactionBase transactionBase, String key)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key, or index, of the value to be removed (as a string). Limited to 800 characters in length. </p>
    return:
      type: bc819c2f
      description: <p>A byte array representing the stored value or null if the specified key does not exist. </p>
- uid: system.fabric._key_value_store_replica.tryRemove(TransactionBase,String)
  id: tryRemove(TransactionBase,String)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: tryRemove(TransactionBase transactionBase, String key)
  fullName: boolean system.fabric.KeyValueStoreReplica.tryRemove(TransactionBase transactionBase, String key)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 420
  package: system.fabric
  summary: >-
    <p>Attempts to remove the stored value associated with the specified key.</p>

    <p></p>
  syntax:
    content: public boolean tryRemove(TransactionBase transactionBase, String key)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key, or index, of the value to be removed (as a string). Limited to 800 characters in length. </p>
    return:
      type: 4fc6e284
      description: <p>True if the specified key was found and removed. False if the specified key does not exist. </p>
- uid: system.fabric._key_value_store_replica.tryRemove(TransactionBase,String,long)
  id: tryRemove(TransactionBase,String,long)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: tryRemove(TransactionBase transactionBase, String key, long checkSequenceNumber)
  fullName: boolean system.fabric.KeyValueStoreReplica.tryRemove(TransactionBase transactionBase, String key, long checkSequenceNumber)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 458
  package: system.fabric
  summary: >-
    <p>Attempts to remove the stored value associated with the specified key.</p>

    <p></p>
  syntax:
    content: public boolean tryRemove(TransactionBase transactionBase, String key, long checkSequenceNumber)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key, or index, of the value to be removed (as a string). Limited to 800 characters in length. </p>
    - id: checkSequenceNumber
      type: 0364520f
      description: <p>The current sequence number of the key to be removed. </p>
    return:
      type: 4fc6e284
      description: <p>True if the specified key was found and removed. False if the specified key does not exist. </p>
- uid: system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte[])
  id: tryUpdate(TransactionBase,String,byte[])
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: tryUpdate(TransactionBase transactionBase, String key, byte[] value)
  fullName: boolean system.fabric.KeyValueStoreReplica.tryUpdate(TransactionBase transactionBase, String key, byte[] value)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 527
  package: system.fabric
  summary: >-
    <p>Attempts to update the stored value associated with the specified key.</p>

    <p></p>
  syntax:
    content: public boolean tryUpdate(TransactionBase transactionBase, String key, byte[] value)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key, or index, of the value to be removed (as a string). Limited to 800 characters in length. </p>
    - id: value
      type: bc819c2f
      description: <p>The value (as a byte array) to be stored, limited to 2GB in length. </p>
    return:
      type: 4fc6e284
      description: <p>boolean True if the specified key was found and updated. False if the specified key does not exist. </p>
- uid: system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte[],long)
  id: tryUpdate(TransactionBase,String,byte[],long)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: tryUpdate(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)
  fullName: boolean system.fabric.KeyValueStoreReplica.tryUpdate(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 546
  package: system.fabric
  summary: >-
    <p>Attempts to update the stored value associated with the specified key.</p>

    <p></p>
  syntax:
    content: public boolean tryUpdate(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key, or index, of the value to be removed (as a string). Limited to 800 characters in length. </p>
    - id: value
      type: bc819c2f
      description: <p>The value (as a byte array) to be stored, limited to 2GB in length. </p>
    - id: checkSequenceNumber
      type: 0364520f
      description: <p>The current sequence number of the key to be removed. </p>
    return:
      type: 4fc6e284
      description: <p>True if the specified key was found and updated. False if the specified key does not exist. </p>
- uid: system.fabric._key_value_store_replica.update(TransactionBase,String,byte[])
  id: update(TransactionBase,String,byte[])
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: update(TransactionBase transactionBase, String key, byte[] value)
  fullName: void system.fabric.KeyValueStoreReplica.update(TransactionBase transactionBase, String key, byte[] value)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 480
  package: system.fabric
  summary: >-
    <p>Updates the stored value associated with the specified key.</p>

    <p></p>
  syntax:
    content: public void update(TransactionBase transactionBase, String key, byte[] value)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key or index of the value to be updated (as a string). Limited to 800 characters in length. </p>
    - id: value
      type: bc819c2f
      description: <p>The value (as a byte array) to be stored, limited to 2GB in length. </p>
- uid: system.fabric._key_value_store_replica.update(TransactionBase,String,byte[],long)
  id: update(TransactionBase,String,byte[],long)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: update(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)
  fullName: void system.fabric.KeyValueStoreReplica.update(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 497
  package: system.fabric
  summary: >-
    <p>Updates the stored value associated with the specified key.</p>

    <p></p>
  syntax:
    content: public void update(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)
    parameters:
    - id: transactionBase
      type: system.fabric._transaction_base
      description: <p>The transaction instance. </p>
    - id: key
      type: "26831127"
      description: <p>The key or index of the value to be updated (as a string). Limited to 800 characters in length. </p>
    - id: value
      type: bc819c2f
      description: <p>The value (as a byte array) to be stored, limited to 2GB in length. </p>
    - id: checkSequenceNumber
      type: 0364520f
      description: <p>long value </p>
- uid: system.fabric._key_value_store_replica.updateReplicatorSettings(ReplicatorSettings)
  id: updateReplicatorSettings(ReplicatorSettings)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  langs:
  - java
  name: updateReplicatorSettings(ReplicatorSettings replicatorSettings)
  fullName: void system.fabric.KeyValueStoreReplica.updateReplicatorSettings(ReplicatorSettings replicatorSettings)
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
    startLine: 298
  package: system.fabric
  summary: >-
    <p>Updates the key/value store replicator with the settings in the specified <xref href="system.fabric._replicator_settings" data-throw-if-not-resolved="false"></xref> object.</p>

    <p></p>
  syntax:
    content: public void updateReplicatorSettings(ReplicatorSettings replicatorSettings)
    parameters:
    - id: replicatorSettings
      type: system.fabric._replicator_settings
      description: <p>The settings used to update the key/value store replicator. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: bc819c2f
  spec.java:
  - name: byte[]
    fullName: byte[]
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: 29771a6asystem.fabric._key_value_store_itema08ddfce
  spec.java:
  - name: Enumeration<
    fullName: Enumeration<
  - uid: system.fabric._key_value_store_item
    name: KeyValueStoreItem
    fullName: system.fabric.KeyValueStoreItem
    href: system.fabric._key_value_store_item.yml
  - name: '>'
    fullName: '>'
- uid: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
  spec.java:
  - name: Enumeration<
    fullName: Enumeration<
  - uid: system.fabric._key_value_store_item_metadata
    name: KeyValueStoreItemMetadata
    fullName: system.fabric.KeyValueStoreItemMetadata
    href: system.fabric._key_value_store_item_metadata.yml
  - name: '>'
    fullName: '>'
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 432ffe41system.fabric._store_backup_info774bd4f0
  spec.java:
  - name: Function<
    fullName: Function<
  - uid: system.fabric._store_backup_info
    name: StoreBackupInfo
    fullName: system.fabric.StoreBackupInfo
    href: system.fabric._store_backup_info.yml
  - name: ', CompletableFuture<Boolean>>'
    fullName: ', CompletableFuture<Boolean>>'
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: 9cdf14d0system.fabric._replicatora08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: system.fabric._replicator
    name: Replicator
    fullName: system.fabric.Replicator
    href: system.fabric._replicator.yml
  - name: '>'
    fullName: '>'
- uid: 06be942d
  spec.java:
  - name: CompletableFuture<String>
    fullName: CompletableFuture<String>
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: 29771a6asystem.fabric._key_value_store_notificationa08ddfce
  spec.java:
  - name: Enumeration<
    fullName: Enumeration<
  - uid: system.fabric._key_value_store_notification
    name: KeyValueStoreNotification
    fullName: system.fabric.KeyValueStoreNotification
    href: system.fabric._key_value_store_notification.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric._key_value_store_replica.Abort(long)
- uid: system.fabric._key_value_store_replica.Add(long,long,String,long,byte[])
- uid: system.fabric._key_value_store_replica.BeginBackup(long,String,int,KeyValueStorePostBackupHandlerBroker,NativeAsyncCallback)
- uid: system.fabric._key_value_store_replica.BeginChangeRole(long,int,NativeAsyncCallback)
- uid: system.fabric._key_value_store_replica.BeginClose(long,NativeAsyncCallback)
- uid: system.fabric._key_value_store_replica.BeginOpen(long,int,long,NativeAsyncCallback)
- uid: system.fabric._key_value_store_replica.BeginRestore2(long,String,long,NativeAsyncCallback)
- uid: system.fabric._key_value_store_replica.Contains(long,long,String)
- uid: system.fabric._key_value_store_replica.CreateKeyValueStoreReplica(String,String,long,String,long,long,int,String,long,long,long,long,long,boolean,KeyValueStoreReplica,int)
- uid: system.fabric._key_value_store_replica.CreateTransaction(long)
- uid: system.fabric._key_value_store_replica.CreateTransaction2(long,long)
- uid: system.fabric._key_value_store_replica.EndBackup(long,long)
- uid: system.fabric._key_value_store_replica.EndChangeRole(long,long)
- uid: system.fabric._key_value_store_replica.EndClose(long,long)
- uid: system.fabric._key_value_store_replica.EndOpen(long,long)
- uid: system.fabric._key_value_store_replica.EndRestore(long,long)
- uid: system.fabric._key_value_store_replica.Enumerate(long,long)
- uid: system.fabric._key_value_store_replica.EnumerateByKey(long,long,String,boolean)
- uid: system.fabric._key_value_store_replica.EnumerateMetadata(long,long)
- uid: system.fabric._key_value_store_replica.EnumerateMetadataByKey(long,long,String,boolean)
- uid: system.fabric._key_value_store_replica.Get(long,long,String)
- uid: system.fabric._key_value_store_replica.GetCurrentEpoch(long)
- uid: system.fabric._key_value_store_replica.GetMetadata(long,long,String)
- uid: system.fabric._key_value_store_replica.Remove(long,long,String,long)
- uid: system.fabric._key_value_store_replica.TryAdd(long,long,String,long,byte[])
- uid: system.fabric._key_value_store_replica.TryGet(long,long,String)
- uid: system.fabric._key_value_store_replica.TryGetMetadata(long,long,String)
- uid: system.fabric._key_value_store_replica.TryRemove(long,long,String,long)
- uid: system.fabric._key_value_store_replica.TryUpdate(long,long,String,long,byte[],long)
- uid: system.fabric._key_value_store_replica.Update(long,long,String,long,byte[],long)
- uid: system.fabric._key_value_store_replica.UpdateReplicatorSettings(long,long)
- uid: system.fabric._stateful_service_replica
  parent: system.fabric
  href: system.fabric._stateful_service_replica.yml
  name: StatefulServiceReplica
  fullName: system.fabric.StatefulServiceReplica
  type: Interface
  summary: >-
    <p>Defines behavior that governs the lifecycle of a replica, such as startup, initialization, role changes, and shutdown. </p>

    <p>

      <bold>Remarks:</bold>Stateful service types must implement this interface. The logic of a stateful service type includes behavior that is invoked on Primary replicas and behavior that is invoked on Secondary replicas. If the service author wants to make use of the provided <xref href="system.fabric._fabric_replicator" data-throw-if-not-resolved="false"></xref>, then the service must also implement <xref href="system.fabric._state_provider" data-throw-if-not-resolved="false"></xref> to use the implementation of <xref href="system.fabric._state_replicator" data-throw-if-not-resolved="false"></xref> that is provided by <xref href="system.fabric._fabric_replicator" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public interface StatefulServiceReplica
- uid: system.fabric._replica_role
  parent: system.fabric
  href: system.fabric._replica_role.yml
  name: ReplicaRole
  fullName: system.fabric.ReplicaRole
  type: Enum
  syntax:
    content: public enum ReplicaRole
- uid: system.fabric._replicator_settings
  parent: system.fabric
  href: system.fabric._replicator_settings.yml
  name: ReplicatorSettings
  fullName: system.fabric.ReplicatorSettings
  type: Class
  syntax:
    content: public class ReplicatorSettings
- uid: system.fabric._local_store_settings
  parent: system.fabric
  href: system.fabric._local_store_settings.yml
  name: LocalStoreSettings
  fullName: system.fabric.LocalStoreSettings
  type: Class
  summary: <p>Represents the option settings for a local store. </p>
  syntax:
    content: public class LocalStoreSettings
- uid: system.fabric._key_value_store_replica_settings
  parent: system.fabric
  href: system.fabric._key_value_store_replica_settings.yml
  name: KeyValueStoreReplicaSettings
  fullName: system.fabric.KeyValueStoreReplicaSettings
  type: Class
  summary: <p>Represents the settings for a key/value store replica. </p>
  syntax:
    content: public class KeyValueStoreReplicaSettings
- uid: system.fabric._stateful_service_initialization_parameters
  parent: system.fabric
  href: system.fabric._stateful_service_initialization_parameters.yml
  name: StatefulServiceInitializationParameters
  fullName: system.fabric.StatefulServiceInitializationParameters
  type: Class
  syntax:
    content: public class StatefulServiceInitializationParameters
- uid: system.fabric._observable
  parent: system.fabric
  href: system.fabric._observable.yml
  name: Observable<T>
  fullName: system.fabric.Observable<T>
  type: Class
  syntax:
    content: public class Observable<T>
    typeParameters:
    - type: 8ce1ecb9
- uid: system.fabric._key_value_store_replica
  parent: system.fabric
  href: system.fabric._key_value_store_replica.yml
  name: KeyValueStoreReplica
  fullName: system.fabric.KeyValueStoreReplica
  type: Class
  summary: "<p>Provides a transactional, replicated, associative data storage to service writers â€“ ready for integration into any Service Fabric service. </p>"
  syntax: *o1
- uid: system.fabric.interop._native_async_callback
  parent: system.fabric.interop
  href: system.fabric.interop._native_async_callback.yml
  name: NativeAsyncCallback
  fullName: system.fabric.interop.NativeAsyncCallback
  type: Interface
  syntax:
    content: public interface NativeAsyncCallback
- uid: system.fabric._epoch
  parent: system.fabric
  href: system.fabric._epoch.yml
  name: Epoch
  fullName: system.fabric.Epoch
  type: Class
  summary: >-
    <p>Represents the current version of the partition in Service Fabric. </p>

    <p>

      <bold>Remarks:</bold>An <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> from the ones which were sent by the old Primary replica. The fact that the Primary has changed is not directly visible to Secondary replicas, which are usually unaffected by the failure that affected the original Primary replica. To track that the Primary replica has changed has to be communicated to the Secondary replica. This communication occurs via the <xref href="system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber)" data-throw-if-not-resolved="false"></xref> method. Most services can ignore the details of the inner fields of the <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> as it is usually sufficient to know that the <xref href="system.fabric._epoch" data-throw-if-not-resolved="false"></xref> has changed and to compare Epochs to determine relative ordering of operations and events in the system. Comparison operations are provided for this purpose.</p>
  syntax:
    content: public class Epoch
- uid: system.fabric._key_value_store_item
  parent: system.fabric
  href: system.fabric._key_value_store_item.yml
  name: KeyValueStoreItem
  fullName: system.fabric.KeyValueStoreItem
  type: Class
  summary: <p>Represents an item in the key/value store. </p>
  syntax:
    content: public class KeyValueStoreItem
- uid: system.fabric._key_value_store_item_metadata
  parent: system.fabric
  href: system.fabric._key_value_store_item_metadata.yml
  name: KeyValueStoreItemMetadata
  fullName: system.fabric.KeyValueStoreItemMetadata
  type: Class
  summary: <p>Represents the metadata that are associated with a <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> object in the Key/Value store. </p>
  syntax:
    content: public class KeyValueStoreItemMetadata
- uid: system.fabric._secondary_notification_mode
  parent: system.fabric
  href: system.fabric._secondary_notification_mode.yml
  name: SecondaryNotificationMode
  fullName: system.fabric.SecondaryNotificationMode
  type: Enum
  summary: <p>Specifies the secondary notifications on the <xref href="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false"></xref> and describes the desired behavior of <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</ref> if enabled. </p>
  syntax:
    content: public enum SecondaryNotificationMode
- uid: system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  name: onCopyComplete(KeyValueStoreEnumerator enumerator)
  fullName: void system.fabric.KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
  type: Method
  summary: <p>Called by the system on secondary replicas when they have finished building from the primary and are ready to start applying replication operations. <bold>Remarks:</bold>The <xref href="system.fabric._key_value_store_enumerator" data-throw-if-not-resolved="false"></xref> object can be used to read data on the secondary within the context of this method before any replication operations are applied. The <xref href="system.fabric._key_value_store_enumerator" data-throw-if-not-resolved="false"></xref> object is no longer valid after this method returns and cannot be used outside the context of this method. The application must take care to complete this callback in a timely manner since replication operations are being queued on the secondary replica and will not start getting applied until this method returns. The <xref href="system.fabric._key_value_store_enumerator" data-throw-if-not-resolved="false"></xref> object is backed by a single underlying local transaction and is not thread-safe.</p>
  syntax: *o2
- uid: system.fabric._transaction
  parent: system.fabric
  href: system.fabric._transaction.yml
  name: Transaction
  fullName: system.fabric.Transaction
  type: Class
  syntax:
    content: public class Transaction
- uid: system.fabric._key_value_store_transaction_settings
  parent: system.fabric
  href: system.fabric._key_value_store_transaction_settings.yml
  name: KeyValueStoreTransactionSettings
  fullName: system.fabric.KeyValueStoreTransactionSettings
  type: Class
  summary: <p>Specifies the optional settings to describe the behavior of transactions supported by <xref href="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class KeyValueStoreTransactionSettings
- uid: system.fabric._transaction_base
  parent: system.fabric
  href: system.fabric._transaction_base.yml
  name: TransactionBase
  fullName: system.fabric.TransactionBase
  type: Class
  syntax:
    content: public class TransactionBase
- uid: system.fabric._store_backup_option
  parent: system.fabric
  href: system.fabric._store_backup_option.yml
  name: StoreBackupOption
  fullName: system.fabric.StoreBackupOption
  type: Enum
  summary: <p>The backup option for the key-value store. </p>
  syntax:
    content: public enum StoreBackupOption
- uid: system.fabric._store_backup_info
  parent: system.fabric
  href: system.fabric._store_backup_info.yml
  name: StoreBackupInfo
  fullName: system.fabric.StoreBackupInfo
  type: Class
  summary: <p>Provides info about the backup created on the key-value store. </p>
  syntax:
    content: public class StoreBackupInfo
- uid: system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()
  parent: system.fabric._store_backup_option
  href: system.fabric._store_backup_option.yml
  name: FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY
  fullName: system.fabric.StoreBackupOption.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY
  type: Constructor
  summary: >-
    <p>Option to truncate the transaction logs of the key-value store without creating any backup files. </p>

    <p>

      <bold>Remarks:</bold>This is useful in avoiding creation of backup files in secondary replicas when incremental backup is turned on. If incremental backup is turned on, then disk space fills up with transaction logs of the key-value store. To prevent this, frequent backups have to be created. However, creating backups on secondary replicas may not be useful for some key-value store services. These services also have to deal with discarding the backup directory. If this option is used, it cleans up the transaction logs without creating backup files.</p>
  syntax:
    content: public FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY=(3)
- uid: system.fabric.exception._fabric_backup_directory_not_empty_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_backup_directory_not_empty_exception.yml
  name: FabricBackupDirectoryNotEmptyException
  fullName: system.fabric.exception.FabricBackupDirectoryNotEmptyException
  type: Class
  summary: <p>The exception that is thrown when the user provided backup directory is not empty. </p>
  syntax:
    content: public class FabricBackupDirectoryNotEmptyException extends FabricException
- uid: system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL()
  parent: system.fabric._store_backup_option
  href: system.fabric._store_backup_option.yml
  name: FABRIC_STORE_BACKUP_OPTION_INCREMENTAL
  fullName: system.fabric.StoreBackupOption.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL
  type: Constructor
  summary: <p>Incremental backup of the key-value store. i.e. only the log files created since the last full or incremental backup will be backed up. </p>
  syntax:
    content: public FABRIC_STORE_BACKUP_OPTION_INCREMENTAL=(2)
- uid: system.fabric.exception._fabric_backup_in_progress_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_backup_in_progress_exception.yml
  name: FabricBackupInProgressException
  fullName: system.fabric.exception.FabricBackupInProgressException
  type: Class
  summary: <p>The exception that is thrown when an attempt is made to create a backup when a previous backup is in progress. </p>
  syntax:
    content: public class FabricBackupInProgressException extends FabricException
- uid: system.fabric._restore_settings
  parent: system.fabric
  href: system.fabric._restore_settings.yml
  name: RestoreSettings
  fullName: system.fabric.RestoreSettings
  type: Class
  syntax:
    content: public class RestoreSettings
- uid: system.fabric._stateful_service_replica.initialize(StatefulServiceInitializationParameters)
  parent: system.fabric._stateful_service_replica
  href: system.fabric._stateful_service_replica.yml
  name: initialize(StatefulServiceInitializationParameters initializationParameters)
  fullName: void system.fabric.StatefulServiceReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
  type: Method
  summary: >-
    <p>Initializes a newly created service replica.</p>

    <p></p>
  syntax:
    content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
    parameters:
    - id: initializationParameters
      type: system.fabric._stateful_service_initialization_parameters
      description: <p>The <xref href="system.fabric._stateful_service_initialization_parameters" data-throw-if-not-resolved="false"></xref> for this replica. </p>
- uid: system.fabric._replicator
  parent: system.fabric
  href: system.fabric._replicator.yml
  name: Replicator
  fullName: system.fabric.Replicator
  type: Interface
  syntax:
    content: public interface Replicator
- uid: system.fabric._stateful_service_replica.openAsync(ReplicaOpenMode,StatefulServicePartition)
  parent: system.fabric._stateful_service_replica
  href: system.fabric._stateful_service_replica.yml
  name: openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
  fullName: CompletableFuture<Replicator> system.fabric.StatefulServiceReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
  type: Method
  summary: >-
    <p>Opens an initialized service replica so that additional actions can be taken.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition)
    parameters:
    - id: openMode
      type: system.fabric._replica_open_mode
      description: <p>This supports the Service Fabric infrastructure and is not meant to be used directly from your code. </p>
    - id: partition
      type: system.fabric._stateful_service_partition
      description: <p>The <xref href="system.fabric._stateful_service_partition" data-throw-if-not-resolved="false"></xref> information for this replica. </p>
    return:
      type: 9cdf14d0system.fabric._replicatora08ddfce
      description: <p>Returns <ref refid="" kindref="compound">CompletableFuture</ref>&lt;<xref href="system.fabric._replicator" data-throw-if-not-resolved="false"></xref>&gt;, the <xref href="system.fabric._replicator" data-throw-if-not-resolved="false"></xref> that is used by the stateful service. To use the Service Fabric implementation, in <xref href="system.fabric._stateful_service_replica.openAsync(ReplicaOpenMode,StatefulServicePartition)" data-throw-if-not-resolved="false"></xref> , the replica should return a <xref href="system.fabric._fabric_replicator" data-throw-if-not-resolved="false"></xref> that is obtained from <xref href="system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)" data-throw-if-not-resolved="false"></xref></p>
- uid: system.fabric._replica_open_mode
  parent: system.fabric
  href: system.fabric._replica_open_mode.yml
  name: ReplicaOpenMode
  fullName: system.fabric.ReplicaOpenMode
  type: Enum
  syntax:
    content: public enum ReplicaOpenMode
- uid: system.fabric._stateful_service_partition
  parent: system.fabric
  href: system.fabric._stateful_service_partition.yml
  name: StatefulServicePartition
  fullName: system.fabric.StatefulServicePartition
  type: Interface
  syntax:
    content: public interface StatefulServicePartition
- uid: system.fabric._stateful_service_replica.changeRoleAsync(ReplicaRole)
  parent: system.fabric._stateful_service_replica
  href: system.fabric._stateful_service_replica.yml
  name: changeRoleAsync(ReplicaRole newRole)
  fullName: CompletableFuture<String> system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole)
  type: Method
  summary: >-
    <p>Changes the role of a Primary or Secondary replica.</p>

    <p>

      <bold>Remarks:</bold>The new role is indicated as a parameter. When the service transitions to the new role, the service has a chance to update its current listening address. The listening address is the address where clients connect to it. This enables the service when it is a Primary replica to only claim some resources such as ports when communication from clients is expected. </p>
  syntax:
    content: public CompletableFuture<String> changeRoleAsync(ReplicaRole newRole)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>The updated <xref href="system.fabric._replica_role" data-throw-if-not-resolved="false"></xref> that this replica should transition to. </p>
    return:
      type: 06be942d
      description: "<p>Returns <ref refid=\"\" kindref=\"compound\">CompletableFuture</ref> of type <ref refid=\"\" kindref=\"compound\">java.lang.String</ref>, the serviceâ€™s new connection address that is to be associated with the replica via Service Fabric Naming. </p>"
- uid: system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole)
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  name: onChangeRoleAsync(ReplicaRole newRole)
  fullName: CompletableFuture<String> system.fabric.KeyValueStoreReplica.onChangeRoleAsync(ReplicaRole newRole)
  type: Method
  summary: <p>Indicates that this replica is changing roles. <bold>Remarks:</bold>The application replica should override this method if deriving from <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref>, which is the recommended pattern. The application replica should return a Task whose result is the address of this replica. This replica address is stored by the system as is and can be retrieved (unmodified) using ResolveServiceAsync. The application must take care to complete the role change in a timely manner since reconfiguration of the replica set will be blocked behind the completion of all outstanding change role calls.</p>
  syntax: *o3
- uid: system.fabric._stateful_service_replica.closeAsync()
  parent: system.fabric._stateful_service_replica
  href: system.fabric._stateful_service_replica.yml
  name: closeAsync()
  fullName: CompletableFuture<Void> system.fabric.StatefulServiceReplica.closeAsync()
  type: Method
  summary: >-
    <p>Closes the service replica when it is being shut down. Note that cancellation is advisory and that the operation might still be completed even if it is canceled.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> closeAsync()
    return:
      type: db03ee24
      description: <p>Returns <ref refid="" kindref="compound">CompletableFuture</ref>. </p>
- uid: system.fabric._key_value_store_replica.onCloseAsync()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  name: onCloseAsync()
  fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onCloseAsync()
  type: Method
  summary: <p>Called when this service replica is being shut down and needs to close. </p>
  syntax: *o4
- uid: system.fabric._stateful_service_replica.abort()
  parent: system.fabric._stateful_service_replica
  href: system.fabric._stateful_service_replica.yml
  name: abort()
  fullName: void system.fabric.StatefulServiceReplica.abort()
  type: Method
  summary: >-
    <p>Ungracefully terminates an instance. </p>

    <p>

      <bold>Remarks:</bold>Lease loss and, in response to the service, the use of <xref href="system.fabric._service_partition.reportFault(FaultType)" data-throw-if-not-resolved="false"></xref> to report a <ref refid="" kindref="compound">system.fabric.FaultType#Permanent</ref> fault are examples of ungraceful termination. When this method is invoked, the service instance should immediately release and clean up all references and return. </p>
  syntax:
    content: public void abort()
- uid: system.fabric._key_value_store_replica.onDatalossReported()
  parent: system.fabric._key_value_store_replica
  href: system.fabric._key_value_store_replica.yml
  name: onDatalossReported()
  fullName: void system.fabric.KeyValueStoreReplica.onDatalossReported()
  type: Method
  summary: <p>Signals that the replica set may have experienced data loss. The application can either override this method or listen for the <xref href="system.fabric._key_value_store_replica.onDatalossReported()" data-throw-if-not-resolved="false"></xref> Event. Both represent the same event Currently contains no data. Reserved for future use. </p>
  syntax: *o5
- uid: system.fabric._key_value_store_enumerator
  parent: system.fabric
  href: system.fabric._key_value_store_enumerator.yml
  name: KeyValueStoreEnumerator
  fullName: system.fabric.KeyValueStoreEnumerator
  type: Class
  summary: <p>Reads the local store contents of a secondary replica within the context of a copy completion callback. See <xref href="system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class KeyValueStoreEnumerator
- uid: system.fabric._key_value_store_notification
  parent: system.fabric
  href: system.fabric._key_value_store_notification.yml
  name: KeyValueStoreNotification
  fullName: system.fabric.KeyValueStoreNotification
  type: Class
  summary: >-
    <p>Contains all the information for a replicated operation received by a secondary replica. </p>

    <p>

      <bold>Remarks:</bold>See <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</ref>.</p>
  syntax:
    content: public class KeyValueStoreNotification
- uid: system.fabric.exception._fabric_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_exception.yml
  name: FabricException
  fullName: system.fabric.exception.FabricException
  type: Class
  syntax:
    content: public class FabricException
