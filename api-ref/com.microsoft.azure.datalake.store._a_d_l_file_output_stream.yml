items:
- uid: com.microsoft.azure.datalake.store._a_d_l_file_output_stream
  id: _a_d_l_file_output_stream
  parent: com.microsoft.azure.datalake.store
  children:
  - com.microsoft.azure.datalake.store._a_d_l_file_output_stream.close()
  - com.microsoft.azure.datalake.store._a_d_l_file_output_stream.flush()
  - com.microsoft.azure.datalake.store._a_d_l_file_output_stream.setBufferSize(int)
  - com.microsoft.azure.datalake.store._a_d_l_file_output_stream.write(byte[])
  - com.microsoft.azure.datalake.store._a_d_l_file_output_stream.write(byte[],int,int)
  - com.microsoft.azure.datalake.store._a_d_l_file_output_stream.write(int)
  href: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.yml
  langs:
  - java
  name: ADLFileOutputStream
  fullName: com.microsoft.azure.datalake.store.ADLFileOutputStream
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileOutputStream.java
      branch: master
      repo: https://github.com/azure/azure-data-lake-store-java/
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileOutputStream.java
    startLine: 25
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>

      <programlisting>

        <codeline>

          <highlight class="normal">ADLFileOutputStream<sp></sp></highlight>

        </codeline>

      </programlisting> is used to add data to an Azure Data Lake File. It is a buffering stream that accumulates user writes, and then writes to the server in chunks. Default chunk size is 4MB.</p>

    <p>

      <bold>Thread-safety</bold>: Note that methods in this class are NOT thread-safe.</p>
  syntax:
    content: public class ADLFileOutputStream
  inheritance:
  - java.lang.Object
  - OutputStream
  inheritedMembers:
  - com.microsoft.azure.datalake.store._a_d_l_file_output_stream.ADLFileOutputStream(String,ADLStoreClient,boolean,String)
- uid: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.close()
  id: close()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_output_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.yml
  langs:
  - java
  name: close()
  fullName: void com.microsoft.azure.datalake.store.ADLFileOutputStream.close()
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileOutputStream.java
    startLine: 206
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public void close()
- uid: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.flush()
  id: flush()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_output_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.yml
  langs:
  - java
  name: flush()
  fullName: void com.microsoft.azure.datalake.store.ADLFileOutputStream.flush()
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileOutputStream.java
    startLine: 120
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public void flush()
- uid: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.setBufferSize(int)
  id: setBufferSize(int)
  parent: com.microsoft.azure.datalake.store._a_d_l_file_output_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.yml
  langs:
  - java
  name: setBufferSize(int newSize)
  fullName: void com.microsoft.azure.datalake.store.ADLFileOutputStream.setBufferSize(int newSize)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileOutputStream.java
    startLine: 194
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>Sets the size of the internal write buffer (default is 4MB).</p>

    <p></p>
  syntax:
    content: public void setBufferSize(int newSize)
    parameters:
    - id: newSize
      type: f75371fa
      description: <p>requested size of buffer </p>
  exceptions:
  - type: cbf33bbe
    description: <p>throws <xref href="com.microsoft.azure.datalake.store._a_d_l_exception" data-throw-if-not-resolved="false"></xref> if there is an error </p>
- uid: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.write(byte[])
  id: write(byte[])
  parent: com.microsoft.azure.datalake.store._a_d_l_file_output_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.yml
  langs:
  - java
  name: write(byte[] b)
  fullName: void com.microsoft.azure.datalake.store.ADLFileOutputStream.write(byte[] b)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileOutputStream.java
    startLine: 65
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public void write(byte[] b)
    parameters:
    - id: b
      type: bc819c2f
- uid: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.write(byte[],int,int)
  id: write(byte[],int,int)
  parent: com.microsoft.azure.datalake.store._a_d_l_file_output_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.yml
  langs:
  - java
  name: write(byte[] b, int off, int len)
  fullName: void com.microsoft.azure.datalake.store.ADLFileOutputStream.write(byte[] b, int off, int len)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileOutputStream.java
    startLine: 71
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public void write(byte[] b, int off, int len)
    parameters:
    - id: b
      type: bc819c2f
    - id: off
      type: f75371fa
    - id: len
      type: f75371fa
- uid: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.write(int)
  id: write(int)
  parent: com.microsoft.azure.datalake.store._a_d_l_file_output_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.yml
  langs:
  - java
  name: write(int b)
  fullName: void com.microsoft.azure.datalake.store.ADLFileOutputStream.write(int b)
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileOutputStream.java
    startLine: 58
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public void write(int b)
    parameters:
    - id: b
      type: f75371fa
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: bc819c2f
  spec.java:
  - name: byte[]
    fullName: byte[]
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.datalake.store._a_d_l_file_output_stream.ADLFileOutputStream(String,ADLStoreClient,boolean,String)
- uid: com.microsoft.azure.datalake.store._a_d_l_store_client
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._a_d_l_store_client.yml
  name: ADLStoreClient
  fullName: com.microsoft.azure.datalake.store.ADLStoreClient
  type: Class
  summary: >-
    <p>

      <programlisting>

        <codeline>

          <highlight class="normal">ADLStoreClient<sp></sp></highlight>

        </codeline>

      </programlisting> class represents a client to Azure Data Lake. It can be used to perform operations on files and directories. </p>
  syntax:
    content: public class ADLStoreClient
- uid: com.microsoft.azure.datalake.store._a_d_l_exception
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._a_d_l_exception.yml
  name: ADLException
  fullName: com.microsoft.azure.datalake.store.ADLException
  type: Class
  summary: <p>Exception type returned by Azure Data Lake SDK methods. Derives from <ref refid="" kindref="compound">IOException</ref>. Contains a number of additional fields that contain information about the success or failure of a server call. </p>
  syntax:
    content: public class ADLException
