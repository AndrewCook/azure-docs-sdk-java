items:
- uid: com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter
  id: _trace_telemetry_filter
  parent: com.microsoft.applicationinsights.internal.processor
  children:
  - com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter.process(Telemetry)
  - com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter.setFromSeverityLevel(String)
  - com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter.TraceTelemetryFilter()
  href: com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter.yml
  langs:
  - java
  name: TraceTelemetryFilter
  fullName: com.microsoft.applicationinsights.internal.processor.TraceTelemetryFilter
  type: Class
  source:
    remote: &o0
      path: core/src/main/java/com/microsoft/applicationinsights/internal/processor/TraceTelemetryFilter.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: core/src/main/java/com/microsoft/applicationinsights/internal/processor/TraceTelemetryFilter.java
    startLine: 49
  package: com.microsoft.applicationinsights.internal.processor
  summary: >-
    <p>The class can filter out TraceTelemetries ('LOG' telemetries) that have 'lower' severity level than needed The possible values are: OFF - Filter out ALL traces TRACE - No filtering. equals to Trace level INFO - Filter out TRACE level WARN - Filter out TRACE and INFO ERROR - Filter out WARN, INFO, TRACE CRITICAL - filter out all but CRITICAL</p>

    <p>Illegal value will prevent from the filter from being used.</p>

    <p>Created by gupele on 7/26/2016. </p>
  syntax:
    content: public class TraceTelemetryFilter implements TelemetryProcessor
  inheritance:
  - java.lang.Object
  - com.microsoft.applicationinsights.extensibility._telemetry_processor
- uid: com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter.process(Telemetry)
  id: process(Telemetry)
  parent: com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter
  href: com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter.yml
  langs:
  - java
  name: process(Telemetry telemetry)
  fullName: boolean com.microsoft.applicationinsights.internal.processor.TraceTelemetryFilter.process(Telemetry telemetry)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/processor/TraceTelemetryFilter.java
    startLine: 56
  package: com.microsoft.applicationinsights.internal.processor
  syntax:
    content: public boolean process(Telemetry telemetry)
    parameters:
    - id: telemetry
      type: com.microsoft.applicationinsights.telemetry._telemetry
    return:
      type: 4fc6e284
  overridden: com.microsoft.applicationinsights.extensibility._telemetry_processor.process(Telemetry)
- uid: com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter.setFromSeverityLevel(String)
  id: setFromSeverityLevel(String)
  parent: com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter
  href: com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter.yml
  langs:
  - java
  name: setFromSeverityLevel(String fromSeverityLevel)
  fullName: void com.microsoft.applicationinsights.internal.processor.TraceTelemetryFilter.setFromSeverityLevel(String fromSeverityLevel)
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/processor/TraceTelemetryFilter.java
    startLine: 85
  package: com.microsoft.applicationinsights.internal.processor
  syntax:
    content: public void setFromSeverityLevel(String fromSeverityLevel)
    parameters:
    - id: fromSeverityLevel
      type: "26831127"
- uid: com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter.TraceTelemetryFilter()
  id: TraceTelemetryFilter()
  parent: com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter
  href: com.microsoft.applicationinsights.internal.processor._trace_telemetry_filter.yml
  langs:
  - java
  name: TraceTelemetryFilter()
  fullName: com.microsoft.applicationinsights.internal.processor.TraceTelemetryFilter.TraceTelemetryFilter()
  type: Constructor
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/internal/processor/TraceTelemetryFilter.java
    startLine: 52
  package: com.microsoft.applicationinsights.internal.processor
  syntax:
    content: public TraceTelemetryFilter()
references:
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.applicationinsights.extensibility._telemetry_processor
  parent: com.microsoft.applicationinsights.extensibility
  href: com.microsoft.applicationinsights.extensibility._telemetry_processor.yml
  name: TelemetryProcessor
  fullName: com.microsoft.applicationinsights.extensibility.TelemetryProcessor
  type: Interface
  summary: "<p>The method gets a <ref refid=\"\" kindref=\"compound\">Telemetry</ref> instance that is ready to be sent. This is your chance to approve or deny it. Returning 'false' means that the Telemetry will not be sent while 'true' means you approve it.</p>\r\n<p>The Telemetry might go through other filters though, that might deny its sending.</p>\r\n<p>To enable this processor you need to add it in the ApplicationInsights.xml like this:</p>\r\n<p>\r\n  <preformatted>\r\n    <programlisting>\r\n      <codeline>\r\n        <highlight class=\"normal\">&lt;TelemetryProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;CustomProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;Processor<sp></sp>type=\"full.path.to.Filter\"&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;Add<sp></sp>name=\"Property\"<sp></sp>value=\"stringValue\"/&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;/Processor&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;/CustomProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">&lt;/TelemetryProcessors&gt;</highlight>\r\n      </codeline>\r\n    </programlisting> \r\n*</preformatted>\r\n</p>\r\n<p>Note that the class defines a property named 'Property' which is configured too. Every property that you wish to configure needs to have a 'setX' public method like 'setProperty' in this example <bold>Exceptions thrown from the 'setX' methods will be caught by the framework that will ignore the filter</bold></p>\r\n<p>Created by gupele on 7/26/2016. </p>"
  syntax:
    content: public interface TelemetryProcessor
- uid: com.microsoft.applicationinsights.telemetry._severity_level
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry._severity_level.yml
  name: SeverityLevel
  fullName: com.microsoft.applicationinsights.telemetry.SeverityLevel
  type: Enum
  summary: <p>Enum <xref href="com.microsoft.applicationinsights.telemetry._severity_level" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public enum SeverityLevel
- uid: com.microsoft.applicationinsights.extensibility._telemetry_processor.process(Telemetry)
  parent: com.microsoft.applicationinsights.extensibility._telemetry_processor
  href: com.microsoft.applicationinsights.extensibility._telemetry_processor.yml
  name: process(Telemetry telemetry)
  fullName: boolean com.microsoft.applicationinsights.extensibility.TelemetryProcessor.process(Telemetry telemetry)
  type: Method
  syntax:
    content: public boolean process(Telemetry telemetry)
    parameters:
    - id: telemetry
      type: com.microsoft.applicationinsights.telemetry._telemetry
    return:
      type: 4fc6e284
- uid: com.microsoft.applicationinsights.telemetry._telemetry
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: Telemetry
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry
  type: Interface
  summary: <p>The base telemetry type interface for application insights. </p>
  syntax:
    content: public interface Telemetry extends JsonSerializable
